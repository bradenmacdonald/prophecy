{"version":3,"file":"prophecy-dist.js","sources":["node_modules/immutable/dist/immutable.js","dist/util.js","dist/precord.js","dist/currency.js","dist/account.js","dist/pdate.js","dist/category.js","dist/transaction.js","dist/budget.js","dist/redux/actions.js","dist/redux/prophecy_redux.js","dist/prophecy.js"],"sourcesContent":["/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32âˆ’1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));","/**\n * Throw an error if the given condition is ever false.\n *\n * @param {boolean} cond - Condition that is expected to be true\n * @param {string} [msg] - Message to display if this assertion fails\n */\nexport function assert(cond, msg) {\n    if (!cond) {\n        throw Error(msg || \"Assertion Failed\");\n    }\n}\n/**\n * Throw an error if the given value is not a number\n *\n * @param {*} v - Value that is expected to be a Number\n */\nexport function assertIsNumber(v) {\n    assert(typeof v === \"number\" && !Number.isNaN(v), \"Expected a number.\");\n}\n/**\n * Throw an error if the given value is not a positive integer, or null\n *\n * @param {*} v - Value that is expected to be a positive integer or null\n */\nexport function assertPositiveIntegerOrNull(v) {\n    assert(v === null || (typeof v === \"number\" && parseInt(v.toString(), 10) === v && v > 0), \"Expected a positive integer, or null.\");\n}\n/**\n * ValidationResult: Used with PRecord to provide detailed, flexible,\n * contextual validation of model data.\n */\nexport class ValidationResult {\n    constructor() {\n        this.__validationMessages = [];\n    }\n    get warnings() {\n        return this.__validationMessages.filter(msg => msg.type === \"warning\" /* Warning */);\n    }\n    get errors() {\n        return this.__validationMessages.filter(msg => msg.type === \"error\" /* Error */);\n    }\n    getFieldIssues(fieldName) {\n        return this.__validationMessages.filter(msg => msg.field === fieldName);\n    }\n    /**\n     * Get an array of all validation issues that are not specific to any one field.\n     */\n    get overallIssues() {\n        return this.getFieldIssues(null);\n    }\n    get allIssues() {\n        return Object.freeze(this.__validationMessages);\n    }\n    /** Internal method for use by ValidationContext only. */\n    _pushMessage(type, message, field) {\n        this.__validationMessages.push(Object.freeze({ field, type, message }));\n    }\n}\nValidationResult.Warning = \"warning\" /* Warning */;\nValidationResult.Error = \"error\" /* Error */;\n/**\n * Context during which PRecord validation happens.\n * This contains a reference to the budget that the PRecord in question\n * will become part of.\n */\nexport class ValidationContext {\n    constructor(budget) {\n        this.validationResult = new ValidationResult();\n        this.budget = budget;\n    }\n    /**\n     * Add a warning to the validation result.\n     *\n     * @param {string|null} field - The field that this warning is about,\n     * or null for warnings that involve multiple fields.\n     * @param {*} message - A string describing the validation issue.\n     */\n    addWarning(field, message) {\n        this.validationResult._pushMessage(\"warning\" /* Warning */, message, field);\n    }\n    /**\n     * Add an error to the validation result.\n     *\n     * @param {string|null} field - The field that this error is about,\n     * or null for warnings that involve multiple fields.\n     * @param {*} message - A string describing the validation issue.\n     */\n    addError(field, message) {\n        this.validationResult._pushMessage(\"error\" /* Error */, message, field);\n    }\n    get result() { return Object.freeze(this.validationResult); }\n}\nexport { PRecord } from './precord';\n// i18n placeholders:\n/**\n * Replace the given English text with a localized version.\n * This is currently just a placeholder.\n *\n * @param {string} str - The text to localize\n * @returns {string} The localized text.\n */\nexport function __(str) { return str; }\n//# sourceMappingURL=util.js.map","import Immutable from 'immutable';\nimport {ValidationContext} from './util';\n\n\n\n// This file is kept in JavaScript until Immutable 4+ is out, as it seems this\n// is the simplest way to get TypeScript to create fully typed PRecord classes.\n\n\n\n/**\n * PRecord: Immutable.Record with a bit of extra functionality\n *\n * Has a _checkInvariants method which can be used to check invariants\n * whenever a new Record is created.\n *\n * Has detailed validation and error/warning reporting functionality.\n *\n * @param {Object} defaultValues - Definition of the fields that this PRecord will have\n * @returns {*} - A class that can be extended to create a new PRecord subclass\n */\nexport const PRecord = (defaultValues) => class extends Immutable.Record(defaultValues) {\n    constructor(values) {\n        super(values);\n        this._skipChecks = false;\n        this._checkInvariants();\n    }\n    /**\n     * Add some safety checks to the inherited 'set()' method, since it creates\n     * Record objects without using the constructor\n     * @param {string} k - Key to set\n     * @param {*} v - Value to set\n     * @returns {Object} - New instance of this Record subclass with the given changes.\n     */\n    set(k, v) {\n        const result = super.set(k, v);\n        if (!this._skipChecks) {\n            result._checkInvariants();\n        }\n        return result;\n    }\n    /**\n     * Add some safety checks to the inherited 'withMutations()' method, since it creates\n     * Record objects without using the constructor\n     * \n     * Here we only do one check after any and all changes are applied. This lets\n     * many changes be made at once, and _checkInvariants only runs once.\n     * \n     * @param {function} fn - Mutator function\n     * @returns {Object} - New instance of this Record subclass with the given changes.\n     */\n    withMutations(fn) {\n        return super.withMutations(newRecord => {\n            newRecord._skipChecks = true;\n            fn(newRecord);\n            newRecord._skipChecks = false;\n            newRecord._checkInvariants();\n        });\n    }\n    /**\n     * Assertions to help enforce correct usage.\n     * \n     * These invariants should include things like type checks, but\n     * should be somewhat tolerant of incomplete or inconsistent\n     * information - that way, PRecord subclasses can still be used\n     * to hold the data for a form as the user fills it out in the UI,\n     * for example.\n     * \n     * More final and contextual validation should take place in\n     * _validate().\n     **/\n    _checkInvariants() {}\n\n    /**\n     * Validate this record.\n     * @param {ValidationContext} context - the ValidationContext that specifies the\n     * budget that this record will become part of, and provides a place to store the\n     * result.\n     */\n    _validate(context) {}  // eslint-disable-line no-unused-vars\n\n    /**\n     * Validate this PRecord subclass.\n     * Returns an instance of ValidationResult.\n     * \n     * @param {Budget} budget - the Prophecy Budget that this record will be part of.\n     * @returns {ValidationResult}\n     */\n    validateForBudget(budget) {\n        const context = new ValidationContext(budget);\n        this._validate(context);\n        return context.result;\n    }\n\n    /**\n     * Validate this record and throw an exception if any errors are found.\n     * @param {Budget} budget - the Prophecy Budget that this record will be part of.\n     */\n    assertIsValidForBudget(budget) {\n        const validationResult = this.validateForBudget(budget);\n        if (validationResult.errors.length > 0) {\n            let message = `${this.constructor.name} validation failed:\\n`;\n            validationResult.errors.forEach(err => message += ` * ${err.message} (${err.field})\\n`);\n            throw Error(message);\n        }\n    }\n\n    /**\n     * Convert from a JSON-friendly native JavaScript object to this PRecord type.\n     * @param {Object} obj - JavaScript serialized representation of an instance of this Record subclass.\n     * @returns {Object} - New instance of this PRecord subclass.\n     */\n    static fromJS(obj) {\n        return new this(obj);\n    }\n\n    /**\n     * Make toJSON an alias of toJS, so PRecord works with JSON.stringify()\n     *\n     * @returns {Object} - JSON-serialized version of this PRecord subclass.\n     */\n    toJSON() { return this.toJS(); }\n}\n","import { __, assertIsNumber } from './util';\nconst _CODE = Symbol(\"code\"); // Internal key used to make 'code' read-only\n/** Class that describes a real-world currency. */\nexport class Currency {\n    /**\n     * Create a currency description.\n     * @param {string} code - the ISO 4217 currency code (three characters)\n     * @param {string} name - the full name of the currency (\"Canadian Dollar\")\n     * @param {string[]} symbols - the symbols for this currency in order from most to least\n     *                           ambiguous (e.g. [\"$\", \"CA$\"])\n     * @param {number} decimals - The maximum number of decimal places that this currency can\n     *                            support (e.g. '2' means $0.01 is the smallest amount.)\n     */\n    constructor(code, name, symbols, decimals = 2) {\n        this.code = code;\n        this.name = name;\n        this.symbols = symbols;\n        this.decimals = decimals;\n    }\n    /**\n     * Round a given amount of this currency to the minimum supported value.\n     * For dollars, this will round to the nearest $0.01\n     * This is not meant for cash transactions, where the rounding rules are different\n     * (https://en.wikipedia.org/wiki/Cash_rounding for more details on that).\n     * This is generally the same as integer rounding because currency amounts are represented\n     * as floating-point numbers multiplied by the minimal number of decimal places the currency\n     * supports - so $3.2105 is stored as '321.05' and rounded to '312' or $3.21 exactly.\n     * @param {number} amount - The amount/value to round.\n     * @returns {number} The rounded amount/value.\n     */\n    roundAmount(amount) { return Math.round(amount); }\n    /**\n     * Custom JSON serialization\n     * @returns {string} - This currency's currency code.\n     */\n    toJSON() { return this.code; }\n}\n/** Global constant map listing supported currencies. */\nexport const SUPPORTED_CURRENCIES = Object.freeze({\n    CAD: new Currency(\"CAD\", __(\"Canadian dollar\"), [\"$\", \"C$\"]),\n    EUR: new Currency(\"EUR\", __(\"Euro\"), [\"â‚¬\"]),\n    USD: new Currency(\"USD\", __(\"United States dollar\"), [\"$\", \"US$\"]),\n    HKD: new Currency(\"HKD\", __(\"Hong Kong dollar\"), [\"$\", \"HK$\"]),\n    JPY: new Currency(\"JPY\", __(\"Japanese yen\"), [\"Â¥\"], 0),\n    XBT: new Currency(\"XBT\", __(\"Bitcoin\"), [\"\\u20BF\"], 8),\n});\nclass CustomNumberFormat extends Intl.NumberFormat {\n}\nexport class CurrencyFormatter {\n    constructor(defaultCurrency, locales) {\n        this.defaultCurrency = defaultCurrency;\n        this.locales = locales || 'en'; // Define a default locale for consistency\n        // Cached NumberFormat instances, keyed by currency code:\n        this.rawFormatters = {};\n        this.formatters = {};\n    }\n    /**\n     * Given an amount and a Currency, format the amount appropriately as a plain text string.\n     * Note: it would be nice to just use toLocaleString() as follows:\n     *    amount.toLocaleString(\"en-US\", {style: \"currency\", currency: \"CAD\"})\n     * However, that does not support Bitcoin.\n     * @param {number} amount - the amount to format\n     * @param {Currency=} currency - one of the currencies from SUPPORTED_CURRENCIES (optional)\n     * @return {string} The amount, formatted as a string.\n     */\n    formatAmount(amount, currency) {\n        assertIsNumber(amount);\n        if (currency === undefined) {\n            currency = this.defaultCurrency;\n        }\n        let formatter = this.formatters[currency.code];\n        if (formatter === undefined) {\n            formatter = this.formatters[currency.code] = new CustomNumberFormat(this.locales, {\n                style: \"currency\",\n                // The currency argument is supposed to be the ISO 4217 currency code, but\n                // according to the spec (http://www.ecma-international.org/ecma-402/1.0/#sec-6.3)\n                // if we pass an unknown currency code, the 'currency' agument is used as the\n                // symbol. So pass a generic/fake code, and we'll later replace it with the\n                // correct symbol. That way, we get the symbol in the correct place for the\n                // user's locale, but we can also support currencies like Bitcoin that the\n                // Javascript runtime may not natively support.\n                currency: \"XCC\",\n                minimumFractionDigits: Math.min(2, currency.decimals),\n                maximumFractionDigits: currency.decimals,\n            });\n            let symbol = currency.symbols[0];\n            const isDefaultCurrency = (currency.code === this.defaultCurrency.code);\n            const symbolConflicts = (!isDefaultCurrency && symbol === this.defaultCurrency.symbols[0]);\n            if (symbolConflicts && currency.symbols.length > 1) {\n                symbol = currency.symbols[1];\n            }\n            formatter.symbol = symbol;\n        }\n        return formatter.format(amount * Math.pow(10, -currency.decimals)).replace(\"XCC\", formatter.symbol);\n    }\n    /**\n     * Given an amount and a Currency, format the amount as a plain text string with no symbol.\n     * @param {number} amount - the amount to format\n     * @param {Currency=} currency - one of the currencies from SUPPORTED_CURRENCIES (optional)\n     * @return {string} The amount, formatted as a string, but without any currency symbol.\n     */\n    formatAmountRaw(amount, currency) {\n        assertIsNumber(amount);\n        if (currency === undefined) {\n            currency = this.defaultCurrency;\n        }\n        let formatter = this.rawFormatters[currency.code];\n        if (formatter === undefined) {\n            formatter = this.rawFormatters[currency.code] = new Intl.NumberFormat(this.locales, {\n                minimumFractionDigits: Math.min(2, currency.decimals),\n                maximumFractionDigits: currency.decimals,\n            });\n        }\n        return formatter.format(amount * Math.pow(10, -currency.decimals));\n    }\n}\n//# sourceMappingURL=currency.js.map","import * as Immutable from 'immutable';\nimport { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport { assert, assertIsNumber, PRecord } from './util';\n/**\n * Account: Represents a bank account, credit card, or a concept like \"Cash\"\n */\nexport class Account extends PRecord({\n    id: null,\n    name: \"\",\n    initialBalance: 0,\n    /** the ISO 4217 currency code */\n    currencyCode: \"USD\",\n    /* Arbitrary data defined by the user */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Account.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assert(this.currency instanceof Currency); // Check that currencyCode is valid.\n        assertIsNumber(this.initialBalance);\n        assert(Immutable.Map.isMap(this.metadata));\n    }\n    /** Get the currency of this account. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * an Account object.\n     *\n     * The result of this function can be passed to the Account constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this account\n     * @returns {Object} - Cleaned values for the fields of this account\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if ('metadata' in values && !Immutable.Map.isMap(values.metadata)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n//# sourceMappingURL=account.js.map","/* tslint:disable:no-bitwise whitespace */\nconst MONTHS = Object.freeze({\n    JAN: 0,\n    FEB: 1,\n    MAR: 2,\n    APR: 3,\n    MAY: 4,\n    JUN: 5,\n    JUL: 6,\n    AUG: 7,\n    SEP: 8,\n    OCT: 9,\n    NOV: 10,\n    DEC: 11,\n});\nconst DAYS = Object.freeze({\n    SUN: 0,\n    MON: 1,\n    TUE: 2,\n    WED: 3,\n    THU: 4,\n    FRI: 5,\n    SAT: 6,\n});\nconst MONTH_SUMS_NORMAL_YEAR = Object.freeze([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);\nconst MONTH_SUMS_LEAP_YEAR = Object.freeze([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);\n// The following maps convert from day of the year (e.g. 0 for Jan. 1) to month ('A' = Jan, 'B' = Feb, ...)\n// These maps are precomputed to make the date class highly efficient.\nconst NORMAL_YEAR = (\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\" +\n    \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\" +\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\" +\n    \"JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\");\nconst LEAP_YEAR = (\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\" +\n    \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\" +\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\" +\n    \"JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\");\nconst DAYS_PER_MONTH = Object.freeze([\n    /* Jan */ 31, undefined, /* Mar */ 31, /* Apr */ 30, /* May */ 31, /* Jun */ 30,\n    /* Jul */ 31, /* Aug */ 31, /* Sep */ 30, /* Oct */ 31, /* Nov */ 30, /* Dec */ 31,\n]);\n/**\n * Internal helper method.\n * Given a year, month, and day triplet, return\n * the number of days between January 1, 2000 and the given date.\n *\n * @param {number} year - Year (e.g. 2012)\n * @param {number} month - Month (0 for January, 11 for December)\n * @param {number} day - Day (1-31)\n * @returns {number}\n */\nfunction triplet_to_days_value(year, month, day) {\n    if (day <= 0 || day > PDate.daysInMonth(year, month)) { // daysInMonth verifies the year/month range.\n        throw new Error(\"Invalid date argument: day is out of range.\");\n    }\n    const nyear = (year - 2000 | 0);\n    let daysValue = (nyear * 365) + ((nyear + 3) / 4 | 0) - ((nyear + 99) / 100 | 0) + ((nyear + 399) / 400 | 0);\n    // Compute the number of days between the first day of the year and the first day of the month:\n    daysValue += PDate.isLeapYear(year) ? MONTH_SUMS_LEAP_YEAR[month] : MONTH_SUMS_NORMAL_YEAR[month];\n    daysValue += day - 1;\n    return daysValue;\n}\nexport default class PDate {\n    /**\n     * Construct a PDate instance using its internal int representation (# of days since the millenium)\n     * @param {Number} daysSinceMillenium - number representing the date\n     */\n    constructor(daysSinceMillenium) {\n        if (daysSinceMillenium < 0 || daysSinceMillenium > 365615) { // 365615 is Dec. 31, 3000\n            throw new Error(\"Date value out of range.\");\n        }\n        this.value = daysSinceMillenium;\n    }\n    /**\n     * Construct a Date from a triple of year, month (0-11), day (1-31)\n     * @param {number} year - Year (e.g. 2012)\n     * @param {number} month - Month (0 for January, 11 for December)\n     * @param {number} day - Day (1-31)\n     * @returns {PDate}\n     */\n    static create(year, month, day) {\n        return new PDate(triplet_to_days_value(year, month, day));\n    }\n    /**\n     * Construct a Date from an ISO 8601 date string \"YYYY-MM-DD\" or \"YYYYMMDD\"\n     * @param {string} str - An ISO 8601 date string\n     * @returns {PDate}\n     */\n    static fromString(str) {\n        const year = parseInt(str.substr(0, 4), 10);\n        let month = NaN;\n        let day = NaN;\n        if (str.length === 10 && str.charAt(4) === '-' && str.charAt(7) === '-') {\n            // YYYY-MM-DD format, presumably:\n            month = parseInt(str.substr(5, 2), 10);\n            day = parseInt(str.substr(8, 2), 10);\n        }\n        else if (str.length === 8 && String(parseInt(str, 10)) === str) {\n            // YYYYMMDD format, presumably.\n            // (Note we check 'String(parseInt(str, 10)) === str' to avoid matching things like '05/05/05')\n            month = parseInt(str.substr(4, 2), 10);\n            day = parseInt(str.substr(6, 2), 10);\n        }\n        if (isNaN(year) || isNaN(month) || isNaN(day)) {\n            throw new Error(\"Date string not in YYYY-MM-DD or YYYYMMDD format\");\n        }\n        return new PDate(triplet_to_days_value(year, month - 1, day));\n    }\n    /**\n     * Parse a template string literal, e.g. const D = PDate.parseTemplateLiteral; const date1 = D`2016-01-01`;\n     * @param {Object} strings Well-formed template call site object\n     * @param {...*} keys - substitution values\n     * @returns {PDate}\n     */\n    static parseTemplateLiteral(strings, ...keys) {\n        return PDate.fromString(String.raw(strings, ...keys));\n    }\n    /**\n     * Get the current date, according to the system's local time\n     * @returns {PDate}\n     */\n    static today() {\n        const jsDate = new Date();\n        return new PDate(triplet_to_days_value(jsDate.getFullYear(), jsDate.getMonth(), jsDate.getDate()));\n    }\n    /**\n     * Custom JSON serialization\n     * @returns {number}\n     */\n    toJSON() { return this.value; }\n    /**\n     * Custom serialization when used with Immutable.js\n     * @returns {number}\n     */\n    toJS() { return this.value; }\n    /**\n     * Get the year (2000-3000)\n     * @returns {number}\n     */\n    get year() {\n        // This formula is valid for any year 2000 or later\n        const centuries = this.value / 36525 | 0;\n        return (2000 + (this.value + centuries - (centuries / 4 | 0)) / 365.25) | 0;\n    }\n    /**\n     * Get the month (0-11)\n     * @returns {number}\n     */\n    get month() {\n        const nyear = this.year - 2000;\n        // Compute the number of days between January 1, 2000 and the first day of the given year:\n        const d = (nyear * 365) + ((nyear + 3) / 4 | 0) - ((nyear + 99) / 100 | 0) + ((nyear + 399) / 400 | 0);\n        const A = 'A'.charCodeAt(0);\n        if (PDate.isLeapYear(nyear)) { // Note: isLeapYear() works with an absolute year ('2015') or relative to 2000 ('15')\n            return LEAP_YEAR.charCodeAt(this.value - d) - A;\n        }\n        else {\n            return NORMAL_YEAR.charCodeAt(this.value - d) - A;\n        }\n    }\n    /**\n     * Get the day of the month (1-31)\n     * @returns {number}\n     */\n    get day() {\n        return this.value - triplet_to_days_value(this.year, this.month, 1) + 1;\n    }\n    /** Get the day of the week (0 = Sunday, 6 = Saturday) */\n    get dayOfWeek() { return (this.value + 6) % 7; }\n    /** Get the day of the year (0-365) */\n    get dayOfYear() { return this.value - triplet_to_days_value(this.year, 0, 1); }\n    /**\n     * Get the date as an ISO 8601 string (\"2015-01-25\")\n     * @returns {string}\n     */\n    toString() {\n        const year = this.year;\n        const month = this.month + 1;\n        const day = this.day;\n        return year.toString() + (month < 10 ? \"-0\" : \"-\") + month + (day < 10 ? \"-0\" : \"-\") + day;\n    }\n    /**\n     * Get the primitive value (enables correct sorting and comparison)\n     * Except note that equality checking won't work unless you coerce values\n     * e.g. PDate.create(2010, 1, 1) == PDate.create(2010, 1, 1) : false\n     * e.g. PDate.create(2010, 1, 1) == +PDate.create(2010, 1, 1) : true\n     * @returns {number}\n     */\n    valueOf() { return this.value; }\n    /**\n     * Helper method: how many days are in the specified month of the specified year?\n     * @param {number} year - Year\n     * @param {number} month - Month (0-11)\n     * @returns {number}\n     */\n    static daysInMonth(year, month) {\n        if (!(year >= 2000 && year <= 3000) ||\n            !(month >= MONTHS.JAN && month <= MONTHS.DEC)) {\n            throw new Error(\"Invalid year or month value.\");\n        }\n        if (month === MONTHS.FEB) {\n            return PDate.isLeapYear(year) ? 29 : 28;\n        }\n        return DAYS_PER_MONTH[month];\n    }\n    /**\n     * Is 'year' a leap year? Can be an absolute year (e.g. 2016) or relative to the millenium (e.g. 16).\n     * @param {number} year - The year in question\n     * @returns {boolean}\n     */\n    static isLeapYear(year) { year = year | 0; return (year % 4 === 0) && (year % 100 !== 0 || year % 400 === 0); }\n    // Constants\n    static get DAYS() { return DAYS; }\n    static get MONTHS() { return MONTHS; }\n}\n//# sourceMappingURL=pdate.js.map","import * as Immutable from 'immutable';\nimport { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport { default as PDate } from './pdate';\nimport { assert, assertIsNumber, assertPositiveIntegerOrNull, PRecord } from './util';\nexport var CategoryRulePeriod;\n(function (CategoryRulePeriod) {\n    CategoryRulePeriod[CategoryRulePeriod[\"Day\"] = 2] = \"Day\";\n    CategoryRulePeriod[CategoryRulePeriod[\"Week\"] = 3] = \"Week\";\n    CategoryRulePeriod[CategoryRulePeriod[\"Month\"] = 4] = \"Month\";\n    CategoryRulePeriod[CategoryRulePeriod[\"Year\"] = 5] = \"Year\";\n})(CategoryRulePeriod || (CategoryRulePeriod = {}));\nconst allowedRuleValues = [CategoryRulePeriod.Day, CategoryRulePeriod.Week, CategoryRulePeriod.Month, CategoryRulePeriod.Year];\nexport class CategoryRule extends PRecord({\n    amount: 0.0,\n    /** Start date for this rule, if any. */\n    startDate: null,\n    /** End date for this rule, if any. Must be after startDate but need not be within the budget period. */\n    endDate: null,\n    /** repeatN: If this rule is \"Repeat every 6 weeks\", this will be 6. If period is null, this value is meaningless. */\n    repeatN: 1,\n    /** period: one of the CategoryRulePeriod values or null (for spending that happens on one day or randomly throughout the budget) */\n    period: null,\n}) {\n    constructor(values) {\n        super(CategoryRule.cleanArgs(values || {}));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertIsNumber(this.amount);\n        assertIsNumber(this.repeatN);\n        assert((this.repeatN >>> 0) === this.repeatN, \"repeatN must be a positive integer.\"); // tslint:disable-line:no-bitwise\n        assert(this.startDate === null || this.startDate instanceof PDate);\n        assert(this.endDate === null || this.endDate instanceof PDate);\n        assert(this.period === null || allowedRuleValues.indexOf(this.period) !== -1, \"period must be null or one of the allowed period constants.\");\n    }\n    /**\n     * countOccurrencesBetween: Based on this rule, determine how many times this amount is repeated\n     * between dateBegin and DateEnd.\n     *\n     * For example, if startDate is 2014-01-01, endDate is null, repeatN is 1, and period is Month\n     * (repeat every month from Jan 1, 2014 onward), then counOccurrencesBetween(2016-01-01, 2016-12-31)\n     * will return 12.\n     * @param {PDate} dateBegin - Start date of the period in question (inclusive)\n     * @param {PDate} dateEnd - End date of the period in question (inclusive)\n     * @returns {number}\n     */\n    countOccurrencesBetween(dateBegin, dateEnd) {\n        assert(dateBegin instanceof PDate);\n        assert(dateEnd instanceof PDate);\n        assert(dateEnd >= dateBegin);\n        // Short circuit checks:\n        if (this.startDate && dateEnd < this.startDate) {\n            return 0; // This rule doesn't start until after the date range in question has ended.\n        }\n        if (this.endDate && dateBegin > this.endDate) {\n            return 0; // This rule ended before the date range in question began\n        }\n        if (this.period === null) {\n            // This is not a repeating rule. We only have to consider startDate and endDate, which we did just above.\n            return 1;\n        }\n        // Step 1: Compute the # of occurrences between this.startDate (if set) and the earlier of [this.endDate, dateEnd]\n        const firstDay = this.startDate || dateBegin;\n        const lastDay = (this.endDate && this.endDate < dateEnd) ? this.endDate : dateEnd;\n        const daysDiff = Math.max(0, (+lastDay) - (+firstDay)); // daysDiff should never be negative\n        let result = null;\n        if (this.period === CategoryRulePeriod.Day) {\n            result = Math.floor(daysDiff / this.repeatN) + 1; // Never return a negative value\n        }\n        else if (this.period === CategoryRulePeriod.Week) {\n            result = Math.floor(daysDiff / (this.repeatN * 7)) + 1; // Note: we know repeatN > 0\n        }\n        else if (this.period === CategoryRulePeriod.Month) {\n            const months = (lastDay.year - firstDay.year) * 12\n                + (lastDay.month - firstDay.month)\n                + (lastDay.day >= firstDay.day ? 1 : 0);\n            result = Math.floor((months - 1) / this.repeatN) + 1; // Note that when repeatN = 1, this simplifies to 'result = months'\n        }\n        else if (this.period === CategoryRulePeriod.Year) {\n            result = ((lastDay.year - firstDay.year) +\n                (lastDay.month > firstDay.month || (lastDay.month === firstDay.month && lastDay.day >= firstDay.day) ? 1 : 0));\n        }\n        else {\n            throw new Error(\"invalid period\");\n        }\n        // Step 2: if dateBegin falls after this.startDate, subtract the number of occurrences\n        // between this.startDate and the day before dateBegin:\n        if (firstDay < dateBegin) {\n            result -= this.countOccurrencesBetween(firstDay, new PDate(+dateBegin - 1));\n        }\n        return result;\n    }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a CategoryRule object.\n     *\n     * The result of this function can be passed to the CategoryRule constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this CategoryRule\n     * @returns {Object} - Cleaned values for the fields of this CategoryRule\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if (typeof values.startDate === 'number') {\n            values.startDate = new PDate(values.startDate);\n        }\n        if (typeof values.endDate === 'number') {\n            values.endDate = new PDate(values.endDate);\n        }\n        return values;\n    }\n}\n/**\n * Category: Represents a category of spending, such as \"Rent\", \"Groceries\", \"Insurance\", etc.\n */\nexport class Category extends PRecord({\n    id: null,\n    name: \"\",\n    /**\n     * Rules: a set of Rule objects defining expected spending in this category such as \"$10 per day\"\n     *\n     * If rules === null, this is an \"Automatic\" category, which means that the total amount expected\n     * to be spent over the budget period should be computed from existing + pending transactions\n     * in this category\n     *\n     * If rules is a List (even an empty list), then it the total amount to be spent during the budget\n     * is to be calculated based on the rules. (Or is $0 if the rules list is empty)\n     */\n    rules: null,\n    /** Notes - custom text editable by the user */\n    notes: \"\",\n    /** the ISO 4217 currency code */\n    currencyCode: \"USD\",\n    /** Which CategoryGroup this category belongs to. */\n    groupId: null,\n    /** Metadata - meaning depends on the user/application */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Category.cleanArgs(values || {}));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertPositiveIntegerOrNull(this.id);\n        assertPositiveIntegerOrNull(this.groupId);\n        if (this.rules !== null) {\n            assert(Immutable.List.isList(this.rules));\n            this.rules.forEach(rule => { assert(rule instanceof CategoryRule); });\n        }\n        assert(this.currency instanceof Currency); // Check that currencyCode is valid.\n        assert(Immutable.Map.isMap(this.metadata));\n    }\n    _validate(context) {\n        // Group must be valid\n        const groups = context.budget.categoryGroups;\n        if (this.groupId === null || !groups.has(this.groupId)) {\n            context.addError(null, \"Every Category must be assigned to a valid CategoryGroup.\");\n        }\n        // Ensure that no rules overlap:\n        if (this.rules !== null) {\n            const rules = this.rules;\n            rules.forEach((rule, i) => {\n                rules.forEach((otherRule, j) => {\n                    if (i !== j) {\n                        const otherStartDate = otherRule.startDate || context.budget.startDate;\n                        const otherEndDate = otherRule.endDate || context.budget.endDate;\n                        if (rule.countOccurrencesBetween(otherStartDate, otherEndDate) !== 0) {\n                            context.addError('rules', \"A budget category's rules must not overlap.\");\n                        }\n                    }\n                });\n            });\n        }\n    }\n    /** Is this an \"automatic\" category (see 'rules' attribute)? */\n    get isAutomatic() { return this.rules === null; }\n    /** Get the currency of this category. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a Category object.\n     *\n     * The result of this function can be passed to the Category constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this category\n     * @returns {Object} - Cleaned values for the fields of this category\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if (values.rules !== undefined && values.rules !== null) {\n            // 'rules' can be any iterable with CategoryRule-typed values or\n            // objects used to initialize CategoryRule\n            values.rules = Immutable.List(values.rules.map((r) => r instanceof CategoryRule ? r : new CategoryRule(r)));\n        }\n        if ('metadata' in values && !Immutable.Map.isMap(values.metadata)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n/**\n * CategoryGroup: Represents an ordered group of categories.\n */\nexport class CategoryGroup extends PRecord({\n    /** Unique integer ID of this category group */\n    id: null,\n    /** The name of this category group */\n    name: \"\",\n}) {\n}\n//# sourceMappingURL=category.js.map","import * as Immutable from 'immutable';\nimport { default as PDate } from './pdate';\nimport { __, assert, assertIsNumber, assertPositiveIntegerOrNull, PRecord } from './util';\nexport class TransactionDetail extends PRecord({\n    amount: 0.0,\n    description: \"\",\n    categoryId: null,\n}) {\n}\n/**\n * Transaction: Represents a change in the balance of an account.\n * Has an amount, who (who the money went to / came from), description,\n * category, and more.\n * e.g. '$20 from Chequing account went to SomeCo Inc. to buy a Widget'\n * Can be split - e.g. 'Sent $17 to Tom - $10 for gas and $7 for coffee'\n */\nexport class Transaction extends PRecord({\n    id: null,\n    date: null,\n    accountId: null,\n    who: \"\",\n    /**\n     * detail: The amount, description, and category of this transaction.\n     * Usually a single-item list except for split transactions.\n     */\n    detail: Immutable.List.of(new TransactionDetail()),\n    userId: null,\n    /**\n     * pending transactions affect the budget if their date is today or past.\n     * If their day is in the future, they don't.\n     * pending transactions never affect the account balances.\n     */\n    pending: true,\n    /**\n     * isTransfer:\n     * Transfers between accounts (especially of different currencies) require special treatment.\n     *\n     * A typical transfer from e.g. \"Chequing to Savings\" would be represented as two transactions:\n     * One transaction with a negative amount and its accountId set to the chequing account, and\n     * one transaction with a positive amount and its accountId set to the savings account.\n     *\n     * This approach allows Prophecy to model complex transfers, e.g. where the money arrives\n     * in the destination account on a different day than it was sent from the first account\n     * (very common with e.g. credit card payments), or where the two accounts have different\n     * currencies.\n     *\n     * Transfer transactions must not have a budget category assigned, because they are not an expense\n     * nor income.\n     *\n     * In a single-currency budget, the sum of all transfer transactions should be zero.\n     * In a multi-currency budget, the sum of all transfer transactions may not be zero,\n     * even when converted to the same currency, because of losses due to currency conversion.\n     */\n    isTransfer: false,\n    /* Arbitrary data defined by the user */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Transaction.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertPositiveIntegerOrNull(this.id);\n        assert(this.date === null || this.date instanceof PDate);\n        assertPositiveIntegerOrNull(this.accountId);\n        assert(Immutable.List.isList(this.detail));\n        assert(this.detail.size > 0);\n        this.detail.forEach(entry => {\n            if (!(entry instanceof TransactionDetail)) {\n                throw new Error('transaction .detail must be TransactionDetail instances');\n            }\n            assertIsNumber(entry.amount);\n            assert(typeof entry.description === 'string');\n            assertPositiveIntegerOrNull(entry.categoryId);\n            if (this.isTransfer) {\n                assert(entry.categoryId === null, \"Do not set a category for transfer transactions.\");\n            }\n        });\n        assert(Immutable.Map.isMap(this.metadata));\n    }\n    _validate(context) {\n        let account = null;\n        if (this.accountId !== null) {\n            // An accountID is set - is it valid?\n            account = context.budget.accounts.get(this.accountId);\n            if (!account) {\n                context.addError('accountId', \"Invalid account.\");\n            }\n        }\n        else {\n            // The accountId is null - is that OK?\n            if (this.amount === 0 || this.pending) {\n                // Yes, that's fine. If the amount is $0 or the transaction is pending, the account does not matter.\n            }\n            else {\n                context.addWarning('accountId', __(\"Set the account of this transaction.\"));\n            }\n        }\n        this.detail.forEach(detail => {\n            if (detail === undefined) {\n                throw new Error('Unexpectedly undefined detail entry.');\n            }\n            if (detail.categoryId !== null) {\n                const category = context.budget.categories.get(detail.categoryId) || null;\n                if (category) {\n                    if (account) {\n                        // Check that the account's currency matches the category's currency\n                        if (account.currencyCode !== category.currencyCode) {\n                            context.addError('detail', \"A Transaction's category's currency must match its account currency.\");\n                        }\n                    }\n                }\n                else {\n                    context.addError('detail', \"Invalid category.\");\n                }\n            }\n            else {\n                // No category is set - is that OK?\n                if (this.amount === 0 || this.pending || this.isTransfer) {\n                    // Yes, that's fine.\n                }\n                else {\n                    context.addWarning('detail', __(\"This transaction is missing a category.\"));\n                }\n            }\n        });\n    }\n    /** Is this a split transaction? */\n    get isSplit() { return this.detail.size > 1; }\n    /** Get the sum of the amounts of the 'detail' entries */\n    get amount() {\n        if (this._cachedAmount === undefined) {\n            this._cachedAmount = this.detail.reduce((acc, detailEntry) => acc + detailEntry.amount, 0);\n        }\n        return this._cachedAmount;\n    }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a Transaction object.\n     *\n     * The result of this function can be passed to the Transaction constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this transaction\n     * @returns {Object} - Cleaned values for the fields of this transaction\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if (typeof values.date === 'number') {\n            values.date = new PDate(values.date);\n        }\n        else {\n            assert(values.date === null || values.date === undefined || values.date instanceof PDate, 'invalid date value');\n        }\n        if (values.detail !== undefined) {\n            // 'detail' can be any iterable with TransactionDetail-typed values or\n            // objects used to initialize TransactionDetail\n            values.detail = Immutable.List(values.detail.map(d => d instanceof TransactionDetail ? d : new TransactionDetail(d)));\n        }\n        if ('metadata' in values && !Immutable.Map.isMap(values.metadata)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n//# sourceMappingURL=transaction.js.map","import * as Immutable from 'immutable';\nimport { Account } from './account';\nimport { Category, CategoryGroup } from './category';\nimport { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport PDate from './pdate';\nimport { Transaction } from './transaction';\nimport { __, assert, assertIsNumber, PRecord } from './util';\n// Private constants used to create private fields on a Record subclass:\n// Unfortunately we cannot use Symbols, since Immutable.Record keys must be strings.\n// The value of these strings doesn't matter, as long as they're unique.\n/** Key for private field containing OrderedMap of accounts */\nconst _accounts = \"^a\";\n/** Key for private field containing Map of categories */\nconst _categories = \"^c\";\n/** Key for private field containing OrderedMap of category groups */\nconst _categoryGroups = \"^g\";\n/** Key for private field containing OrderedMap of transactions */\nconst _transactions = \"^n\";\n// Prophecy/Budget class version\n// The major version should be changed when backwards compatibility is broken.\n// The minor version should be changed when new features are added in a backwards-compatible way.\nexport const majorVersion = 0;\nexport const minorVersion = 3;\nexport const AccountMap = (arg) => Immutable.OrderedMap(arg);\nexport const CategoryMap = (arg) => Immutable.OrderedMap(arg);\nexport const CategoryGroupMap = (arg) => Immutable.OrderedMap(arg);\nexport const TransactionMap = (arg) => Immutable.OrderedMap(arg);\n/**\n * Class that describes a budget.\n *\n * A budget is a set of spending plans and actual transactions\n * for a specific a period of time.\n */\nexport class Budget extends PRecord({\n    id: null,\n    name: __(\"New Budget\"),\n    /** Start date of the budget. Always of type PDate, and always less than or equal to end date. */\n    startDate: new PDate(0),\n    /** End date of the budget. Always of type PDate, and always greater than or equal to start date. */\n    endDate: new PDate(0),\n    /**\n     * ISO 4217 currency code for the budget. Individual accounts may use different currencies.\n     * This setting does not directly have any effect as far as Prophecy is concerned, but it\n     * is useful to apps working with the budget.\n     *\n     * It's best to read this value as a Currency object using the 'currency' getter.\n     */\n    currencyCode: 'USD',\n    // Private fields below. Once typescript supports using computed property names as fields,\n    // switch back to that.\n    /** Ordered map of Accounts, in a custom order specified by the user. See accounts() getter. */\n    '^a': AccountMap(),\n    /** Map of Categories, keyed by ID, ordered by category group order, and in a custom order within each group. See categories() getter. */\n    '^c': CategoryMap(),\n    /** Ordered map of CategoryGroups, in a custom order specified by the user. See categoryGroups() getter. */\n    '^g': CategoryGroupMap(),\n    /** _transactions: Stores transactions. See transactions() getter. */\n    '^n': TransactionMap(),\n}) {\n    constructor(origValues) {\n        const values = Object.assign({}, origValues || {}); // Don't modify the argument itself\n        // Budget must always have a valid date range:\n        if (values.startDate === undefined || values.endDate === undefined) {\n            const year = PDate.today().year;\n            values.startDate = values.startDate || PDate.create(year, 0, 1);\n            values.endDate = values.endDate || PDate.create(year, 11, 31);\n        }\n        // Allow passing 'accounts' into the constructor. It can be any iterable with Account-typed values\n        if (values.accounts !== undefined) {\n            // Don't trust the keys (if any) of values.accounts; create new keys:\n            values[_accounts] = AccountMap(Immutable.Seq.Indexed(values.accounts).map((a) => [a.id, a]));\n            delete values.accounts;\n        }\n        // Allow passing 'categoryGroups' into the constructor. It can be any iterable with CategoryGroup-typed values.\n        if (values.categoryGroups !== undefined) {\n            values[_categoryGroups] = CategoryGroupMap(Immutable.Seq.Indexed(values.categoryGroups).map((cg) => [cg.id, cg]));\n            delete values.categoryGroups;\n        }\n        // Allow passing 'categories' into the constructor. It can be any iterable with Category-typed values\n        if (values.categories !== undefined) {\n            const categoriesIterable = Immutable.Seq.Indexed(values.categories);\n            const categoryGroups = values[_categoryGroups];\n            // Don't trust the keys (if any) of values.categories; create new keys.\n            // Also ensure that all categories are sorted by group in the same order as CategoryGroups is sorted.\n            if (categoryGroups === undefined) {\n                throw new Error('cannot have categories without category groups.');\n            }\n            values[_categories] = _createOrderedCategoryMap(categoriesIterable, categoryGroups);\n            delete values.categories;\n        }\n        // Allow passing 'transactions' into the constructor. It can be any iterable with Transaction-typed values\n        if (values.transactions !== undefined) {\n            assert(values[_transactions] === undefined); // We expect 'transactions' or _transactions, but not both.\n            // Don't trust the keys (if any) or the ordering of values.transactions; create new keys and force a sort:\n            values[_transactions] = TransactionMap(Immutable.Seq.Indexed(values.transactions).sortBy(Budget.transactionSorter).map((t) => [t.id, t]));\n            delete values.transactions;\n        }\n        super(values);\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assert(this.currency instanceof Currency, \"currencyCode must be valid\");\n        assert(this.startDate instanceof PDate);\n        assert(this.endDate instanceof PDate);\n        assert(+this.endDate >= +this.startDate);\n        assert(Immutable.OrderedMap.isOrderedMap(this.accounts));\n        this.accounts.forEach(account => assert(account instanceof Account));\n        assert(Immutable.OrderedMap.isOrderedMap(this.categoryGroups));\n        this.categoryGroups.forEach(category => assert(category instanceof CategoryGroup));\n        assert(Immutable.OrderedMap.isOrderedMap(this.categories));\n        this.categories.forEach(category => {\n            if (!(category instanceof Category)) {\n                throw new Error(\"categories must all be of type Category\");\n            }\n            category.assertIsValidForBudget(this);\n        });\n        assert(Immutable.OrderedMap.isOrderedMap(this.transactions));\n        this.transactions.forEach(transaction => {\n            if (!(transaction instanceof Transaction)) {\n                throw new Error(\"Transactions must be of type Transaction\");\n            }\n            transaction.assertIsValidForBudget(this);\n        });\n    }\n    /** Get the currency of this budget. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /** Ordered list of Accounts, in custom order */\n    get accounts() { return this[_accounts]; }\n    /** Map of categories, keyed by ID. Not in order. */\n    get categories() { return this[_categories]; }\n    /** Ordered list of CategoryGroups, in custom order */\n    get categoryGroups() { return this[_categoryGroups]; }\n    /**\n     * Delete a category.\n     *\n     * Any transactions linked to this category will have their category set to null.\n     *\n     * @param {number} id - ID of the category to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteCategory(id) {\n        // Change all Transaction references to that category to null:\n        const transactions = this[_transactions].map((t) => t.set('detail', t.detail.map((d) => d.update('categoryId', categoryId => categoryId === id ? null : categoryId)).toList()));\n        return this.merge({\n            [_categories]: this[_categories].delete(id),\n            [_transactions]: transactions,\n        });\n    }\n    /**\n     * Insert or update a category\n     *\n     * If category.id is in the list of category groups, this will be an update.\n     * If category.id is not in the list of category groups, this will add a new group.\n     *\n     * This method cannot be used to change the order of categories (use positionCategory).\n     *\n     * @param {Category} category - The category to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateCategory(category) {\n        assert(category instanceof Category);\n        if (typeof category.id !== 'number') {\n            throw new Error(\"Invalid category ID.\");\n        }\n        const origCategory = this.categories.get(category.id);\n        if (origCategory === undefined || origCategory.groupId !== category.groupId) {\n            // The group ID has changed. We need to carefully ensure that this.categories\n            // stays sorted, first by group order, then in custom order, with the modified\n            // category at the end of its new category group\n            let categories = this.categories.delete(category.id).set(category.id, category); // Move/insert category to the end\n            categories = _createOrderedCategoryMap(categories.valueSeq(), this.categoryGroups);\n            return this.set(_categories, categories);\n        }\n        return this.set(_categories, this[_categories].set(category.id, category));\n    }\n    /**\n     * Change a category's position within its category group\n     *\n     * @param {number} categoryId ID of the category to move\n     * @param {number} newIndex New position within its category group (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionCategory(categoryId, newIndex) {\n        assertIsNumber(categoryId);\n        assertIsNumber(newIndex);\n        const category = this.categories.get(categoryId);\n        assert(category instanceof Category);\n        const groupCategories = this.categories.filter((cat) => cat.groupId === category.groupId);\n        assert(newIndex >= 0 && newIndex <= groupCategories.size);\n        // this.categories is ordered first by category group order, then by custom order within each group.\n        // Our goal is to move the category around within the group, but keep the overall map still sorted\n        // by group.\n        const currentIndexOverall = this.categories.keySeq().keyOf(categoryId);\n        const currentIndexWithinGroup = groupCategories.keySeq().keyOf(categoryId);\n        const newIndexOverall = currentIndexOverall + (newIndex - currentIndexWithinGroup);\n        const newCategories = CategoryMap(this.categories.toList()\n            .filter((cat) => cat.id !== categoryId).toList()\n            .insert(newIndexOverall, category)\n            .map((a) => [a.id, a]));\n        return this.set(_categories, newCategories);\n    }\n    /**\n     * Delete a category group. It must be empty!\n     * @param {number} id - ID of the category group to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteCategoryGroup(id) {\n        assert(this.categories.filter((cat) => cat.groupId === id).isEmpty(), \"Only empty category groups can be deleted.\");\n        return this.set(_categoryGroups, this[_categoryGroups].delete(id));\n    }\n    /**\n     * Insert or update a category group.\n     *\n     * If categoryGroup.id is in the list of category groups, this will be an update.\n     * If categoryGroup.id is not in the list of category groups, this will add a new group.\n     *\n     * This method cannot be used to change the order of category groups (use positionCategoryGroup).\n     *\n     * @param {CategoryGroup} categoryGroup - The category group to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateCategoryGroup(categoryGroup) {\n        assert(categoryGroup instanceof CategoryGroup);\n        if (typeof categoryGroup.id !== 'number') {\n            throw new Error(\"Invalid Category Group ID\");\n        }\n        return this.set(_categoryGroups, this[_categoryGroups].set(categoryGroup.id, categoryGroup));\n    }\n    /**\n     * Change a category group's position in the list of category groups\n     *\n     * @param {number} groupId ID of the category group to move\n     * @param {number} newIndex New position in the list of category groups (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionCategoryGroup(groupId, newIndex) {\n        assertIsNumber(groupId);\n        assertIsNumber(newIndex);\n        const categoryGroup = this.categoryGroups.get(groupId);\n        assert(categoryGroup instanceof CategoryGroup);\n        const newCategoryGroups = CategoryGroupMap(this.categoryGroups.toList()\n            .filter((g) => g.id !== groupId).toList()\n            .insert(newIndex, categoryGroup)\n            .map((a) => [a.id, a]));\n        return this.set(_categoryGroups, newCategoryGroups);\n    }\n    /**\n     * Delete an account\n     * @param {number} id - ID of the account to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteAccount(id) {\n        // Change all Transaction references to that account to null:\n        const transactions = this[_transactions].map((t) => {\n            if (t.accountId === id) {\n                return t.set(\"accountId\", null);\n            }\n            return t;\n        });\n        return this.merge({\n            [_accounts]: this[_accounts].delete(id),\n            [_transactions]: transactions,\n        });\n    }\n    /**\n     * updateAccount: Insert or update an account.\n     *\n     * If newAccount.id is in the list of accounts, this will be an update.\n     * If newAccount.id is not in the list of accounts, this will add a new account.\n     *\n     * This method cannot be used to change the order of accounts (use positionAccount).\n     *\n     * @param {Account} newAccount - The account to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateAccount(newAccount) {\n        assert(newAccount instanceof Account);\n        if (typeof newAccount.id !== 'number') {\n            throw new Error(\"account must have ID.\");\n        }\n        const newAccounts = this[_accounts].set(newAccount.id, newAccount);\n        return this.set(_accounts, newAccounts);\n    }\n    /**\n     * positionAccount: Change an account's position in the list of accounts\n     *\n     * @param {number} accountId ID of the account to move\n     * @param {number} newIndex New position in the list of accounts (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionAccount(accountId, newIndex) {\n        assertIsNumber(accountId);\n        assertIsNumber(newIndex);\n        const account = this.accounts.get(accountId);\n        assert(account instanceof Account);\n        const newAccounts = AccountMap(this.accounts.toList().filter((a) => a.id !== accountId).toList().insert(newIndex, account).map((a) => [a.id, a]));\n        return this.set(_accounts, newAccounts);\n    }\n    /**\n     * Ordered list of Transactions, always in chronological order (oldest first; null dates go last)\n     * @returns {OrderedMap}\n     */\n    get transactions() { return this[_transactions]; }\n    /**\n     * Delete a transaction\n     * @param {number} id - ID of the transaction to delete\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    deleteTransaction(id) { return this.set(_transactions, this[_transactions].delete(id)); }\n    /**\n     * updateTransaction: Insert or update a transaction.\n     *\n     * If newTransaction.id is in the list of transactions, this will be an update.\n     * If newTransaction.id is not in the list of transactions, this will add it.\n     *\n     * @param {Transaction} newTransaction - The transaction to insert/modify.\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateTransaction(newTransaction) {\n        assert(newTransaction instanceof Transaction, \"expected Transaction\");\n        const id = newTransaction.id;\n        if (typeof id !== 'number') {\n            throw new Error(\"Transaction must have an ID.\");\n        }\n        assert(newTransaction.accountId === null || this.accounts.has(newTransaction.accountId), \"accountId must be valid.\");\n        let sortRequired = true;\n        if (this[_transactions].has(id)) {\n            // We are replacing an existing value:\n            const oldTransaction = this[_transactions].get(id);\n            // We'll only need to re-sort transactions if the date has changed:\n            sortRequired = (+(newTransaction.date || -1) !== +(oldTransaction.date || -1));\n        }\n        else {\n            // We are inserting a new value.\n            // Sort it into the correct spot, unless 'date' is null, in which\n            // case it can just be appended to the end of the list.\n            sortRequired = newTransaction.date !== null;\n        }\n        let newTransactions = this[_transactions].set(id, newTransaction);\n        if (sortRequired) {\n            newTransactions = newTransactions.sortBy(Budget.transactionSorter);\n        }\n        return this.set(_transactions, newTransactions);\n    }\n    /**\n     * _computeBalances: Private method that computes the balance of each account as well\n     * as the running total of the relevant account as of each transaction.\n     */\n    _computeBalances() {\n        assert(this._accountBalances === undefined, \"_computeBalances() should only run once per Budget instance.\");\n        // Get the initial balance of each account:\n        const accountBalances = this.accounts.map((account) => account.initialBalance).toJS();\n        const transactionBalances = {};\n        for (const transaction of this.transactions.values()) { // TODO Remove 'as' w/ Immutable.js 4+\n            if (transaction.pending || transaction.accountId === null) {\n                // Only define a \"running balance for this account as of this transaction\" if there is an accountId and the transaction is not pending\n                continue;\n            }\n            else {\n                const balance = accountBalances[transaction.accountId] += transaction.amount;\n                if (transaction.id !== null) {\n                    transactionBalances[transaction.id] = balance;\n                }\n            }\n        }\n        // We cache the results and make them immutable. We don't have to worry about cache\n        // invalidation; any change to Budget will create a new object with an empty cache.\n        this._accountBalances = Object.freeze(accountBalances);\n        this._transactionAccountBalances = Object.freeze(transactionBalances);\n    }\n    /** Get an object which contains balance of each account keyed by accountId, considering all non-pending transactions */\n    get accountBalances() {\n        if (this._accountBalances === undefined) {\n            this._computeBalances();\n        }\n        return this._accountBalances;\n    }\n    /**\n     * Get the balance of any account as of the specified transaction.\n     * Only non-pending transactions with a date are considered.\n     *\n     * @param {number} transactionId - The transaction to use as a reference point\n     * @param {number} accountId - the account whose balance to return\n     * @returns {number|undefined} The balance of the specified account as of the specified transaction\n     */\n    accountBalanceAsOfTransaction(transactionId, accountId) {\n        const account = this.accounts.get(accountId);\n        assert(account !== undefined);\n        const transaction = this.transactions.get(transactionId);\n        assert(transaction !== undefined);\n        if (transaction.date === null || transaction.pending === true) {\n            return undefined; // We can't define an account balance for these type of transactions\n        }\n        if (this._accountBalances === undefined) {\n            this._computeBalances();\n        }\n        if (transaction.accountId === accountId) {\n            const x = this._transactionAccountBalances[transactionId];\n            return x;\n        }\n        else {\n            // Account balances are computed per transaction.\n            // Find the most recent preceding transaction associated with the specified account,\n            // and return the account balance as of that transaction.\n            const transactions = this.transactions.filter((txn) => txn.date !== null && txn.pending === false);\n            const index = transactions.keySeq().keyOf(transactionId); // The index of the specified transaction\n            const precedingTransactions = transactions.valueSeq().slice(0, index);\n            const lastAccountTransaction = precedingTransactions.findLast((txn) => txn.accountId === accountId);\n            if (lastAccountTransaction) {\n                return this._transactionAccountBalances[lastAccountTransaction.id];\n            }\n            else {\n                return account.initialBalance;\n            }\n        }\n    }\n    /**\n     * Given a date, get the balance of all categories, up to and including that date.\n     *\n     * @param {PDate} date - The date\n     * @returns {Immutable.Map} - The balance of all categories as of that date, as a map where\n     *        the key is the category ID and the value is the balance of that category.\n     */\n    categoryBalancesOnDate(date) {\n        assert(date instanceof PDate);\n        assert(date >= this.startDate);\n        assert(date <= this.endDate);\n        return Immutable.Map().withMutations(map => {\n            for (const txn of this.transactions.values()) { // TODO Remove 'as' w/ Immutable.js 4+\n                if (txn.date === null || txn.date > date) { // Dates are ordered oldest first, null last.\n                    break;\n                }\n                txn.detail.forEach((d) => {\n                    if (d.categoryId !== null) {\n                        map.set(d.categoryId, map.get(d.categoryId, 0) + d.amount);\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * Given a date, get the balance of the specified category, up to and including that date.\n     *\n     * @param {number} categoryId - The ID of the category\n     * @param {PDate} date - The date\n     * @returns {number} - The balance of the specified category as of that date\n     */\n    categoryBalanceByDate(categoryId, date) {\n        assert(this.categories.has(categoryId));\n        return this.categoryBalancesOnDate(date).get(categoryId, 0);\n    }\n    /**\n     * Given a date, get the budget of each category, up to and including that date.\n     *\n     * @param {PDate} date - The date\n     * @returns {Immutable.Map} - The budget of all categories as of that date, as a map where\n     *        the key is the category ID and the value is the budget amount of that category.\n     */\n    categoryBudgetsOnDate(date) {\n        let transactionCategoryBalances = null;\n        assert(date instanceof PDate);\n        assert(date >= this.startDate);\n        assert(date <= this.endDate);\n        return Immutable.Map().withMutations(map => {\n            for (const category of this.categories.values()) { // TODO Remove 'as' w/ Immutable.js 4+\n                if (category.id === null) {\n                    continue; // Exclude categories with no ID.\n                }\n                let budgetAmount = 0;\n                if (category.rules === null) { // equivalent to: if (category.isAutomatic) {\n                    if (transactionCategoryBalances === null) {\n                        transactionCategoryBalances = this.categoryBalancesOnDate(date);\n                    }\n                    budgetAmount = transactionCategoryBalances.get(category.id, 0);\n                }\n                else {\n                    category.rules.forEach((rule) => {\n                        budgetAmount += rule.amount * rule.countOccurrencesBetween(this.startDate, date);\n                    });\n                }\n                map.set(category.id, budgetAmount);\n            }\n        });\n    }\n    toJS() {\n        const result = super.toJS();\n        // Remove private keys:\n        delete result[_accounts];\n        delete result[_categories];\n        delete result[_categoryGroups];\n        delete result[_transactions];\n        // Add accounts as a correctly-ordered array:\n        result.accounts = this.accounts.toList().toJS();\n        // Add categories as an array:\n        result.categories = this.categories.toList().toJS();\n        // Add category groups as a correctly-ordered array:\n        result.categoryGroups = this.categoryGroups.toList().toJS();\n        // Add transactions as a correctly-ordered array:\n        result.transactions = this.transactions.toList().toJS();\n        // Add version information\n        // Major version should only change if backwards compatibility is broken.\n        result.version = { major: majorVersion, minor: minorVersion };\n        return result;\n    }\n    /**\n     * Convert from a JSON-friendly native JavaScript object (or JSON) to a Budget instance.\n     * @param {Object} obj - JSON or JavaScript serialized representation of an instance of this Budget.\n     * @returns {Object} - New instance of this Budget.\n     */\n    static fromJS(obj) {\n        // The JS serialization won't be typed, but the constructor expects types like Catgory, Transaction, etc:\n        const values = Object.assign({}, obj);\n        for (const dateField of ['startDate', 'endDate']) {\n            if (values[dateField] !== null) {\n                assertIsNumber(values[dateField]);\n                values[dateField] = new PDate(values[dateField]);\n            }\n        }\n        const typedLists = [\n            { key: \"accounts\", type: Account },\n            { key: \"categories\", type: Category },\n            { key: \"categoryGroups\", type: CategoryGroup },\n            { key: \"transactions\", type: Transaction },\n        ];\n        for (const { key, type } of typedLists) {\n            values[key] = values[key].map((entry) => type.fromJS(entry));\n        }\n        return new this(values);\n    }\n    static transactionSorter(transaction) {\n        return transaction.date === null ? 999999 : +transaction.date; // Sort 'null' dates after the highest date\n    }\n}\n/**\n * Given any iterable of Categories, generate a properly sorted OrderedMap.\n *\n * Categories should be ordered by group (in the custom order that category\n * groups are in), and then secondarily by the custom order (whatever order\n * they're currently in in the passed iterable.)\n *\n * @param {Category[]} categories - Iterable of categories\n * @param {CategoryGroup[]} categoryGroups - The groups that the categories\n *        need to be sorted by. The groups should be in a custom order.\n *\n * @returns {Immutable.OrderedMap} OrderedMap of categories.\n */\nfunction _createOrderedCategoryMap(categories, categoryGroups) {\n    const categoryGroupIdsOrdered = categoryGroups.keySeq();\n    return Immutable.OrderedMap(categories.sortBy((category) => category.groupId ? categoryGroupIdsOrdered.keyOf(category.groupId) : 0 // groupId should always be a number though.\n    ).map((c) => [c.id, c]));\n}\n//# sourceMappingURL=budget.js.map","const prefix = 'PRPHCY_';\nexport const PROPHECY_ACTION_PREFIX = prefix;\n////////////////////////////////////////////////////////////////////////////////\n// Miscellaneous actions\n/**\n * NOOP:\n * Action that does nothing.\n *\n * This is generated as the inverse of an action that had no effect.\n */\nexport const NOOP = prefix + 'NOOP';\n////////////////////////////////////////////////////////////////////////////////\n// Budget settings\n/**\n * SET_CURRENCY:\n * Action to change the currency of this budget.\n *\n * Arguments:\n *  - currencyCode (string): New ISO 4217 currency code (e.g. 'USD')\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_CURRENCY = prefix + 'SET_CURRENCY';\n/**\n * SET_DATE:\n * Action to change the start and/or end date of this budget.\n *\n * Arguments:\n *  - startDate (int): PDate value for the start date, cast to integer (optional)\n *  - endDate (int): PDate value for the end date, cast to integer (optional)\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_DATE = prefix + 'SET_DATE';\n/**\n * SET_NAME:\n * Action to change the name of this budget.\n *\n * Arguments:\n *  - name (string): New name of the budget\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_NAME = prefix + 'SET_NAME';\n////////////////////////////////////////////////////////////////////////////////\n// Accounts\n/**\n * DELETE_ACCOUNT:\n * Action to delete an account. Will set the 'accountId' of any linked transactions to null.\n *\n * Arguments:\n *  - id (int): The ID of the account to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_ACCOUNT = prefix + 'DELETE_ACCT';\n/**\n * UPDATE_ACCOUNT:\n * Action to create/modify an account\n *\n * Arguments:\n *  - id (int): The ID of the account to create/modify\n *  - data (object): fields to set on the new/modifed account (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the account in the list (optional)\n *  - linkNullTransactions (Array): Array of transaction IDs whose accountId will be\n *    set to this account's ID if (1) that transaction's accountId is null, and (2)\n *    this is an account insertion (not update). This parameter mostly exists so\n *    that DELETE_ACCOUNT can be inverted to a single action. (optional)\n */\nexport const UPDATE_ACCOUNT = prefix + 'UPDATE_ACCT';\n////////////////////////////////////////////////////////////////////////////////\n// Categories\n/**\n * DELETE_CATEGORY:\n * Action to delete a category.\n *\n * Arguments:\n *  - id (int): The ID of the category to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_CATEGORY = prefix + 'DELETE_CAT';\n/**\n * UPDATE_CATEGORY:\n * Action to create/modify a category\n *\n * Arguments:\n *  - id (int): The ID of the category to create/modify\n *  - data (object): fields to set on the new/modifed category (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the category within the group (optional)\n *  - linkTransactionDetails (Array): Array of tuples of [transaction ID, details index]\n *    that identifies TransactionDetails entries whose categoryId will be\n *    set to this category's ID if (1) that transaction's categoryId is null, and (2)\n *    this is an category insertion (not update). This parameter mostly exists so\n *    that DELETE_CATEGORY can be inverted to a single action. (optional)\n */\nexport const UPDATE_CATEGORY = prefix + 'UPDATE_CAT';\n////////////////////////////////////////////////////////////////////////////////\n// Category Groups\n/**\n * DELETE_CATEGORY_GROUP:\n * Action to delete a category group. It must not contain any categories.\n *\n * Arguments:\n *  - id (int): The ID of the category group to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_CATEGORY_GROUP = prefix + 'DELETE_CG';\n/**\n * UPDATE_CATEGORY_GROUP:\n * Action to create/modify a category group\n *\n * Arguments:\n *  - id (int): The ID of the category group to create/modify\n *  - data (object): fields to set on the new/modifed category group (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the category group in the list (optional)\n */\nexport const UPDATE_CATEGORY_GROUP = prefix + 'UPDATE_CG';\n////////////////////////////////////////////////////////////////////////////////\n// Transactions\n/**\n * DELETE_TRANSACTION:\n * Action to delete a transaction\n *\n * Arguments:\n *  - id (int): The ID of the transaction to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_TRANSACTION = prefix + 'DELETE_TXN';\n/**\n * UPDATE_TRANSACTION:\n * Action to create/modify a transaction\n *\n * Arguments:\n *  - id (int): The ID of the transaction to create/modify\n *  - data (object): fields to set on the new/modifed transactions\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const UPDATE_TRANSACTION = prefix + 'UPDATE_TXN';\n/**\n * UPDATE_MULTIPLE_TRANSACTIONS\n * Action to atomically update multiple transactions.\n *\n * This is the only \"compound action\" that itself contains\n * multiple other actions. \"Compound actions\" are kept to a minimum\n * in order to make it easier for other reducers to watch for\n * changes using actions. (e.g. if there were a generic MULTIPLE_ACTIONS\n * action, a reducer that wanted to watch for changes to the budget name\n * would have to watch for both SET_NAME and MULTIPLE_ACTIONS containing\n * SET_NAME).\n *\n * Arguments:\n *  - subActions (array): array of UPDATE_TRANSACTION and DELETE_TRANSACTION\n *       actions to carry out as part of this action.\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const UPDATE_MULTIPLE_TRANSACTIONS = prefix + 'UPDATE_MANY_TXN';\n//# sourceMappingURL=actions.js.map","import { Account, Budget, Category, CategoryGroup, PDate, Transaction } from '../prophecy';\nimport { assert, assertIsNumber } from '../util';\nimport * as ACTION from './actions';\n/**\n * The reducer for prophecy. Used to make the Prophecy engine work within a redux app.\n * @param {Budget} state - the state to modify\n * @param {Object} action - the action to apply to the state, if applicable\n * @returns {Budget} - returns the state, with any resulting modifications\n */\nexport function reducer(state = new Budget(), action) {\n    // Basic checks:\n    if (!action.type.startsWith(ACTION.PROPHECY_ACTION_PREFIX)) {\n        // This is not a prophecy-specific action\n        return state;\n    }\n    if (action.budgetId !== undefined && action.budgetId !== state.id) {\n        // This action does not apply to this particular budget\n        return state;\n    }\n    switch (action.type) {\n        case ACTION.SET_CURRENCY: {\n            return state.set('currencyCode', action.currencyCode);\n        }\n        case ACTION.SET_DATE: {\n            const changes = {};\n            for (const dateKey of ['startDate', 'endDate']) {\n                if (dateKey in action) {\n                    changes[dateKey] = new PDate(action[dateKey]);\n                }\n            }\n            return state.merge(changes);\n        }\n        case ACTION.SET_NAME: {\n            return state.set('name', action.name);\n        }\n        // Account actions:\n        case ACTION.DELETE_ACCOUNT: {\n            return state.deleteAccount(action.id);\n        }\n        case ACTION.UPDATE_ACCOUNT: {\n            assertIsNumber(action.id);\n            const existingAccount = state.accounts.get(action.id);\n            const acct = existingAccount || new Account({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateAccount(acct.merge(action.data));\n            }\n            if (action.linkNullTransactions) {\n                // Implement the \"linkNullTransactions\" param, required to make DELETE_ACCOUNT fully invertable:\n                assert(existingAccount === undefined); // linkNullTransactions is only allowed for Account insertions\n                const nullTransactions = newState.transactions.filter((t) => t.accountId == null);\n                action.linkNullTransactions.forEach((txnId) => {\n                    const txn = nullTransactions.get(txnId);\n                    if (txn) {\n                        newState = newState.updateTransaction(txn.set('accountId', action.id));\n                    }\n                });\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionAccount(action.id, action.index);\n            }\n            return newState;\n        }\n        // Category actions:\n        case ACTION.DELETE_CATEGORY: {\n            return state.deleteCategory(action.id);\n        }\n        case ACTION.UPDATE_CATEGORY: {\n            assertIsNumber(action.id);\n            const existingCategory = state.categories.get(action.id);\n            const category = existingCategory || new Category({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateCategory(category.merge(Category.cleanArgs(action.data)));\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionCategory(action.id, action.index);\n            }\n            if (action.linkTransactionDetails) {\n                // Implement the \"linkTransactionDetails\" param, required to make DELETE_CATEGORY fully invertable:\n                assert(existingCategory === undefined); // linkTransactionDetails is only allowed for Category insertions\n                // linkTransactionDetails is a list of tuples of [transaction ID, index into transaction.detail list]\n                action.linkTransactionDetails.forEach(([txnId, detailsIndex]) => {\n                    const txn = newState.transactions.get(txnId);\n                    if (txn) {\n                        newState = newState.updateTransaction(txn.updateIn(['detail', detailsIndex, 'categoryId'], categoryId => categoryId === null ? action.id : categoryId));\n                    }\n                });\n            }\n            return newState;\n        }\n        // Category Group actions:\n        case ACTION.DELETE_CATEGORY_GROUP: {\n            return state.deleteCategoryGroup(action.id);\n        }\n        case ACTION.UPDATE_CATEGORY_GROUP: {\n            assertIsNumber(action.id);\n            const existingGroup = state.categoryGroups.get(action.id);\n            const group = existingGroup || new CategoryGroup({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateCategoryGroup(group.merge(action.data));\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionCategoryGroup(action.id, action.index);\n            }\n            return newState;\n        }\n        // Transaction actions:\n        case ACTION.DELETE_TRANSACTION: {\n            return state.deleteTransaction(action.id);\n        }\n        case ACTION.UPDATE_TRANSACTION: {\n            assertIsNumber(action.id);\n            assert(!('id' in action.data));\n            const data = Transaction.cleanArgs(action.data);\n            const txn = state.transactions.get(action.id) || new Transaction({ id: action.id });\n            return state.updateTransaction(txn.merge(data));\n        }\n        case ACTION.UPDATE_MULTIPLE_TRANSACTIONS: {\n            let newState = state;\n            action.subActions.forEach((subAction) => {\n                assert(subAction.type === ACTION.UPDATE_TRANSACTION || subAction.type === ACTION.DELETE_TRANSACTION);\n                assert(subAction.budgetId === undefined || subAction.budgetId === state.id);\n                newState = reducer(newState, subAction);\n            });\n            return newState;\n        }\n        default:\n            return state;\n    }\n}\n/**\n * The action inverter for prophecy.\n * Given an action and a state, produce the inverse of 'action', such that\n * inverse(action(state)) = state\n *\n * This is used to build undo functionality that is relatively robust\n * when multiple users can simultaneously be emitting actions.\n *\n * @param {Budget} state - the state that is about to be modified by action\n * @param {Object} action - the action to invert\n * @returns {?Object} - An action (a JS object) or null, if the action cannot be inverted.\n */\nexport function inverter(state, action) {\n    // Inner function to generate the inverted action's parameters:\n    const result = (() => {\n        switch (action.type) {\n            case ACTION.NOOP: {\n                return {};\n            }\n            // Setting actions:\n            case ACTION.SET_CURRENCY: {\n                return { currencyCode: state.get('currencyCode') };\n            }\n            case ACTION.SET_DATE: {\n                const data = {};\n                if ('startDate' in action) {\n                    data.startDate = +state.startDate;\n                }\n                if ('endDate' in action) {\n                    data.endDate = +state.endDate;\n                }\n                return data;\n            }\n            case ACTION.SET_NAME: {\n                return { name: state.name };\n            }\n            // Account actions:\n            case ACTION.DELETE_ACCOUNT: {\n                const acct = state.accounts.get(action.id);\n                if (acct) {\n                    const data = acct.toJS();\n                    delete data.id;\n                    // Restore the associated transactions that will have their accountId set null:\n                    const linkNullTransactions = (state.transactions.valueSeq()\n                        .filter((t) => t.accountId === action.id)\n                        .map((t) => t.id));\n                    const index = state.accounts.keySeq().keyOf(action.id);\n                    return { type: ACTION.UPDATE_ACCOUNT, id: action.id, data, linkNullTransactions, index };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_ACCOUNT: {\n                const acct = state.accounts.get(action.id);\n                if (acct) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_ACCOUNT action:\n                    const acctJS = acct.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (const key in action.data) {\n                            const oldValue = acctJS[key];\n                            if (oldValue !== action.data[key]) {\n                                inverse.data[key] = oldValue;\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this account on the account list changed?\n                        const oldIndex = state.accounts.keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the account:\n                    return { type: ACTION.DELETE_ACCOUNT, id: action.id };\n                }\n            }\n            // Category actions:\n            case ACTION.DELETE_CATEGORY: {\n                const category = state.categories.get(action.id);\n                if (category) {\n                    const data = category.toJS();\n                    delete data.id;\n                    // Restore the associated transaction details that will have their categoryId set null.\n                    // We do this by including a list with tuples of (transaction ID, detail index).\n                    const linkTransactionDetails = [];\n                    state.transactions.forEach((txn) => {\n                        txn.detail.forEach((detail, idx) => {\n                            if (detail.categoryId === category.id) {\n                                linkTransactionDetails.push([txn.id, idx]);\n                            }\n                        });\n                    });\n                    const index = state.categories.filter((cat) => cat.groupId === category.groupId).keySeq().keyOf(action.id);\n                    return { type: ACTION.UPDATE_CATEGORY, id: action.id, data, linkTransactionDetails, index };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_CATEGORY: {\n                const category = state.categories.get(action.id);\n                if (category) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_CATEGORY action:\n                    const categoryJS = category.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (const key in action.data) {\n                            const oldValue = categoryJS[key];\n                            if (oldValue !== action.data[key]) {\n                                inverse.data[key] = oldValue;\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this category within the group changed?\n                        const oldIndex = state.categories.filter((cat) => cat.groupId === category.groupId).keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the category:\n                    return { type: ACTION.DELETE_CATEGORY, id: action.id };\n                }\n            }\n            // Category Group actions:\n            case ACTION.DELETE_CATEGORY_GROUP: {\n                const group = state.categoryGroups.get(action.id);\n                if (group) {\n                    const data = group.toJS();\n                    delete data.id;\n                    return { type: ACTION.UPDATE_CATEGORY_GROUP, id: action.id, data };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_CATEGORY_GROUP: {\n                const group = state.categoryGroups.get(action.id);\n                if (group) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_CATEGORY_GROUP action:\n                    const groupJS = group.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (const key in action.data) {\n                            const oldValue = groupJS[key];\n                            if (oldValue !== action.data[key]) {\n                                inverse.data[key] = oldValue;\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this category group on changed?\n                        const oldIndex = state.categoryGroups.keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the category group:\n                    return { type: ACTION.DELETE_CATEGORY_GROUP, id: action.id };\n                }\n            }\n            // Transaction actions:\n            case ACTION.DELETE_TRANSACTION: {\n                const txn = state.transactions.get(action.id);\n                if (txn) {\n                    const data = txn.toJS();\n                    delete data.id;\n                    return { type: ACTION.UPDATE_TRANSACTION, id: action.id, data };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_TRANSACTION: {\n                const txn = state.transactions.get(action.id);\n                if (txn) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_TRANSACTION action:\n                    const txnJS = txn.toJS();\n                    const data = {};\n                    for (const key in action.data) {\n                        const oldValue = txnJS[key];\n                        if (oldValue !== action.data[key]) {\n                            data[key] = oldValue;\n                        }\n                    }\n                    return { id: action.id, data };\n                }\n                else {\n                    // To undo this insertion, we need to delete the transaction:\n                    return { type: ACTION.DELETE_TRANSACTION, id: action.id };\n                }\n            }\n            case ACTION.UPDATE_MULTIPLE_TRANSACTIONS: {\n                const inverseSubActions = [];\n                // Reverse iterate over action.subActions and invert each one:\n                let newState = state;\n                action.subActions.forEach((subAction) => {\n                    const inverseSubAction = inverter(newState, subAction);\n                    delete inverseSubAction.budgetId; // Delete this since it's redundant\n                    inverseSubActions.push(inverseSubAction);\n                    // We need to update the state as we iterate the subActions in case any prior actions affect later ones:\n                    newState = reducer(newState, subAction);\n                });\n                inverseSubActions.reverse(); // The inverse actions should be applied in the opposite order\n                return { subActions: inverseSubActions };\n            }\n        }\n    })();\n    if (result) {\n        if (!result.type) {\n            result.type = action.type; // type defaults to the same action type\n        }\n        result.budgetId = state.id;\n        return result;\n    }\n    return null;\n}\n//# sourceMappingURL=prophecy_redux.js.map","/**\n * Prophecy Engine JavaScript API\n *\n * All of these classes should be namespaced within a 'Prophecy' global.\n */\nimport * as Imm from 'immutable';\nexport const Immutable = Imm;\nexport { PRecord } from './precord';\nexport { Account } from './account';\nexport { Budget } from './budget';\nexport { Category, CategoryGroup, CategoryRule, CategoryRulePeriod } from './category';\nexport { Currency, CurrencyFormatter, SUPPORTED_CURRENCIES } from './currency';\nexport { default as PDate } from './pdate';\nexport { Transaction, TransactionDetail } from './transaction';\nexport { reducer, inverter } from './redux/prophecy_redux';\nimport * as _actions from './redux/actions';\nexport const actions = _actions;\nimport { majorVersion, minorVersion } from './budget';\nexport const version = { major: majorVersion, minor: minorVersion };\n//# sourceMappingURL=prophecy.js.map"],"names":["module","SLICE$0","Array","prototype","slice","createClass","ctor","superClass","Object","create","constructor","Iterable","value","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Keyed","Indexed","Set","SHIFT","SIZE","MASK","NOT_SET","CHANGE_LENGTH","DID_ALTER","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","ii","ensureSize","iter","undefined","size","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","this","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isArrayLike","emptySequence","toSeq","seq","maybeIndexedSeqFromValue","ObjectSeq","TypeError","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","toString","KEYS","VALUES","ENTRIES","inspect","toSource","of","arguments","__toString","cacheResult","_cache","__iterateUncached","toArray","fn","reverse","seqIterate","__iterator","seqIterator","isSeq","EMPTY_SEQ","EMPTY_REPEAT","EMPTY_RANGE","IS_SEQ_SENTINEL","ArraySeq","array","_array","object","keys","_object","_keys","IterableSeq","_iterable","IteratorSeq","_iterator","_iteratorCache","maybeSeq","isArray","useKeys","cache","maxIndex","entry","__iteratorUncached","fromJS","json","converter","fromJSWith","key","parentJSON","map","isPlainObj","fromJSDefault","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","_","allEqual","bSize","has","get","Repeat","times","_value","Infinity","invariant","condition","error","Error","Range","start","step","abs","_start","_end","_step","ceil","Collection","KeyedCollection","IndexedCollection","SetCollection","notSetValue","hasOwnProperty","iterations","val","includes","searchValue","indexOf","lastIndexOf","this$0","other","possibleIndex","floor","offsetValue","imul","c","d","smi","i32","hash","o","string","h","STRING_HASH_CACHE_MIN_STRLEN","stringHashCache","hashString","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","hashCode","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","node","nodeType","uniqueID","documentElement","getIENodeHash","objHashUID","set","isExtensible","defineProperty","enumerable","configurable","writable","apply","hashJSObj","charCodeAt","e","WeakMap","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","maybeMap","IS_MAP_SENTINEL","keyValues","i","_root","updateMap","setIn","keyPath","updateIn","remove","deleteIn","update","updater","updatedValue","updateInDeepMap","existing","keyPathIter","isNotSet","existingValue","newValue","nextExisting","nextUpdated","forceIterator","clear","__ownerID","__altered","merge","mergeIntoMapWith","mergeWith","merger","iters","mergeIn","m","mergeDeep","deepMerger","mergeDeepWith","deepMergerWith","mergeDeepIn","sort","comparator","OrderedMap","sortFactory","sortBy","mapper","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","MapIterator","iterate","ownerID","makeMap","EMPTY_MAP","MapPrototype","ArrayMapNode","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","_type","_reverse","_stack","mapIteratorFrame","mapIteratorValue","prev","__prev","root","newRoot","newSize","didChangeSize","didAlter","updateNode","shift","isLeafNode","mergeIntoNode","newNode","idx1","idx2","iterables","push","mergeIntoCollectionWith","nextValue","collection","filter","x","mergeIntoMap","popCount","idx","canEdit","newArray","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","createNodes","isEditable","newEntries","pop","bit","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","including","expandedNodes","expandNodes","newBitmap","newNodes","newLen","after","spliceOut","spliceIn","newCount","MIN_HASH_ARRAY_MAP_SIZE","excluding","packedII","packedNodes","packNodes","keyMatch","stack","subNode","List","empty","emptyList","isList","makeList","VNode","list","setSize","maybeList","IS_LIST_SENTINEL","listNodeFor","_origin","setListBounds","newTail","_tail","getTailOffset","_capacity","updateVNode","_level","updateList","splice","insert","values","oldSize","unshift","mergeIntoListWith","iterateList","DONE","ListPrototype","removeBefore","level","originIndex","newChild","removingFirst","oldChild","editable","editableVNode","removeAfter","sizeIndex","EMPTY_LIST","EMPTY_ORDERED_MAP","left","right","tailPos","tail","iterateNodeOrLeaf","from","to","iterateLeaf","iterateNode","origin","capacity","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","maxSize","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","cacheResultThrough","mapFactory","context","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","skipWhileFactory","skipSequence","skipping","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","defaultComparator","isKeyedIterable","maxFactory","reduce","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","reify","validateEntry","resolveSize","iterableClass","Record","defaultValues","name","hasInitialized","RecordType","names","bind","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","valueSeq","indexedIterable","recordName","defaultVal","_empty","makeRecord","likeRecord","record","getPrototypeOf","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","fromKeys","keySeq","updateSet","union","intersect","originalSet","subtract","OrderedSet","__make","EMPTY_SET","SetPrototype","__empty","makeSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","EMPTY_ORDERED_SET","OrderedSetPrototype","makeOrderedSet","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","head","_head","peek","makeStack","pushAll","EMPTY_STACK","StackPrototype","mixin","methods","keyCopier","getOwnPropertySymbols","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","concat","singleton","concatSeq","flatten","sum","concatFactory","returnValue","find","findEntry","sideEffect","separator","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","not","butLast","isEmpty","countBy","grouper","groups","countByFactory","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","coerce","flatMapFactory","searchKey","getIn","searchKeyPath","nested","groupBy","isKeyedIter","groupByFactory","hasIn","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeSequence","iterating","takeWhileFactory","takeUntil","ordered","keyed","murmurHashOfSize","hashMerge","hashIterable","IterablePrototype","quoteString","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","JSON","stringify","String","defaultZipper","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interposedSequence","interposeFactory","interleave","zipped","interleaved","zip","zipWith","factory","assert","cond","msg","assertIsNumber","Number","isNaN","assertPositiveIntegerOrNull","parseInt","ValidationResult","[object Object]","__validationMessages","warnings","errors","fieldName","field","overallIssues","getFieldIssues","allIssues","freeze","message","Warning","__","str","PRecord","Immutable","super","_skipChecks","_checkInvariants","result","newRecord","budget","validationResult","_pushMessage","_validate","validateForBudget","err","Currency","code","symbols","decimals","round","SUPPORTED_CURRENCIES","CAD","EUR","USD","HKD","JPY","XBT","CustomNumberFormat","Intl","NumberFormat","Account","id","initialBalance","currencyCode","metadata","Immutable.Map","cleanArgs","currency","assign","Immutable.fromJS","MONTHS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","DAYS","SUN","MON","TUE","WED","THU","FRI","SAT","MONTH_SUMS_NORMAL_YEAR","MONTH_SUMS_LEAP_YEAR","NORMAL_YEAR","LEAP_YEAR","DAYS_PER_MONTH","triplet_to_days_value","year","month","day","PDate","daysInMonth","nyear","daysValue","isLeapYear","daysSinceMillenium","substr","charAt","strings","fromString","raw","jsDate","Date","getFullYear","getMonth","getDate","centuries","A","dayOfWeek","dayOfYear","CategoryRulePeriod","allowedRuleValues","Day","Week","Month","Year","CategoryRule","startDate","endDate","repeatN","period","dateBegin","dateEnd","firstDay","lastDay","daysDiff","months","countOccurrencesBetween","Category","rules","notes","groupId","Immutable.List","rule","categoryGroups","addError","otherRule","j","otherStartDate","otherEndDate","isAutomatic","r","CategoryGroup","TransactionDetail","description","categoryId","Transaction","date","accountId","who","detail","userId","pending","isTransfer","account","accounts","addWarning","category","categories","isSplit","_cachedAmount","acc","detailEntry","_accounts","_categories","_categoryGroups","_transactions","majorVersion","minorVersion","AccountMap","arg","Immutable.OrderedMap","CategoryMap","CategoryGroupMap","TransactionMap","Budget","^a","^c","^g","^n","origValues","today","Immutable.Seq","cg","categoriesIterable","_createOrderedCategoryMap","transactions","transactionSorter","t","assertIsValidForBudget","transaction","delete","origCategory","newIndex","groupCategories","cat","newIndexOverall","newCategories","categoryGroup","newCategoryGroups","g","newAccount","newAccounts","newTransaction","sortRequired","oldTransaction","newTransactions","_accountBalances","accountBalances","transactionBalances","balance","_transactionAccountBalances","_computeBalances","transactionId","txn","lastAccountTransaction","categoryBalancesOnDate","transactionCategoryBalances","budgetAmount","version","major","minor","dateField","typedLists","categoryGroupIdsOrdered","prefix","PROPHECY_ACTION_PREFIX","NOOP","SET_CURRENCY","SET_DATE","SET_NAME","DELETE_ACCOUNT","UPDATE_ACCOUNT","DELETE_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY_GROUP","UPDATE_CATEGORY_GROUP","DELETE_TRANSACTION","UPDATE_TRANSACTION","UPDATE_MULTIPLE_TRANSACTIONS","state","action","startsWith","ACTION.PROPHECY_ACTION_PREFIX","budgetId","ACTION.SET_CURRENCY","ACTION.SET_DATE","changes","dateKey","ACTION.SET_NAME","ACTION.DELETE_ACCOUNT","deleteAccount","ACTION.UPDATE_ACCOUNT","existingAccount","acct","newState","data","updateAccount","linkNullTransactions","nullTransactions","txnId","updateTransaction","positionAccount","ACTION.DELETE_CATEGORY","deleteCategory","ACTION.UPDATE_CATEGORY","existingCategory","updateCategory","positionCategory","linkTransactionDetails","detailsIndex","ACTION.DELETE_CATEGORY_GROUP","deleteCategoryGroup","ACTION.UPDATE_CATEGORY_GROUP","group","updateCategoryGroup","positionCategoryGroup","ACTION.DELETE_TRANSACTION","deleteTransaction","ACTION.UPDATE_TRANSACTION","ACTION.UPDATE_MULTIPLE_TRANSACTIONS","subActions","subAction","Imm","actions","defaultCurrency","locales","rawFormatters","formatters","formatter","style","minimumFractionDigits","maximumFractionDigits","symbol","format","pow","replace","inverter","ACTION.NOOP","acctJS","inverse","oldValue","oldIndex","categoryJS","groupJS","txnJS","inverseSubActions","inverseSubAction"],"mappings":"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"}