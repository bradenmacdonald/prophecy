{"version":3,"file":"prophecy-dist.js","sources":["dist/util.js","dist/pdate.js","dist/budget.js","dist/redux/prophecy_redux.js","node_modules/immutable/dist/immutable.js","dist/precord.js","dist/currency.js","dist/account.js","dist/category.js","dist/transaction.js","dist/redux/actions.js","dist/prophecy.js"],"sourcesContent":["import * as Imm from 'immutable';\nexport const Immutable = Imm;\n/**\n * Throw an error if the given condition is ever false.\n *\n * @param {boolean} cond - Condition that is expected to be true\n * @param {string} [msg] - Message to display if this assertion fails\n */\nexport function assert(cond, msg) {\n    if (!cond) {\n        throw Error(msg || \"Assertion Failed\");\n    }\n}\n/**\n * Throw an error if the given value is not a number\n *\n * @param {*} v - Value that is expected to be a Number\n */\nexport function assertIsNumber(v) {\n    assert(typeof v === \"number\" && !Number.isNaN(v), \"Expected a number.\");\n}\n/**\n * Throw an error if the given value is not a positive integer, or null\n *\n * @param {*} v - Value that is expected to be a positive integer or null\n */\nexport function assertPositiveIntegerOrNull(v) {\n    assert(v === null || (typeof v === \"number\" && parseInt(v.toString()) === v && v > 0), \"Expected a positive integer, or null.\");\n}\n/**\n * ValidationResult: Used with PRecord to provide detailed, flexible,\n * contextual validation of model data.\n */\nexport class ValidationResult {\n    constructor() {\n        /**@internal */\n        this.__validationMessages = [];\n    }\n    get warnings() {\n        return this.__validationMessages.filter(msg => msg.type === \"warning\" /* Warning */);\n    }\n    get errors() {\n        return this.__validationMessages.filter(msg => msg.type === \"error\" /* Error */);\n    }\n    getFieldIssues(fieldName) {\n        return this.__validationMessages.filter(msg => msg.field === fieldName);\n    }\n    /**\n     * Get an array of all validation issues that are not specific to any one field.\n     */\n    get overallIssues() {\n        return this.getFieldIssues(null);\n    }\n    get allIssues() {\n        return Object.freeze(this.__validationMessages);\n    }\n}\nValidationResult.Warning = \"warning\" /* Warning */;\nValidationResult.Error = \"error\" /* Error */;\n/**\n * Context during which PRecord validation happens.\n * This contains a reference to the budget that the PRecord in question\n * will become part of.\n */\nexport class ValidationContext {\n    constructor(budget) {\n        this.validationResult = new ValidationResult();\n        this.budget = budget;\n    }\n    _pushMessage(type, message, field) {\n        this.validationResult.__validationMessages.push(Object.freeze({ field, type, message }));\n    }\n    /**\n     * Add a warning to the validation result.\n     *\n     * @param {string|null} field - The field that this warning is about,\n     * or null for warnings that involve multiple fields.\n     * @param {*} message - A string describing the validation issue.\n     */\n    addWarning(field, message) {\n        this._pushMessage(\"warning\" /* Warning */, message, field);\n    }\n    /**\n     * Add an error to the validation result.\n     *\n     * @param {string|null} field - The field that this error is about,\n     * or null for warnings that involve multiple fields.\n     * @param {*} message - A string describing the validation issue.\n     */\n    addError(field, message) {\n        this._pushMessage(\"error\" /* Error */, message, field);\n    }\n    get result() { return Object.freeze(this.validationResult); }\n}\nexport { PRecord } from './precord';\n// i18n placeholders:\n/**\n * Replace the given English text with a localized version.\n * This is currently just a placeholder.\n *\n * @param {string} str - The text to localize\n * @returns {string} The localized text.\n */\nexport function __(str) { return str; }\n//# sourceMappingURL=util.js.map","import { assert } from './util';\nconst MONTHS = Object.freeze({\n    JAN: 0,\n    FEB: 1,\n    MAR: 2,\n    APR: 3,\n    MAY: 4,\n    JUN: 5,\n    JUL: 6,\n    AUG: 7,\n    SEP: 8,\n    OCT: 9,\n    NOV: 10,\n    DEC: 11,\n});\nconst DAYS = Object.freeze({\n    SUN: 0,\n    MON: 1,\n    TUE: 2,\n    WED: 3,\n    THU: 4,\n    FRI: 5,\n    SAT: 6,\n});\nconst MONTH_SUMS_NORMAL_YEAR = Object.freeze([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);\nconst MONTH_SUMS_LEAP_YEAR = Object.freeze([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);\n// The following maps convert from day of the year (e.g. 0 for Jan. 1) to month ('A' = Jan, 'B' = Feb, ...)\n// These maps are precomputed to make the date class highly efficient.\nconst NORMAL_YEAR = (\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\" +\n    \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\" +\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\" +\n    \"JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\");\nconst LEAP_YEAR = (\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\" +\n    \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\" +\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\" +\n    \"JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\");\nconst DAYS_PER_MONTH = Object.freeze([\n    /* Jan */ 31, undefined, /* Mar */ 31, /* Apr */ 30, /* May */ 31, /* Jun */ 30,\n    /* Jul */ 31, /* Aug */ 31, /* Sep */ 30, /* Oct */ 31, /* Nov */ 30, /* Dec */ 31\n]);\n/**\n * Internal helper method.\n * Given a year, month, and day triplet, return\n * the number of days between January 1, 2000 and the given date.\n *\n * @param {number} year - Year (e.g. 2012)\n * @param {number} month - Month (0 for January, 11 for December)\n * @param {number} day - Day (1-31)\n * @returns {number}\n */\nfunction triplet_to_days_value(year, month, day) {\n    assert(year >= 2000 && year <= 3000, \"Year is invalid - must be between 2000 and 3000.\");\n    assert(month >= MONTHS.JAN && month <= MONTHS.DEC, \"Month is invalid.\");\n    assert(day > 0 && day <= PDate.daysInMonth(year, month));\n    const nyear = (year - 2000 | 0);\n    let days_value = (nyear * 365) + ((nyear + 3) / 4 | 0) - ((nyear + 99) / 100 | 0) + ((nyear + 399) / 400 | 0);\n    // Compute the number of days between the first day of the year and the first day of the month:\n    days_value += PDate.isLeapYear(year) ? MONTH_SUMS_LEAP_YEAR[month] : MONTH_SUMS_NORMAL_YEAR[month];\n    days_value += day - 1;\n    return days_value;\n}\nexport default class PDate {\n    /**\n     * Construct a Date from a triple of year, month (0-11), day (1-31)\n     * @param {number} year - Year (e.g. 2012)\n     * @param {number} month - Month (0 for January, 11 for December)\n     * @param {number} day - Day (1-31)\n     * @returns {PDate}\n     */\n    static create(year, month, day) {\n        return new PDate(triplet_to_days_value(year, month, day));\n    }\n    /**\n     * Construct a Date from an ISO 8601 date string \"YYYY-MM-DD\" or \"YYYYMMDD\"\n     * @param {string} str - An ISO 8601 date string\n     * @returns {PDate}\n     */\n    static fromString(str) {\n        const year = parseInt(str.substr(0, 4));\n        let month = NaN;\n        let day = NaN;\n        if (str.length === 10 && str.charAt(4) === '-' && str.charAt(7) === '-') {\n            // YYYY-MM-DD format, presumably:\n            month = parseInt(str.substr(5, 2));\n            day = parseInt(str.substr(8, 2));\n        }\n        else if (str.length === 8 && String(parseInt(str)) === str) {\n            month = parseInt(str.substr(4, 2));\n            day = parseInt(str.substr(6, 2));\n        }\n        if (isNaN(year) || isNaN(month) || isNaN(day)) {\n            throw \"Date string not in YYYY-MM-DD or YYYYMMDD format\";\n        }\n        return new PDate(triplet_to_days_value(year, month - 1, day));\n    }\n    /**\n     * Parse a template string literal, e.g. const D = PDate.parseTemplateLiteral; const date1 = D`2016-01-01`;\n     * @param {Object} strings Well-formed template call site object\n     * @param {...*} keys - substitution values\n     * @returns {PDate}\n     */\n    static parseTemplateLiteral(strings, ...keys) {\n        return PDate.fromString(String.raw(strings, ...keys));\n    }\n    /**\n     * Get the current date, according to the system's local time\n     * @returns {PDate}\n     */\n    static today() {\n        const js_date = new Date();\n        return new PDate(triplet_to_days_value(js_date.getFullYear(), js_date.getMonth(), js_date.getDate()));\n    }\n    /**\n     * Construct a PDate instance using its internal int representation (# of days since the millenium)\n     * @param {Number} daysSinceMillenium - number representing the date\n     */\n    constructor(daysSinceMillenium) {\n        assert(daysSinceMillenium >= 0);\n        assert(daysSinceMillenium <= 365615); // Corresponds to Dec. 31, 3000\n        this.value = daysSinceMillenium;\n        // Safer, but notably slower:\n        //Object.defineProperty(this, \"value\", {value: daysSinceMillenium, writable: false});\n    }\n    /**\n     * Custom JSON serialization\n     * @returns {number}\n     */\n    toJSON() { return this.value; }\n    /**\n     * Custom serialization when used with Immutable.js\n     * @returns {number}\n     */\n    toJS() { return this.value; }\n    /**\n     * Get the year (2000-3000)\n     * @returns {number}\n     */\n    get year() {\n        // This formula is valid for any year 2000 or later\n        const centuries = this.value / 36525 | 0;\n        return (2000 + (this.value + centuries - (centuries / 4 | 0)) / 365.25) | 0;\n    }\n    /**\n     * Get the month (0-11)\n     * @returns {number}\n     */\n    get month() {\n        const nyear = this.year - 2000;\n        // Compute the number of days between January 1, 2000 and the first day of the given year:\n        const d = (nyear * 365) + ((nyear + 3) / 4 | 0) - ((nyear + 99) / 100 | 0) + ((nyear + 399) / 400 | 0);\n        const A = 'A'.charCodeAt(0);\n        if (PDate.isLeapYear(nyear))\n            return LEAP_YEAR.charCodeAt(this.value - d) - A;\n        else\n            return NORMAL_YEAR.charCodeAt(this.value - d) - A;\n    }\n    /**\n     * Get the day of the month (1-31)\n     * @returns {number}\n     */\n    get day() {\n        return this.value - triplet_to_days_value(this.year, this.month, 1) + 1;\n    }\n    /** Get the day of the week (0 = Sunday, 6 = Saturday) */\n    get dayOfWeek() { return (this.value + 6) % 7; }\n    /** Get the day of the year (0-365) */\n    get dayOfYear() { return this.value - triplet_to_days_value(this.year, 0, 1); }\n    /**\n     * Get the date as an ISO 8601 string (\"2015-01-25\")\n     * @returns {string}\n     */\n    toString() {\n        const year = this.year, month = this.month + 1, day = this.day;\n        return year.toString() + (month < 10 ? \"-0\" : \"-\") + month + (day < 10 ? \"-0\" : \"-\") + day;\n    }\n    /**\n     * Get the primitive value (enables correct sorting and comparison)\n     * Except note that equality checking won't work unless you coerce values\n     * e.g. PDate.create(2010, 1, 1) == PDate.create(2010, 1, 1) : false\n     * e.g. PDate.create(2010, 1, 1) == +PDate.create(2010, 1, 1) : true\n     * @returns {number}\n     */\n    valueOf() { return this.value; }\n    /**\n     * Helper method: how many days are in the specified month of the specified year?\n     * @param {number} year - Year\n     * @param {number} month - Month (0-11)\n     * @returns {number}\n     */\n    static daysInMonth(year, month) {\n        assert(year >= 2000 && year <= 3000);\n        assert(month >= MONTHS.JAN && month <= MONTHS.DEC, \"Month is invalid.\");\n        if (month === MONTHS.FEB) {\n            return PDate.isLeapYear(year) ? 29 : 28;\n        }\n        return DAYS_PER_MONTH[month];\n    }\n    /**\n     * Is 'year' a leap year? Can be an absolute year (e.g. 2016) or relative to the millenium (e.g. 16).\n     * @param {number} year - The year in question\n     * @returns {boolean}\n     */\n    static isLeapYear(year) { year = year | 0; return (year % 4 == 0) && (year % 100 != 0 || year % 400 == 0); }\n    // Constants\n    static get DAYS() { return DAYS; }\n    static get MONTHS() { return MONTHS; }\n}\n//# sourceMappingURL=pdate.js.map","import PDate from './pdate';\nimport { Account } from './account';\nimport { Category, CategoryGroup } from './category';\nimport { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport { Transaction } from './transaction';\nimport { __, assert, assertIsNumber, PRecord, Immutable } from './util';\n// Private constants used to create private fields on a Record subclass:\n// Unfortunately we cannot use Symbols, since Immutable.Record keys must be strings.\n// The value of these strings doesn't matter, as long as they're unique.\n/** Key for private field containing OrderedMap of accounts */\nconst _accounts = \"^a\";\n/** Key for private field containing Map of categories */\nconst _categories = \"^c\";\n/** Key for private field containing OrderedMap of category groups */\nconst _categoryGroups = \"^g\";\n/** Key for private field containing OrderedMap of transactions */\nconst _transactions = \"^n\";\n// Private symbols used for other attributes that aren't formal fields:\nconst _accountBalances = Symbol();\nconst _transactionAccountBalances = Symbol();\n// Prophecy/Budget class version\n// The major version should be changed when backwards compatibility is broken.\n// The minor version should be changed when new features are added in a backwards-compatible way.\nexport const majorVersion = 0;\nexport const minorVersion = 1;\n/**\n * Class that describes a budget.\n *\n * A budget is a set of spending plans and actual transactions\n * for a specific a period of time.\n */\nexport class Budget extends PRecord({\n    id: null,\n    name: __(\"New Budget\"),\n    /** Start date of the budget. Always of type PDate, and always less than or equal to end date. */\n    startDate: null,\n    /** End date of the budget. Always of type PDate, and always greater than or equal to start date. */\n    endDate: null,\n    /**\n     * ISO 4217 currency code for the budget. Individual accounts may use different currencies.\n     * This setting does not directly have any effect as far as Prophecy is concerned, but it\n     * is useful to apps working with the budget.\n     *\n     * It's best to read this value as a Currency object using the 'currency' getter.\n     */\n    currencyCode: 'USD',\n    /** Ordered map of Accounts, in a custom order specified by the user. See accounts() getter. */\n    [_accounts]: Immutable.OrderedMap(),\n    /** Map of Categories, keyed by ID, ordered by category group order, and in a custom order within each group. See categories() getter. */\n    [_categories]: Immutable.OrderedMap(),\n    /** Ordered map of CategoryGroups, in a custom order specified by the user. See categoryGroups() getter. */\n    [_categoryGroups]: Immutable.OrderedMap(),\n    /** _transactions: Stores transactions. See transactions() getter. */\n    [_transactions]: Immutable.OrderedMap(),\n}) {\n    constructor(values) {\n        values = Object.assign({}, values || {}); // Don't modify the argument itself\n        // Budget must always have a valid date range:\n        if (values.startDate === undefined || values.endDate === undefined) {\n            const year = PDate.today().year;\n            values.startDate = values.startDate || PDate.create(year, 0, 1);\n            values.endDate = values.endDate || PDate.create(year, 11, 31);\n        }\n        // Allow passing 'accounts' into the constructor. It can be any iterable with Account-typed values\n        if (values.accounts !== undefined) {\n            // Don't trust the keys (if any) of values.accounts; create new keys:\n            values[_accounts] = new Immutable.OrderedMap(Immutable.Seq.Indexed(values.accounts).map(a => [a.id, a]));\n            delete values.accounts;\n        }\n        // Allow passing 'categoryGroups' into the constructor. It can be any iterable with CategoryGroup-typed values.\n        if (values.categoryGroups !== undefined) {\n            values[_categoryGroups] = new Immutable.OrderedMap(Immutable.Seq.Indexed(values.categoryGroups).map(cg => [cg.id, cg]));\n            delete values.categoryGroups;\n        }\n        // Allow passing 'categories' into the constructor. It can be any iterable with Category-typed values\n        if (values.categories !== undefined) {\n            // Don't trust the keys (if any) of values.categories; create new keys.\n            // Also ensure that all categories are sorted by group in the same order as CategoryGroups is sorted.\n            values[_categories] = _createOrderedCategoryMap(values.categories, values[_categoryGroups]);\n            delete values.categories;\n        }\n        // Allow passing 'transactions' into the constructor. It can be any iterable with Transaction-typed values\n        if (values.transactions !== undefined) {\n            assert(values[_transactions] === undefined); // We expect 'transactions' or _transactions, but not both.\n            // Don't trust the keys (if any) or the ordering of values.transactions; create new keys and force a sort:\n            values[_transactions] = new Immutable.OrderedMap(Immutable.Seq.Indexed(values.transactions).sortBy(Budget.transactionSorter).map(t => [t.id, t]));\n            delete values.transactions;\n        }\n        super(values);\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assert(this.currency instanceof Currency, \"currencyCode must be valid\");\n        assert(this.startDate instanceof PDate);\n        assert(this.endDate instanceof PDate);\n        assert(+this.endDate >= +this.startDate);\n        assert(this.accounts instanceof Immutable.OrderedMap);\n        this.accounts.forEach(account => assert(account instanceof Account));\n        assert(this.categoryGroups instanceof Immutable.OrderedMap);\n        this.categoryGroups.forEach(category => assert(category instanceof CategoryGroup));\n        assert(this.categories instanceof Immutable.OrderedMap);\n        this.categories.forEach(category => {\n            assert(category instanceof Category);\n            category.assertIsValidForBudget(this);\n        });\n        assert(this.transactions instanceof Immutable.OrderedMap);\n        this.transactions.forEach(transaction => {\n            assert(transaction instanceof Transaction);\n            transaction.assertIsValidForBudget(this);\n        });\n    }\n    /** Get the currency of this budget. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /** Ordered list of Accounts, in custom order */\n    get accounts() { return this[_accounts]; }\n    /** Map of categories, keyed by ID. Not in order. */\n    get categories() { return this[_categories]; }\n    /** Ordered list of CategoryGroups, in custom order */\n    get categoryGroups() { return this[_categoryGroups]; }\n    /**\n     * Delete a category.\n     *\n     * Any transactions linked to this category will have their category set to null.\n     *\n     * @param {number} id - ID of the category to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteCategory(id) {\n        // Change all Transaction references to that category to null:\n        const transactions = this[_transactions].map(t => t.set('detail', t.detail.map(d => d.update('categoryId', categoryId => categoryId === id ? null : categoryId))));\n        return this.merge({\n            [_categories]: this[_categories].delete(id),\n            [_transactions]: transactions,\n        });\n    }\n    /**\n     * Insert or update a category\n     *\n     * If category.id is in the list of category groups, this will be an update.\n     * If category.id is not in the list of category groups, this will add a new group.\n     *\n     * This method cannot be used to change the order of categories (use positionCategory).\n     *\n     * @param {Account} category - The category to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateCategory(category) {\n        assert(category instanceof Category);\n        assertIsNumber(category.id);\n        const origCategory = this.categories.get(category.id);\n        if (origCategory === undefined || origCategory.groupId !== category.groupId) {\n            // The group ID has changed. We need to carefully ensure that this.categories\n            // stays sorted, first by group order, then in custom order, with the modified\n            // category at the end of its new category group\n            let categories = this.categories.delete(category.id).set(category.id, category); // Move/insert category to the end\n            categories = _createOrderedCategoryMap(categories.valueSeq(), this.categoryGroups);\n            return this.set(_categories, categories);\n        }\n        return this.set(_categories, this[_categories].set(category.id, category));\n    }\n    /**\n     * Change a category's position within its category group\n     *\n     * @param {number} categoryId ID of the category to move\n     * @param {number} newIndex New position within its category group (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionCategory(categoryId, newIndex) {\n        assertIsNumber(categoryId);\n        assertIsNumber(newIndex);\n        const category = this.categories.get(categoryId);\n        assert(category instanceof Category);\n        const groupCategories = this.categories.filter(cat => cat.groupId === category.groupId);\n        assert(newIndex >= 0 && newIndex <= groupCategories.size);\n        // this.categories is ordered first by category group order, then by custom order within each group.\n        // Our goal is to move the category around within the group, but keep the overall map still sorted\n        // by group.\n        const currentIndexOverall = this.categories.keySeq().keyOf(categoryId);\n        const currentIndexWithinGroup = groupCategories.keySeq().keyOf(categoryId);\n        const newIndexOverall = currentIndexOverall + (newIndex - currentIndexWithinGroup);\n        const newCategories = new Immutable.OrderedMap(this.categories.toList().filter(cat => cat.id !== categoryId).insert(newIndexOverall, category).map(a => [a.id, a]));\n        return this.set(_categories, newCategories);\n    }\n    /**\n     * Delete a category group. It must be empty!\n     * @param {number} id - ID of the category group to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteCategoryGroup(id) {\n        assert(this.categories.filter(cat => cat.groupId === id).isEmpty(), \"Only empty category groups can be deleted.\");\n        return this.set(_categoryGroups, this[_categoryGroups].delete(id));\n    }\n    /**\n     * Insert or update a category group.\n     *\n     * If categoryGroup.id is in the list of category groups, this will be an update.\n     * If categoryGroup.id is not in the list of category groups, this will add a new group.\n     *\n     * This method cannot be used to change the order of category groups (use positionCategoryGroup).\n     *\n     * @param {Account} categoryGroup - The category group to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateCategoryGroup(categoryGroup) {\n        assert(categoryGroup instanceof CategoryGroup);\n        assertIsNumber(categoryGroup.id);\n        return this.set(_categoryGroups, this[_categoryGroups].set(categoryGroup.id, categoryGroup));\n    }\n    /**\n     * Change a category group's position in the list of category groups\n     *\n     * @param {number} groupId ID of the category group to move\n     * @param {number} newIndex New position in the list of category groups (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionCategoryGroup(groupId, newIndex) {\n        assertIsNumber(groupId);\n        assertIsNumber(newIndex);\n        const categoryGroup = this.categoryGroups.get(groupId);\n        assert(categoryGroup instanceof CategoryGroup);\n        const newCategoryGroups = new Immutable.OrderedMap(this.categoryGroups.toList().filter(g => g.id !== groupId).insert(newIndex, categoryGroup).map(a => [a.id, a]));\n        return this.set(_categoryGroups, newCategoryGroups);\n    }\n    /**\n     * Delete an account\n     * @param {number} id - ID of the account to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteAccount(id) {\n        // Change all Transaction references to that account to null:\n        const transactions = this[_transactions].map(t => {\n            if (t.accountId == id) {\n                return t.set(\"accountId\", null);\n            }\n            return t;\n        });\n        return this.merge({\n            [_accounts]: this[_accounts].delete(id),\n            [_transactions]: transactions,\n        });\n    }\n    /**\n     * updateAccount: Insert or update an account.\n     *\n     * If newAccount.id is in the list of accounts, this will be an update.\n     * If newAccount.id is not in the list of accounts, this will add a new account.\n     *\n     * This method cannot be used to change the order of accounts (use positionAccount).\n     *\n     * @param {Account} newAccount - The account to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateAccount(newAccount) {\n        assert(newAccount instanceof Account);\n        assertIsNumber(newAccount.id);\n        const newAccounts = this[_accounts].set(newAccount.id, newAccount);\n        return this.set(_accounts, newAccounts);\n    }\n    /**\n     * positionAccount: Change an account's position in the list of accounts\n     *\n     * @param {number} accountId ID of the account to move\n     * @param {number} newIndex New position in the list of accounts (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionAccount(accountId, newIndex) {\n        assertIsNumber(accountId);\n        assertIsNumber(newIndex);\n        const account = this.accounts.get(accountId);\n        assert(account instanceof Account);\n        const newAccounts = new Immutable.OrderedMap(this.accounts.toList().filter(a => a.id !== accountId).insert(newIndex, account).map(a => [a.id, a]));\n        return this.set(_accounts, newAccounts);\n    }\n    /**\n     * Ordered list of Transactions, always in chronological order (oldest first; null dates go last)\n     * @returns {OrderedMap}\n     */\n    get transactions() { return this[_transactions]; }\n    /**\n     * Delete a transaction\n     * @param {number} id - ID of the transaction to delete\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    deleteTransaction(id) { return this.set(_transactions, this[_transactions].delete(id)); }\n    /**\n     * updateTransaction: Insert or update a transaction.\n     *\n     * If newTransaction.id is in the list of transactions, this will be an update.\n     * If newTransaction.id is not in the list of transactions, this will add it.\n     *\n     * @param {Transaction} newTransaction - The transaction to insert/modify.\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateTransaction(newTransaction) {\n        assert(newTransaction instanceof Transaction, \"expected Transaction\");\n        assertIsNumber(newTransaction.id, \"Transaction instances must have numeric ID.\");\n        assert(newTransaction.accountId === null || this.accounts.has(newTransaction.accountId), \"accountId must be valid.\");\n        const id = newTransaction.id;\n        let sortRequired = true;\n        if (this[_transactions].has(id)) {\n            // We are replacing an existing value:\n            const oldTransaction = this[_transactions].get(id);\n            // We'll only need to re-sort transactions if the date has changed:\n            sortRequired = (newTransaction.date !== +oldTransaction.date);\n        }\n        else {\n            // We are inserting a new value.\n            // Sort it into the correct spot, unless 'date' is null, in which\n            // case it can just be appended to the end of the list.\n            sortRequired = newTransaction.date !== null;\n        }\n        let newTransactions = this[_transactions].set(id, newTransaction);\n        if (sortRequired) {\n            newTransactions = newTransactions.sortBy(Budget.transactionSorter);\n        }\n        return this.set(_transactions, newTransactions);\n    }\n    /**\n     * _computeBalances: Private method that computes the balance of each account as well\n     * as the running total of the relevant account as of each transaction.\n     */\n    _computeBalances() {\n        assert(this[_accountBalances] === undefined, \"_computeBalances() should only run once per Budget instance.\");\n        // Get the initial balance of each account:\n        const accountBalances = this.accounts.map(account => account.initialBalance).toJS();\n        const transactionBalances = {};\n        // Use accountBalances[null] to represents the total 'amount' of transactions that\n        // have no account set. The currency of this amount is unknonwn so the absolute\n        // amount is meaningless; we mostly care if it's zero or not.\n        accountBalances[null] = 0;\n        for (let transaction of this.transactions.filterNot(t => t.pending).values()) {\n            const balance = accountBalances[transaction.accountId] += transaction.amount; // Note that transaction.accountId may be null\n            if (transaction.accountId) {\n                transactionBalances[transaction.id] = balance;\n            }\n        }\n        // We cache the results and make them immutable. We don't have to worry about cache\n        // invalidation; any change to Budget will create a new object with an empty cache.\n        this[_accountBalances] = Object.freeze(accountBalances);\n        this[_transactionAccountBalances] = Object.freeze(transactionBalances);\n    }\n    /** Get an object which contains balance of each account keyed by accountId, considering all non-pending transactions */\n    get accountBalances() {\n        if (this[_accountBalances] === undefined) {\n            this._computeBalances();\n        }\n        return this[_accountBalances];\n    }\n    /**\n     * Get the balance of any account as of the specified transaction.\n     * Only non-pending transactions with a date are considered.\n     *\n     * @param {number} transactionId - The transaction to use as a reference point\n     * @param {number} accountId - the account whose balance to return\n     * @returns {number|undefined} The balance of the specified account as of the specified transaction\n     **/\n    accountBalanceAsOfTransaction(transactionId, accountId) {\n        const transactions = this.transactions.filter(txn => txn.date !== null && txn.pending === false);\n        const transaction = transactions.get(transactionId);\n        const account = this.accounts.get(accountId);\n        assert(account !== undefined);\n        if (transaction === undefined) {\n            return undefined; // Probably a pending transaction or one without a date.\n        }\n        if (this[_accountBalances] === undefined) {\n            this._computeBalances();\n        }\n        if (transaction.accountId == accountId) {\n            return this[_transactionAccountBalances][transactionId];\n        }\n        else {\n            // Account balances are computed per transaction.\n            // Find the most recent preceding transaction associated with the specified account,\n            // and return the account balance as of that transaction.\n            const index = transactions.keySeq().keyOf(transactionId); // The index of the specified transaction\n            const precedingTransactions = transactions.valueSeq().slice(0, index);\n            const lastAccountTransaction = precedingTransactions.findLast(txn => txn.accountId === accountId);\n            if (lastAccountTransaction) {\n                return this[_transactionAccountBalances][lastAccountTransaction.id];\n            }\n            else {\n                return account.initialBalance;\n            }\n        }\n    }\n    /**\n     * Given a date, get the balance of all categories, up to and including that date.\n     *\n     * @param {PDate} date - The date\n     * @returns {Immutable.Map} - The balance of all categories as of that date, as a map where\n     *        the key is the category ID and the value is the balance of that category.\n     */\n    categoryBalancesOnDate(date) {\n        assert(date instanceof PDate);\n        assert(date >= this.startDate);\n        assert(date <= this.endDate);\n        return Immutable.Map().withMutations(map => {\n            for (let txn of this.transactions.values()) {\n                if (txn.date > date) {\n                    break;\n                }\n                txn.detail.forEach(d => map.set(d.categoryId, map.get(d.categoryId, 0) + d.amount));\n            }\n        });\n    }\n    /**\n     * Given a date, get the balance of the specified category, up to and including that date.\n     *\n     * @param {number} categoryId - The ID of the category\n     * @param {PDate} date - The date\n     * @returns {number} - The balance of the specified category as of that date\n     */\n    categoryBalanceByDate(categoryId, date) {\n        assert(this.categories.has(categoryId));\n        return this.categoryBalancesOnDate(date).get(categoryId, 0);\n    }\n    /**\n     * Given a date, get the budget of each category, up to and including that date.\n     *\n     * @param {PDate} date - The date\n     * @returns {Immutable.Map} - The budget of all categories as of that date, as a map where\n     *        the key is the category ID and the value is the budget amount of that category.\n     */\n    categoryBudgetsOnDate(date) {\n        let transactionCategoryBalances = null;\n        assert(date instanceof PDate);\n        assert(date >= this.startDate);\n        assert(date <= this.endDate);\n        return Immutable.Map().withMutations(map => {\n            for (let category of this.categories.values()) {\n                let budgetAmount = 0;\n                if (category.isAutomatic) {\n                    if (transactionCategoryBalances === null) {\n                        transactionCategoryBalances = this.categoryBalancesOnDate(date);\n                    }\n                    budgetAmount = transactionCategoryBalances.get(category.id, 0);\n                }\n                else {\n                    category.rules.forEach(rule => {\n                        budgetAmount += rule.amount * rule.countOccurrencesBetween(this.startDate, date);\n                    });\n                }\n                map.set(category.id, budgetAmount);\n            }\n        });\n    }\n    toJS() {\n        let result = super.toJS();\n        // Remove private keys:\n        delete result[_accounts];\n        delete result[_categories];\n        delete result[_categoryGroups];\n        delete result[_transactions];\n        // Add accounts as a correctly-ordered array:\n        result.accounts = this.accounts.toList().toJS();\n        // Add categories as an array:\n        result.categories = this.categories.toList().toJS();\n        // Add category groups as a correctly-ordered array:\n        result.categoryGroups = this.categoryGroups.toList().toJS();\n        // Add transactions as a correctly-ordered array:\n        result.transactions = this.transactions.toList().toJS();\n        // Add version information\n        // Major version should only change if backwards compatibility is broken.\n        result.version = { major: majorVersion, minor: minorVersion };\n        return result;\n    }\n    /**\n     * Convert from a JSON-friendly native JavaScript object (or JSON) to a Budget instance.\n     * @param {Object} obj - JSON or JavaScript serialized representation of an instance of this Budget.\n     * @returns {Object} - New instance of this Budget.\n     */\n    static fromJS(obj) {\n        // The JS serialization won't be typed, but the constructor expects types like Catgory, Transaction, etc:\n        const values = Object.assign({}, obj);\n        for (let dateField of ['startDate', 'endDate']) {\n            if (values[dateField] !== null) {\n                assertIsNumber(values[dateField]);\n                values[dateField] = new PDate(values[dateField]);\n            }\n        }\n        const typedLists = [\n            { key: \"accounts\", type: Account },\n            { key: \"categories\", type: Category },\n            { key: \"categoryGroups\", type: CategoryGroup },\n            { key: \"transactions\", type: Transaction },\n        ];\n        for (let { key, type } of typedLists) {\n            values[key] = values[key].map(entry => type.fromJS(entry));\n        }\n        return new this(values);\n    }\n    static transactionSorter(transaction) {\n        return (+transaction.date || 999999); // Sort 'null' dates after the highest date\n    }\n}\n/**\n * Given any iterable of Categories, generate a properly sorted OrderedMap.\n *\n * Categories should be ordered by group (in the custom order that category\n * groups are in), and then secondarily by the custom order (whatever order\n * they're currently in in the passed iterable.)\n *\n * @param {Category[]} categories - Iterable of categories\n * @param {CategoryGroup[]} categoryGroups - The groups that the categories\n *        need to be sorted by. The groups should be in a custom order.\n *\n * @returns {Immutable.OrderedMap} OrderedMap of categories.\n */\nfunction _createOrderedCategoryMap(categories, categoryGroups) {\n    const categoryGroupIdsOrdered = categoryGroups.keySeq();\n    return new Immutable.OrderedMap(Immutable.Seq.Indexed(categories).sortBy(category => categoryGroupIdsOrdered.keyOf(category.groupId)).map(c => [c.id, c]));\n}\n//# sourceMappingURL=budget.js.map","import { assert, assertIsNumber } from '../util';\nimport { Account, Budget, Category, CategoryGroup, PDate, Transaction } from '../prophecy';\nimport * as ACTION from './actions';\n/**\n * The reducer for prophecy. Used to make the Prophecy engine work within a redux app.\n * @param {Budget} state - the state to modify\n * @param {Object} action - the action to apply to the state, if applicable\n * @returns {Budget} - returns the state, with any resulting modifications\n */\nexport function reducer(state = new Budget(), action) {\n    // Basic checks:\n    if (!action.type.startsWith(ACTION.PROPHECY_ACTION_PREFIX)) {\n        // This is not a prophecy-specific action\n        return state;\n    }\n    if (action.budgetId !== undefined && action.budgetId !== state.id) {\n        // This action does not apply to this particular budget\n        return state;\n    }\n    switch (action.type) {\n        case ACTION.SET_CURRENCY: {\n            return state.set('currencyCode', action.currencyCode);\n        }\n        case ACTION.SET_DATE: {\n            const changes = {};\n            for (let dateKey of ['startDate', 'endDate']) {\n                if (dateKey in action) {\n                    changes[dateKey] = new PDate(action[dateKey]);\n                }\n            }\n            return state.merge(changes);\n        }\n        case ACTION.SET_NAME: {\n            return state.set('name', action.name);\n        }\n        // Account actions:\n        case ACTION.DELETE_ACCOUNT: {\n            return state.deleteAccount(action.id);\n        }\n        case ACTION.UPDATE_ACCOUNT: {\n            assertIsNumber(action.id);\n            const existingAccount = state.accounts.get(action.id);\n            const acct = existingAccount || new Account({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateAccount(acct.merge(action.data));\n            }\n            if (action.linkNullTransactions) {\n                // Implement the \"linkNullTransactions\" param, required to make DELETE_ACCOUNT fully invertable:\n                assert(existingAccount === undefined); // linkNullTransactions is only allowed for Account insertions\n                const nullTransactions = newState.transactions.filter(t => t.accountId == null);\n                action.linkNullTransactions.forEach(txnId => {\n                    const txn = nullTransactions.get(txnId);\n                    if (txn) {\n                        newState = newState.updateTransaction(txn.set('accountId', action.id));\n                    }\n                });\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionAccount(action.id, action.index);\n            }\n            return newState;\n        }\n        // Category actions:\n        case ACTION.DELETE_CATEGORY: {\n            return state.deleteCategory(action.id);\n        }\n        case ACTION.UPDATE_CATEGORY: {\n            assertIsNumber(action.id);\n            const existingCategory = state.categories.get(action.id);\n            const category = existingCategory || new Category({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateCategory(category.merge(Category.cleanArgs(action.data)));\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionCategory(action.id, action.index);\n            }\n            if (action.linkTransactionDetails) {\n                // Implement the \"linkTransactionDetails\" param, required to make DELETE_CATEGORY fully invertable:\n                assert(existingCategory === undefined); // linkTransactionDetails is only allowed for Category insertions\n                // linkTransactionDetails is a list of tuples of [transaction ID, index into transaction.detail list]\n                action.linkTransactionDetails.forEach(([txnId, detailsIndex]) => {\n                    const txn = newState.transactions.get(txnId);\n                    if (txn) {\n                        newState = newState.updateTransaction(txn.updateIn(['detail', detailsIndex, 'categoryId'], categoryId => categoryId === null ? action.id : categoryId));\n                    }\n                });\n            }\n            return newState;\n        }\n        // Category Group actions:\n        case ACTION.DELETE_CATEGORY_GROUP: {\n            return state.deleteCategoryGroup(action.id);\n        }\n        case ACTION.UPDATE_CATEGORY_GROUP: {\n            assertIsNumber(action.id);\n            const existingGroup = state.categoryGroups.get(action.id);\n            const group = existingGroup || new CategoryGroup({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateCategoryGroup(group.merge(action.data));\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionCategoryGroup(action.id, action.index);\n            }\n            return newState;\n        }\n        // Transaction actions:\n        case ACTION.DELETE_TRANSACTION: {\n            return state.deleteTransaction(action.id);\n        }\n        case ACTION.UPDATE_TRANSACTION: {\n            assertIsNumber(action.id);\n            assert(!('id' in action.data));\n            const data = Transaction.cleanArgs(action.data);\n            const txn = state.transactions.get(action.id) || new Transaction({ id: action.id });\n            return state.updateTransaction(txn.merge(data));\n        }\n        case ACTION.UPDATE_MULTIPLE_TRANSACTIONS: {\n            let newState = state;\n            action.subActions.forEach(subAction => {\n                assert(subAction.type === ACTION.UPDATE_TRANSACTION || subAction.type === ACTION.DELETE_TRANSACTION);\n                assert(subAction.budgetId === undefined || subAction.budgetId === state.id);\n                newState = reducer(newState, subAction);\n            });\n            return newState;\n        }\n        default:\n            return state;\n    }\n}\n/**\n * The action inverter for prophecy.\n * Given an action and a state, produce the inverse of 'action', such that\n * inverse(action(state)) = state\n *\n * This is used to build undo functionality that is relatively robust\n * when multiple users can simultaneously be emitting actions.\n *\n * @param {Budget} state - the state that is about to be modified by action\n * @param {Object} action - the action to invert\n * @returns {?Object} - An action (a JS object) or null, if the action cannot be inverted.\n */\nexport function inverter(state, action) {\n    // Inner function to generate the inverted action's parameters:\n    let result = (() => {\n        switch (action.type) {\n            case ACTION.NOOP: {\n                return {};\n            }\n            // Setting actions:\n            case ACTION.SET_CURRENCY: {\n                return { currencyCode: state.get('currencyCode') };\n            }\n            case ACTION.SET_DATE: {\n                const data = {};\n                for (let dateType of ['startDate', 'endDate']) {\n                    if (dateType in action) {\n                        data[dateType] = +state[dateType];\n                    }\n                }\n                return data;\n            }\n            case ACTION.SET_NAME: {\n                return { name: state.name };\n            }\n            // Account actions:\n            case ACTION.DELETE_ACCOUNT: {\n                const acct = state.accounts.get(action.id);\n                if (acct) {\n                    const data = acct.toJS();\n                    delete data.id;\n                    // Restore the associated transactions that will have their accountId set null:\n                    const linkNullTransactions = state.transactions.valueSeq().filter(t => t.accountId == action.id).map(t => t.id);\n                    const index = state.accounts.keySeq().keyOf(action.id);\n                    return { type: ACTION.UPDATE_ACCOUNT, id: action.id, data, linkNullTransactions, index };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_ACCOUNT: {\n                const acct = state.accounts.get(action.id);\n                if (acct) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_ACCOUNT action:\n                    const acctJS = acct.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (let key in action.data) {\n                            if (acctJS[key] !== action.data[key]) {\n                                inverse.data[key] = acctJS[key];\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this account on the account list changed?\n                        const oldIndex = state.accounts.keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the account:\n                    return { type: ACTION.DELETE_ACCOUNT, id: action.id };\n                }\n            }\n            // Category actions:\n            case ACTION.DELETE_CATEGORY: {\n                const category = state.categories.get(action.id);\n                if (category) {\n                    const data = category.toJS();\n                    delete data.id;\n                    // Restore the associated transaction details that will have their categoryId set null.\n                    // We do this by including a list with tuples of (transaction ID, detail index).\n                    const linkTransactionDetails = [];\n                    state.transactions.forEach(txn => {\n                        txn.detail.forEach((detail, idx) => {\n                            if (detail.categoryId === category.id) {\n                                linkTransactionDetails.push([txn.id, idx]);\n                            }\n                        });\n                    });\n                    const index = state.categories.filter(cat => cat.groupId == category.groupId).keySeq().keyOf(action.id);\n                    return { type: ACTION.UPDATE_CATEGORY, id: action.id, data, linkTransactionDetails, index };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_CATEGORY: {\n                const category = state.categories.get(action.id);\n                if (category) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_CATEGORY action:\n                    const categoryJS = category.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (let key in action.data) {\n                            if (categoryJS[key] !== action.data[key]) {\n                                inverse.data[key] = categoryJS[key];\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this category within the group changed?\n                        const oldIndex = state.categories.filter(cat => cat.groupId == category.groupId).keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the category:\n                    return { type: ACTION.DELETE_CATEGORY, id: action.id };\n                }\n            }\n            // Category Group actions:\n            case ACTION.DELETE_CATEGORY_GROUP: {\n                const group = state.categoryGroups.get(action.id);\n                if (group) {\n                    const data = group.toJS();\n                    delete data.id;\n                    return { type: ACTION.UPDATE_CATEGORY_GROUP, id: action.id, data };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_CATEGORY_GROUP: {\n                const group = state.categoryGroups.get(action.id);\n                if (group) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_CATEGORY_GROUP action:\n                    const groupJS = group.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (let key in action.data) {\n                            if (groupJS[key] !== action.data[key]) {\n                                inverse.data[key] = groupJS[key];\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this category group on changed?\n                        const oldIndex = state.categoryGroups.keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the category group:\n                    return { type: ACTION.DELETE_CATEGORY_GROUP, id: action.id };\n                }\n            }\n            // Transaction actions:\n            case ACTION.DELETE_TRANSACTION: {\n                const txn = state.transactions.get(action.id);\n                if (txn) {\n                    const data = txn.toJS();\n                    delete data.id;\n                    return { type: ACTION.UPDATE_TRANSACTION, id: action.id, data };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_TRANSACTION: {\n                const txn = state.transactions.get(action.id);\n                if (txn) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_TRANSACTION action:\n                    const txnJS = txn.toJS();\n                    let data = {};\n                    for (let key in action.data) {\n                        if (txnJS[key] !== action.data[key]) {\n                            data[key] = txnJS[key];\n                        }\n                    }\n                    return { id: action.id, data };\n                }\n                else {\n                    // To undo this insertion, we need to delete the transaction:\n                    return { type: ACTION.DELETE_TRANSACTION, id: action.id };\n                }\n            }\n            case ACTION.UPDATE_MULTIPLE_TRANSACTIONS: {\n                let inverseSubActions = [];\n                // Reverse iterate over action.subActions and invert each one:\n                let newState = state;\n                action.subActions.forEach(subAction => {\n                    const inverseSubAction = inverter(newState, subAction);\n                    delete inverseSubAction.budgetId; // Delete this since it's redundant\n                    inverseSubActions.push(inverseSubAction);\n                    newState = reducer(newState, subAction); // We need to update the state as we iterate the subActions in case any prior actions affect later ones.\n                });\n                inverseSubActions.reverse(); // The inverse actions should be applied in the opposite order\n                return { subActions: inverseSubActions };\n            }\n        }\n    })();\n    if (result) {\n        if (!result.type) {\n            result.type = action.type; // type defaults to the same action type\n        }\n        result.budgetId = state.id;\n        return result;\n    }\n    return null;\n}\n//# sourceMappingURL=prophecy_redux.js.map","/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));","import Immutable from 'immutable';\nimport { ValidationContext } from './util';\n// This file is kept in JavaScript until Immutable 4+ is out, as it seems this\n// is the simplest way to get TypeScript to create fully typed PRecord classes.\n/**\n * PRecord: Immutable.Record with a bit of extra functionality\n *\n * Has a _checkInvariants method which can be used to check invariants\n * whenever a new Record is created.\n *\n * Has detailed validation and error/warning reporting functionality.\n *\n * @param {Object} defaultValues - Definition of the fields that this PRecord will have\n * @returns {*} - A class that can be extended to create a new PRecord subclass\n */\nexport const PRecord = (defaultValues) => class extends Immutable.Record(defaultValues) {\n    constructor(values) {\n        super(values);\n        this._skipChecks = false;\n        this._checkInvariants();\n    }\n    /**\n     * Add some safety checks to the inherited 'set()' method, since it creates\n     * Record objects without using the constructor\n     * @param {string} k - Key to set\n     * @param {*} v - Value to set\n     * @returns {Object} - New instance of this Record subclass with the given changes.\n     */\n    set(k, v) {\n        const result = super.set(k, v); // Todo: Change this 'any' when better record definitions are available\n        if (!this._skipChecks) {\n            result._checkInvariants();\n        }\n        return result;\n    }\n    /**\n     * Add some safety checks to the inherited 'withMutations()' method, since it creates\n     * Record objects without using the constructor\n     *\n     * Here we only do one check after any and all changes are applied. This lets\n     * many changes be made at once, and _checkInvariants only runs once.\n     *\n     * @param {function} fn - Mutator function\n     * @returns {Object} - New instance of this Record subclass with the given changes.\n     */\n    withMutations(fn) {\n        return super.withMutations(newRecord => {\n            newRecord._skipChecks = true;\n            fn(newRecord);\n            newRecord._skipChecks = false;\n            newRecord._checkInvariants();\n        });\n    }\n    /**\n     * Assertions to help enforce correct usage.\n     *\n     * These invariants should include things like type checks, but\n     * should be somewhat tolerant of incomplete or inconsistent\n     * information - that way, PRecord subclasses can still be used\n     * to hold the data for a form as the user fills it out in the UI,\n     * for example.\n     *\n     * More final and contextual validation should take place in\n     * _validate().\n     **/\n    _checkInvariants() { }\n    /**\n     * Validate this record.\n     * @param {ValidationContext} context - the ValidationContext that specifies the\n     * budget that this record will become part of, and provides a place to store the\n     * result.\n     */\n    _validate(context) { } // eslint-disable-line no-unused-vars\n    /**\n     * Validate this PRecord subclass.\n     * Returns an instance of ValidationResult.\n     *\n     * @param {Budget} budget - the Prophecy Budget that this record will be part of.\n     * @returns {ValidationResult}\n     */\n    validateForBudget(budget) {\n        const context = new ValidationContext(budget);\n        this._validate(context);\n        return context.result;\n    }\n    /**\n     * Validate this record and throw an exception if any errors are found.\n     * @param {Budget} budget - the Prophecy Budget that this record will be part of.\n     */\n    assertIsValidForBudget(budget) {\n        const validationResult = this.validateForBudget(budget);\n        if (validationResult.errors.length > 0) {\n            let message = `${this.constructor.name} validation failed:\\n`;\n            validationResult.errors.forEach(err => message += ` * ${err.message} (${err.field})\\n`);\n            throw Error(message);\n        }\n    }\n    /**\n     * Convert from a JSON-friendly native JavaScript object to this PRecord type.\n     * @param {Object} obj - JavaScript serialized representation of an instance of this Record subclass.\n     * @returns {Object} - New instance of this PRecord subclass.\n     */\n    static fromJS(obj) {\n        return new this(obj);\n    }\n    /**\n     * Make toJSON an alias of toJS, so PRecord works with JSON.stringify()\n     *\n     * @returns {Object} - JSON-serialized version of this PRecord subclass.\n     */\n    toJSON() { return this.toJS(); }\n};\n//# sourceMappingURL=precord.js.map","import { __, assertIsNumber } from './util';\nconst _CODE = Symbol(\"code\"); // Internal key used to make 'code' read-only\n/** Class that describes a real-world currency. */\nexport class Currency {\n    /**\n     * Create a currency description.\n     * @param {string} code - the ISO 4217 currency code (three characters)\n     * @param {string} name - the full name of the currency (\"Canadian Dollar\")\n     * @param {string[]} symbols - the symbols for this currency in order from most to least\n     *                           ambiguous (e.g. [\"$\", \"CA$\"])\n     * @param {number} decimals - The maximum number of decimal places that this currency can\n     *                            support (e.g. '2' means $0.01 is the smallest amount.)\n     */\n    constructor(code, name, symbols, decimals = 2) {\n        this.code = code;\n        this.name = name;\n        this.symbols = symbols;\n        this.decimals = decimals;\n    }\n    /**\n     * Round a given amount of this currency to the minimum supported value.\n     * For dollars, this will round to the nearest $0.01\n     * This is not meant for cash transactions, where the rounding rules are different\n     * (https://en.wikipedia.org/wiki/Cash_rounding for more details on that).\n     * This is generally the same as integer rounding because currency amounts are represented\n     * as floating-point numbers multiplied by the minimal number of decimal places the currency\n     * supports - so $3.2105 is stored as '321.05' and rounded to '312' or $3.21 exactly.\n     * @param {number} amount - The amount/value to round.\n     * @returns {number} The rounded amount/value.\n     */\n    roundAmount(amount) { return Math.round(amount); }\n    /**\n     * Custom JSON serialization\n     * @returns {string} - This currency's currency code.\n     */\n    toJSON() { return this.code; }\n}\n/** Global constant map listing supported currencies. */\nexport const SUPPORTED_CURRENCIES = Object.freeze({\n    CAD: new Currency(\"CAD\", __(\"Canadian dollar\"), [\"$\", \"C$\"]),\n    EUR: new Currency(\"EUR\", __(\"Euro\"), [\"€\"]),\n    USD: new Currency(\"USD\", __(\"United States dollar\"), [\"$\", \"US$\"]),\n    JPY: new Currency(\"JPY\", __(\"Japanese yen\"), [\"¥\"], 0),\n    XBT: new Currency(\"XBT\", __(\"Bitcoin\"), [\"\\u20BF\"], 8),\n});\nclass CustomNumberFormat extends Intl.NumberFormat {\n}\nexport class CurrencyFormatter {\n    constructor(defaultCurrency, locales) {\n        this.defaultCurrency = defaultCurrency;\n        this.locales = locales || 'en'; // Define a default locale for consistency\n        // Cached NumberFormat instances, keyed by currency code:\n        this.rawFormatters = {};\n        this.formatters = {};\n    }\n    /**\n     * Given an amount and a Currency, format the amount appropriately as a plain text string.\n     * Note: it would be nice to just use toLocaleString() as follows:\n     *    amount.toLocaleString(\"en-US\", {style: \"currency\", currency: \"CAD\"})\n     * However, that does not support Bitcoin.\n     * @param {number} amount - the amount to format\n     * @param {Currency=} currency - one of the currencies from SUPPORTED_CURRENCIES (optional)\n     * @return {string} The amount, formatted as a string.\n     */\n    formatAmount(amount, currency) {\n        assertIsNumber(amount);\n        if (currency === undefined) {\n            currency = this.defaultCurrency;\n        }\n        let formatter = this.formatters[currency.code];\n        if (formatter === undefined) {\n            formatter = this.formatters[currency.code] = new CustomNumberFormat(this.locales, {\n                style: \"currency\",\n                // The currency argument is supposed to be the ISO 4217 currency code, but\n                // according to the spec (http://www.ecma-international.org/ecma-402/1.0/#sec-6.3)\n                // if we pass an unknown currency code, the 'currency' agument is used as the\n                // symbol. So pass a generic/fake code, and we'll later replace it with the\n                // correct symbol. That way, we get the symbol in the correct place for the\n                // user's locale, but we can also support currencies like Bitcoin that the\n                // Javascript runtime may not natively support.\n                currency: \"XCC\",\n                minimumFractionDigits: Math.min(2, currency.decimals),\n                maximumFractionDigits: currency.decimals,\n            });\n            let symbol = currency.symbols[0];\n            const isDefaultCurrency = (currency.code === this.defaultCurrency.code);\n            const symbolConflicts = (!isDefaultCurrency && symbol == this.defaultCurrency.symbols[0]);\n            if (symbolConflicts && currency.symbols.length > 1) {\n                symbol = currency.symbols[1];\n            }\n            formatter.symbol = symbol;\n        }\n        return formatter.format(amount * Math.pow(10, -currency.decimals)).replace(\"XCC\", formatter.symbol);\n    }\n    /**\n     * Given an amount and a Currency, format the amount as a plain text string with no symbol.\n     * @param {number} amount - the amount to format\n     * @param {Currency=} currency - one of the currencies from SUPPORTED_CURRENCIES (optional)\n     * @return {string} The amount, formatted as a string, but without any currency symbol.\n     */\n    formatAmountRaw(amount, currency) {\n        assertIsNumber(amount);\n        if (currency === undefined) {\n            currency = this.defaultCurrency;\n        }\n        let formatter = this.rawFormatters[currency.code];\n        if (formatter === undefined) {\n            formatter = this.rawFormatters[currency.code] = new Intl.NumberFormat(this.locales, {\n                minimumFractionDigits: Math.min(2, currency.decimals),\n                maximumFractionDigits: currency.decimals,\n            });\n        }\n        return formatter.format(amount * Math.pow(10, -currency.decimals));\n    }\n}\n//# sourceMappingURL=currency.js.map","import { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport { assert, assertIsNumber, Immutable, PRecord } from './util';\n/**\n * Account: Represents a bank account, credit card, or a concept like \"Cash\"\n */\nexport class Account extends PRecord({\n    id: null,\n    name: \"\",\n    initialBalance: 0,\n    /** the ISO 4217 currency code */\n    currencyCode: \"USD\",\n    /* Arbitrary data defined by the user */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Account.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assert(this.currency instanceof Currency); // Check that currencyCode is valid.\n        assertIsNumber(this.initialBalance);\n        assert(this.metadata instanceof Immutable.Map);\n    }\n    /** Get the currency of this account. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * an Account object.\n     *\n     * The result of this function can be passed to the Account constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this account\n     * @returns {Object} - Cleaned values for the fields of this account\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if ('metadata' in values && !(values.metadata instanceof Immutable.Map)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n//# sourceMappingURL=account.js.map","import { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport { default as PDate } from './pdate';\nimport { assert, assertIsNumber, assertPositiveIntegerOrNull, PRecord, Immutable } from './util';\nexport const CategoryRulePeriod = Object.freeze({\n    Day: 2,\n    Week: 3,\n    Month: 4,\n    Year: 5,\n});\nconst allowedRuleValues = Object.keys(CategoryRulePeriod).map(k => CategoryRulePeriod[k]); // = [2, 3, 4, 5]\nexport class CategoryRule extends PRecord({\n    amount: 0.0,\n    /** Start date for this rule, if any. */\n    startDate: null,\n    /** End date for this rule, if any. Must be after startDate but need not be within the budget period. */\n    endDate: null,\n    /** repeatN: If this rule is \"Repeat every 6 weeks\", this will be 6. If period is null, this value is meaningless. */\n    repeatN: 1,\n    /** period: one of the CategoryRulePeriod values or null (for spending that happens on one day or randomly throughout the budget) */\n    period: null,\n}) {\n    constructor(values) {\n        super(CategoryRule.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertIsNumber(this.amount);\n        assertIsNumber(this.repeatN);\n        assert((this.repeatN >>> 0) === this.repeatN, \"repeatN must be a positive integer.\");\n        assert(this.startDate === null || this.startDate instanceof PDate);\n        assert(this.endDate === null || this.endDate instanceof PDate);\n        assert(this.period === null || allowedRuleValues.includes(this.period), \"period must be null or one of the allowed period constants.\");\n    }\n    /**\n     * countOccurrencesBetween: Based on this rule, determine how many times this amount is repeated\n     * between dateBegin and DateEnd.\n     *\n     * For example, if startDate is 2014-01-01, endDate is null, repeatN is 1, and period is Month\n     * (repeat every month from Jan 1, 2014 onward), then counOccurrencesBetween(2016-01-01, 2016-12-31)\n     * will return 12.\n     * @param {PDate} dateBegin - Start date of the period in question (inclusive)\n     * @param {PDate} dateEnd - End date of the period in question (inclusive)\n     * @returns {number}\n     */\n    countOccurrencesBetween(dateBegin, dateEnd) {\n        assert(dateBegin instanceof PDate);\n        assert(dateEnd instanceof PDate);\n        assert(dateEnd >= dateBegin);\n        // Short circuit checks:\n        if (this.startDate && dateEnd < this.startDate) {\n            return 0; // This rule doesn't start until after the date range in question has ended.\n        }\n        if (this.endDate && dateBegin > this.endDate) {\n            return 0; // This rule ended before the date range in question began\n        }\n        if (this.period === null) {\n            // This is not a repeating rule. We only have to consider startDate and endDate, which we did just above.\n            return 1;\n        }\n        // Step 1: Compute the # of occurrences between this.startDate (if set) and the earlier of [this.endDate, dateEnd]\n        const firstDay = this.startDate || dateBegin;\n        const lastDay = (this.endDate && this.endDate < dateEnd) ? this.endDate : dateEnd;\n        const daysDiff = Math.max(0, lastDay - firstDay); // daysDiff should never be negative\n        let result = null;\n        if (this.period === CategoryRulePeriod.Day) {\n            result = Math.floor(daysDiff / this.repeatN) + 1; // Never return a negative value\n        }\n        else if (this.period === CategoryRulePeriod.Week) {\n            result = Math.floor(daysDiff / (this.repeatN * 7)) + 1; // Note: we know repeatN > 0\n        }\n        else if (this.period === CategoryRulePeriod.Month) {\n            const months = (lastDay.year - firstDay.year) * 12\n                + (lastDay.month - firstDay.month)\n                + (lastDay.day >= firstDay.day ? 1 : 0);\n            result = Math.floor((months - 1) / this.repeatN) + 1; // Note that when repeatN = 1, this simplifies to 'result = months'\n        }\n        else if (this.period === CategoryRulePeriod.Year) {\n            result = (lastDay.year - firstDay.year) + (lastDay.month > firstDay.month || (lastDay.month == firstDay.month && lastDay.day >= firstDay.day) ? 1 : 0);\n        }\n        else {\n            throw \"invalid period\";\n        }\n        // Step 2: if dateBegin falls after this.startDate, subtract the number of occurrences\n        // between this.startDate and the day before dateBegin:\n        if (firstDay < dateBegin) {\n            result -= this.countOccurrencesBetween(firstDay, new PDate(dateBegin - 1));\n        }\n        return result;\n    }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a CategoryRule object.\n     *\n     * The result of this function can be passed to the CategoryRule constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this CategoryRule\n     * @returns {Object} - Cleaned values for the fields of this CategoryRule\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if ('startDate' in values && values.startDate !== null && !(values.startDate instanceof PDate)) {\n            values.startDate = new PDate(values.startDate);\n        }\n        if ('endDate' in values && values.endDate !== null && !(values.endDate instanceof PDate)) {\n            values.endDate = new PDate(values.endDate);\n        }\n        return values;\n    }\n}\n/**\n * Category: Represents a category of spending, such as \"Rent\", \"Groceries\", \"Insurance\", etc.\n */\nexport class Category extends PRecord({\n    id: null,\n    name: \"\",\n    /**\n     * Rules: a set of Rule objects defining expected spending in this category such as \"$10 per day\"\n     *\n     * If rules === null, this is an \"Automatic\" category, which means that the total amount expected\n     * to be spent over the budget period should be computed from existing + pending transactions\n     * in this category\n     *\n     * If rules is a List (even an empty list), then it the total amount to be spent during the budget\n     * is to be calculated based on the rules. (Or is $0 if the rules list is empty)\n     */\n    rules: null,\n    /** Notes - custom text editable by the user */\n    notes: \"\",\n    /** the ISO 4217 currency code */\n    currencyCode: \"USD\",\n    /** Which CategoryGroup this category belongs to. */\n    groupId: null,\n    /** Metadata - meaning depends on the user/application */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Category.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertPositiveIntegerOrNull(this.id);\n        assertPositiveIntegerOrNull(this.groupId);\n        if (this.rules !== null) {\n            assert(this.rules instanceof Immutable.List);\n            this.rules.forEach(rule => { assert(rule instanceof CategoryRule); });\n        }\n        assert(this.currency instanceof Currency); // Check that currencyCode is valid.\n        assert(this.metadata instanceof Immutable.Map);\n    }\n    _validate(context) {\n        // Group must be valid\n        if (this.groupId === null || !context.budget.categoryGroups.has(this.groupId)) {\n            context.addError(\"Every Category must be assigned to a valid CategoryGroup.\");\n        }\n        // Ensure that no rules overlap:\n        if (this.rules !== null) {\n            this.rules.forEach((rule, i) => {\n                this.rules.forEach((otherRule, j) => {\n                    if (i !== j) {\n                        const otherStartDate = otherRule.startDate || context.budget.startDate;\n                        const otherEndDate = otherRule.endDate || context.budget.endDate;\n                        if (rule.countOccurrencesBetween(otherStartDate, otherEndDate) !== 0) {\n                            context.addError('rules', \"A budget category's rules must not overlap.\");\n                        }\n                    }\n                });\n            });\n        }\n    }\n    /** Is this an \"automatic\" category (see 'rules' attribute)? */\n    get isAutomatic() { return this.rules === null; }\n    /** Get the currency of this category. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a Category object.\n     *\n     * The result of this function can be passed to the Category constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this category\n     * @returns {Object} - Cleaned values for the fields of this category\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if ('rules' in values && values.rules !== null) {\n            // 'rules' can be any iterable with CategoryRule-typed values or\n            // objects used to initialize CategoryRule\n            values.rules = new Immutable.List(values.rules.map(d => d instanceof CategoryRule ? d : new CategoryRule(d)));\n        }\n        if ('metadata' in values && !(values.metadata instanceof Immutable.Map)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n/**\n * CategoryGroup: Represents an ordered group of categories.\n */\nexport class CategoryGroup extends PRecord({\n    /** Unique integer ID of this category group */\n    id: null,\n    /** The name of this category group */\n    name: \"\",\n}) {\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n    }\n}\n//# sourceMappingURL=category.js.map","import { default as PDate } from './pdate';\nimport { assert, assertIsNumber, assertPositiveIntegerOrNull, PRecord, Immutable, __ } from './util';\nexport const TransactionDetail = Immutable.Record({\n    amount: 0.0,\n    description: \"\",\n    categoryId: null,\n});\nconst M_AMOUNT = Symbol(\"amount\");\n/**\n * Transaction: Represents a change in the balance of an account.\n * Has an amount, who (who the money went to / came from), description,\n * category, and more.\n * e.g. '$20 from Chequing account went to SomeCo Inc. to buy a Widget'\n * Can be split - e.g. 'Sent $17 to Tom - $10 for gas and $7 for coffee'\n */\nexport class Transaction extends PRecord({\n    id: null,\n    date: null,\n    accountId: null,\n    who: \"\",\n    /**\n     * detail: The amount, description, and category of this transaction.\n     * Usually a single-item list except for split transactions.\n     */\n    detail: Immutable.List.of(new TransactionDetail()),\n    userId: null,\n    /**\n     * pending transactions affect the budget if their date is today or past.\n     * If their day is in the future, they don't.\n     * pending transactions never affect the account balances.\n     **/\n    pending: true,\n    /**\n     * isTransfer:\n     * Transfers between accounts (especially of different currencies) require special treatment.\n     *\n     * A typical transfer from e.g. \"Chequing to Savings\" would be represented as two transactions:\n     * One transaction with a negative amount and its accountId set to the chequing account, and\n     * one transaction with a positive amount and its accountId set to the savings account.\n     *\n     * This approach allows Prophecy to model complex transfers, e.g. where the money arrives\n     * in the destination account on a different day than it was sent from the first account\n     * (very common with e.g. credit card payments), or where the two accounts have different\n     * currencies.\n     *\n     * Transfer transactions must not have a budget category assigned, because they are not an expense\n     * nor income.\n     *\n     * In a single-currency budget, the sum of all transfer transactions should be zero.\n     * In a multi-currency budget, the sum of all transfer transactions may not be zero,\n     * even when converted to the same currency, because of losses due to currency conversion.\n     */\n    isTransfer: false,\n    /* Arbitrary data defined by the user */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Transaction.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertPositiveIntegerOrNull(this.id);\n        assert(this.date === null || this.date instanceof PDate);\n        assertPositiveIntegerOrNull(this.accountId);\n        assert(this.detail instanceof Immutable.List);\n        assert(this.detail.size > 0);\n        this.detail.forEach(entry => {\n            assert(entry instanceof TransactionDetail);\n            assertIsNumber(entry.amount);\n            assert(typeof entry.description === 'string');\n            assertPositiveIntegerOrNull(entry.categoryId);\n        });\n        assert(this.metadata instanceof Immutable.Map);\n        if (this.isTransfer) {\n            this.detail.forEach(entry => assert(entry.categoryId === null, \"Do not set a category for transfer transactions.\"));\n        }\n    }\n    _validate(context) {\n        let account = null;\n        if (this.accountId !== null) {\n            // An accountID is set - is it valid?\n            account = context.budget.accounts.get(this.accountId);\n            if (!account) {\n                context.addError(\"Invalid account.\");\n            }\n        }\n        else {\n            // The accountId is null - is that OK?\n            if (this.amount === 0 || this.pending) {\n                // Yes, that's fine. If the amount is $0 or the transaction is pending, the account does not matter.\n            }\n            else {\n                context.addWarning(__(\"Set the account of this transaction.\"));\n            }\n        }\n        this.detail.forEach(detail => {\n            if (detail.categoryId !== null) {\n                const category = context.budget.categories.get(detail.categoryId, null);\n                if (category) {\n                    if (account) {\n                        // Check that the account's currency matches the category's currency\n                        if (account.currencyCode !== category.currencyCode) {\n                            context.addError(\"A Transaction's category's currency must match its account currency.\");\n                        }\n                    }\n                }\n                else {\n                    context.addError(\"Invalid category.\");\n                }\n            }\n            else {\n                // No category is set - is that OK?\n                if (this.amount === 0 || this.pending || this.isTransfer) {\n                    // Yes, that's fine.\n                }\n                else {\n                    context.addWarning(__(\"This transaction is missing a category.\"));\n                }\n            }\n        });\n    }\n    /** Is this a split transaction? */\n    get isSplit() { return this.detail.size > 1; }\n    /** Get the sum of the amounts of the 'detail' entries */\n    get amount() {\n        if (this[M_AMOUNT] === undefined) {\n            this[M_AMOUNT] = this.detail.reduce((acc, detailEntry) => acc + detailEntry.amount, 0);\n        }\n        return this[M_AMOUNT];\n    }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a Transaction object.\n     *\n     * The result of this function can be passed to the Transaction constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this transaction\n     * @returns {Object} - Cleaned values for the fields of this transaction\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if ('date' in values && values.date !== null && !(values.date instanceof PDate)) {\n            values.date = new PDate(values.date);\n        }\n        if ('detail' in values) {\n            // 'detail' can be any iterable with TransactionDetail-typed values or\n            // objects used to initialize TransactionDetail\n            values.detail = new Immutable.List(values.detail.map(d => d instanceof TransactionDetail ? d : new TransactionDetail(d)));\n        }\n        if ('metadata' in values && !(values.metadata instanceof Immutable.Map)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n//# sourceMappingURL=transaction.js.map","const prefix = 'PRPHCY_';\nexport const PROPHECY_ACTION_PREFIX = prefix;\n////////////////////////////////////////////////////////////////////////////////\n// Miscellaneous actions\n/**\n * NOOP:\n * Action that does nothing.\n *\n * This is generated as the inverse of an action that had no effect.\n */\nexport const NOOP = prefix + 'NOOP';\n////////////////////////////////////////////////////////////////////////////////\n// Budget settings\n/**\n * SET_CURRENCY:\n * Action to change the currency of this budget.\n *\n * Arguments:\n *  - currencyCode (string): New ISO 4217 currency code (e.g. 'USD')\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_CURRENCY = prefix + 'SET_CURRENCY';\n/**\n * SET_DATE:\n * Action to change the start and/or end date of this budget.\n *\n * Arguments:\n *  - startDate (int): PDate value for the start date, cast to integer (optional)\n *  - endDate (int): PDate value for the end date, cast to integer (optional)\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_DATE = prefix + 'SET_DATE';\n/**\n * SET_NAME:\n * Action to change the name of this budget.\n *\n * Arguments:\n *  - name (string): New name of the budget\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_NAME = prefix + 'SET_NAME';\n////////////////////////////////////////////////////////////////////////////////\n// Accounts\n/**\n * DELETE_ACCOUNT:\n * Action to delete an account. Will set the 'accountId' of any linked transactions to null.\n *\n * Arguments:\n *  - id (int): The ID of the account to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_ACCOUNT = prefix + 'DELETE_ACCT';\n/**\n * UPDATE_ACCOUNT:\n * Action to create/modify an account\n *\n * Arguments:\n *  - id (int): The ID of the account to create/modify\n *  - data (object): fields to set on the new/modifed account (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the account in the list (optional)\n *  - linkNullTransactions (Array): Array of transaction IDs whose accountId will be\n *    set to this account's ID if (1) that transaction's accountId is null, and (2)\n *    this is an account insertion (not update). This parameter mostly exists so\n *    that DELETE_ACCOUNT can be inverted to a single action. (optional)\n */\nexport const UPDATE_ACCOUNT = prefix + 'UPDATE_ACCT';\n////////////////////////////////////////////////////////////////////////////////\n// Categories\n/**\n * DELETE_CATEGORY:\n * Action to delete a category.\n *\n * Arguments:\n *  - id (int): The ID of the category to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_CATEGORY = prefix + 'DELETE_CAT';\n/**\n * UPDATE_CATEGORY:\n * Action to create/modify a category\n *\n * Arguments:\n *  - id (int): The ID of the category to create/modify\n *  - data (object): fields to set on the new/modifed category (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the category within the group (optional)\n *  - linkTransactionDetails (Array): Array of tuples of [transaction ID, details index]\n *    that identifies TransactionDetails entries whose categoryId will be\n *    set to this category's ID if (1) that transaction's categoryId is null, and (2)\n *    this is an category insertion (not update). This parameter mostly exists so\n *    that DELETE_CATEGORY can be inverted to a single action. (optional)\n */\nexport const UPDATE_CATEGORY = prefix + 'UPDATE_CAT';\n////////////////////////////////////////////////////////////////////////////////\n// Category Groups\n/**\n * DELETE_CATEGORY_GROUP:\n * Action to delete a category group. It must not contain any categories.\n *\n * Arguments:\n *  - id (int): The ID of the category group to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_CATEGORY_GROUP = prefix + 'DELETE_CG';\n/**\n * UPDATE_CATEGORY_GROUP:\n * Action to create/modify a category group\n *\n * Arguments:\n *  - id (int): The ID of the category group to create/modify\n *  - data (object): fields to set on the new/modifed category group (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the category group in the list (optional)\n */\nexport const UPDATE_CATEGORY_GROUP = prefix + 'UPDATE_CG';\n////////////////////////////////////////////////////////////////////////////////\n// Transactions\n/**\n * DELETE_TRANSACTION:\n * Action to delete a transaction\n *\n * Arguments:\n *  - id (int): The ID of the transaction to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_TRANSACTION = prefix + 'DELETE_TXN';\n/**\n * UPDATE_TRANSACTION:\n * Action to create/modify a transaction\n *\n * Arguments:\n *  - id (int): The ID of the transaction to create/modify\n *  - data (object): fields to set on the new/modifed transactions\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const UPDATE_TRANSACTION = prefix + 'UPDATE_TXN';\n/**\n * UPDATE_MULTIPLE_TRANSACTIONS\n * Action to atomically update multiple transactions.\n *\n * This is the only \"compound action\" that itself contains\n * multiple other actions. \"Compound actions\" are kept to a minimum\n * in order to make it easier for other reducers to watch for\n * changes using actions. (e.g. if there were a generic MULTIPLE_ACTIONS\n * action, a reducer that wanted to watch for changes to the budget name\n * would have to watch for both SET_NAME and MULTIPLE_ACTIONS containing\n * SET_NAME).\n *\n * Arguments:\n *  - subActions (array): array of UPDATE_TRANSACTION and DELETE_TRANSACTION\n *       actions to carry out as part of this action.\n *  - budgetId (string): ID of the budget (optional)\n **/\nexport const UPDATE_MULTIPLE_TRANSACTIONS = prefix + 'UPDATE_MANY_TXN';\n//# sourceMappingURL=actions.js.map","/**\n * Prophecy Engine JavaScript API\n *\n * All of these classes should be namespaced within a 'Prophecy' global.\n */\nexport { PRecord, Immutable } from './util';\nexport { Account } from './account';\nexport { Budget } from './budget';\nexport { Category, CategoryGroup, CategoryRule, CategoryRulePeriod } from './category';\nexport { Currency, CurrencyFormatter, SUPPORTED_CURRENCIES } from './currency';\nexport { default as PDate } from './pdate';\nexport { Transaction, TransactionDetail } from './transaction';\nexport { reducer, inverter } from './redux/prophecy_redux';\nimport * as _actions from './redux/actions';\nexport const actions = _actions;\nimport { majorVersion, minorVersion } from './budget';\nexport const version = { major: majorVersion, minor: minorVersion };\n//# sourceMappingURL=prophecy.js.map"],"names":["assert","cond","msg","Error","assertIsNumber","v","Number","isNaN","assertPositiveIntegerOrNull","parseInt","toString","__","str","triplet_to_days_value","year","month","day","MONTHS","JAN","DEC","PDate","daysInMonth","nyear","days_value","isLeapYear","MONTH_SUMS_LEAP_YEAR","MONTH_SUMS_NORMAL_YEAR","_createOrderedCategoryMap","categories","categoryGroups","categoryGroupIdsOrdered","keySeq","Immutable","OrderedMap","Seq","Indexed","sortBy","category","keyOf","groupId","map","c","id","reducer","state","Budget","action","type","startsWith","ACTION.PROPHECY_ACTION_PREFIX","undefined","budgetId","ACTION.SET_CURRENCY","set","currencyCode","ACTION.SET_DATE","changes","dateKey","merge","ACTION.SET_NAME","name","ACTION.DELETE_ACCOUNT","deleteAccount","ACTION.UPDATE_ACCOUNT","existingAccount","accounts","get","acct","Account","newState","data","updateAccount","linkNullTransactions","nullTransactions","transactions","filter","t","accountId","forEach","txnId","txn","updateTransaction","index","positionAccount","ACTION.DELETE_CATEGORY","deleteCategory","ACTION.UPDATE_CATEGORY","existingCategory","Category","updateCategory","cleanArgs","positionCategory","linkTransactionDetails","detailsIndex","updateIn","categoryId","ACTION.DELETE_CATEGORY_GROUP","deleteCategoryGroup","ACTION.UPDATE_CATEGORY_GROUP","existingGroup","group","CategoryGroup","updateCategoryGroup","positionCategoryGroup","ACTION.DELETE_TRANSACTION","deleteTransaction","ACTION.UPDATE_TRANSACTION","Transaction","ACTION.UPDATE_MULTIPLE_TRANSACTIONS","subActions","subAction","inverter","result","ACTION.NOOP","dateType","toJS","valueSeq","acctJS","inverse","key","oldIndex","detail","idx","push","cat","categoryJS","groupJS","txnJS","inverseSubActions","inverseSubAction","reverse","global","factory","module","this","createClass","ctor","superClass","prototype","Object","create","constructor","Iterable","value","isIterable","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","Array","ii","ensureSize","iter","size","__iterate","returnTrue","wrapIndex","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","next","iteratorValue","k","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","array","_array","ObjectSeq","object","keys","_object","_keys","IterableSeq","_iterable","IteratorSeq","iterator","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","isArray","TypeError","maybeIndexedSeqFromValue","seqIterate","fn","useKeys","cache","_cache","maxIndex","entry","__iterateUncached","seqIterator","__iteratorUncached","fromJS","json","converter","fromJSWith","fromJSDefault","parentJSON","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","cacheResult","_","allEqual","bSize","has","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","invariant","condition","error","Range","start","step","abs","_start","_end","_step","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","isExtensible","defineProperty","enumerable","configurable","writable","apply","arguments","nodeType","node","uniqueID","documentElement","assertNotInfinite","Map","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","prev","__prev","makeMap","root","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","shift","update","isLeafNode","mergeIntoNode","newNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","collection","x","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","val","canEdit","newArray","spliceIn","newLen","after","spliceOut","pop","List","empty","emptyList","isList","makeList","VNode","toArray","list","setSize","i","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","from","left","to","right","DONE","values","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","slice","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","context","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","groups","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","stack","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","getPrototypeOf","recordName","names","setProp","bind","Set","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","head","StackPrototype","_head","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","keyMapper","entryMapper","not","neg","quoteString","JSON","stringify","String","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","murmurHashOfSize","hashMerge","imul","SLICE$0","Keyed","Symbol","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","hasOwnProperty","searchValue","indexOf","lastIndexOf","other","possibleIndex","floor","offsetValue","d","e","WeakMap","keyValues","deleteIn","updatedValue","mergeWith","mergeIn","m","mergeDeepIn","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","splice","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","indexedIterable","defaultVal","_empty","fromKeys","union","intersect","originalSet","subtract","peek","pushAll","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","isEmpty","countBy","entriesSequence","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","last","lastKeyOf","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","PRecord","[object Object]","super","_skipChecks","_checkInvariants","newRecord","budget","ValidationContext","_validate","validationResult","validateForBudget","errors","message","err","field","ValidationResult","__validationMessages","warnings","fieldName","overallIssues","getFieldIssues","allIssues","freeze","Warning","_pushMessage","Currency","code","symbols","decimals","round","SUPPORTED_CURRENCIES","CAD","EUR","USD","JPY","XBT","CustomNumberFormat","Intl","NumberFormat","CurrencyFormatter","defaultCurrency","locales","rawFormatters","formatters","currency","formatter","style","minimumFractionDigits","maximumFractionDigits","symbol","isDefaultCurrency","symbolConflicts","format","pow","replace","initialBalance","metadata","assign","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DAYS","SUN","MON","TUE","WED","THU","FRI","SAT","NORMAL_YEAR","LEAP_YEAR","DAYS_PER_MONTH","substr","charAt","strings","fromString","raw","js_date","Date","getFullYear","getMonth","getDate","daysSinceMillenium","centuries","A","dayOfWeek","dayOfYear","CategoryRulePeriod","Day","Week","Month","Year","allowedRuleValues","CategoryRule","startDate","endDate","repeatN","period","dateBegin","dateEnd","firstDay","lastDay","daysDiff","months","countOccurrencesBetween","rules","notes","rule","addError","otherRule","j","otherStartDate","otherEndDate","isAutomatic","TransactionDetail","description","M_AMOUNT","date","who","userId","pending","isTransfer","account","addWarning","isSplit","acc","detailEntry","_accounts","_categories","_categoryGroups","_transactions","_accountBalances","_transactionAccountBalances","majorVersion","minorVersion","today","cg","transactionSorter","assertIsValidForBudget","transaction","delete","origCategory","newIndex","groupCategories","newIndexOverall","newCategories","categoryGroup","newCategoryGroups","g","newAccount","newAccounts","newTransaction","sortRequired","oldTransaction","newTransactions","accountBalances","transactionBalances","balance","_computeBalances","transactionId","precedingTransactions","lastAccountTransaction","categoryBalancesOnDate","transactionCategoryBalances","budgetAmount","version","major","minor","dateField","typedLists","prefix","PROPHECY_ACTION_PREFIX","NOOP","SET_CURRENCY","SET_DATE","SET_NAME","DELETE_ACCOUNT","UPDATE_ACCOUNT","DELETE_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY_GROUP","UPDATE_CATEGORY_GROUP","DELETE_TRANSACTION","UPDATE_TRANSACTION","UPDATE_MULTIPLE_TRANSACTIONS","actions"],"mappings":"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"}