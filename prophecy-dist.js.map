{"version":3,"file":"prophecy-dist.js","sources":["dist/util.js","dist/pdate.js","dist/budget.js","dist/redux/prophecy_redux.js","node_modules/immutable/dist/immutable.js","dist/precord.js","dist/currency.js","dist/account.js","dist/category.js","dist/transaction.js","dist/redux/actions.js","dist/prophecy.js"],"sourcesContent":["/**\n * Throw an error if the given condition is ever false.\n *\n * @param {boolean} cond - Condition that is expected to be true\n * @param {string} [msg] - Message to display if this assertion fails\n */\nexport function assert(cond, msg) {\n    if (!cond) {\n        throw Error(msg || \"Assertion Failed\");\n    }\n}\n/**\n * Throw an error if the given value is not a number\n *\n * @param {*} v - Value that is expected to be a Number\n */\nexport function assertIsNumber(v) {\n    assert(typeof v === \"number\" && !Number.isNaN(v), \"Expected a number.\");\n}\n/**\n * Throw an error if the given value is not a positive integer, or null\n *\n * @param {*} v - Value that is expected to be a positive integer or null\n */\nexport function assertPositiveIntegerOrNull(v) {\n    assert(v === null || (typeof v === \"number\" && parseInt(v.toString()) === v && v > 0), \"Expected a positive integer, or null.\");\n}\n/**\n * ValidationResult: Used with PRecord to provide detailed, flexible,\n * contextual validation of model data.\n */\nexport class ValidationResult {\n    constructor() {\n        /**@internal */\n        this.__validationMessages = [];\n    }\n    get warnings() {\n        return this.__validationMessages.filter(msg => msg.type === \"warning\" /* Warning */);\n    }\n    get errors() {\n        return this.__validationMessages.filter(msg => msg.type === \"error\" /* Error */);\n    }\n    getFieldIssues(fieldName) {\n        return this.__validationMessages.filter(msg => msg.field === fieldName);\n    }\n    /**\n     * Get an array of all validation issues that are not specific to any one field.\n     */\n    get overallIssues() {\n        return this.getFieldIssues(null);\n    }\n    get allIssues() {\n        return Object.freeze(this.__validationMessages);\n    }\n}\nValidationResult.Warning = \"warning\" /* Warning */;\nValidationResult.Error = \"error\" /* Error */;\n/**\n * Context during which PRecord validation happens.\n * This contains a reference to the budget that the PRecord in question\n * will become part of.\n */\nexport class ValidationContext {\n    constructor(budget) {\n        this.validationResult = new ValidationResult();\n        this.budget = budget;\n    }\n    _pushMessage(type, message, field) {\n        this.validationResult.__validationMessages.push(Object.freeze({ field, type, message }));\n    }\n    /**\n     * Add a warning to the validation result.\n     *\n     * @param {string|null} field - The field that this warning is about,\n     * or null for warnings that involve multiple fields.\n     * @param {*} message - A string describing the validation issue.\n     */\n    addWarning(field, message) {\n        this._pushMessage(\"warning\" /* Warning */, message, field);\n    }\n    /**\n     * Add an error to the validation result.\n     *\n     * @param {string|null} field - The field that this error is about,\n     * or null for warnings that involve multiple fields.\n     * @param {*} message - A string describing the validation issue.\n     */\n    addError(field, message) {\n        this._pushMessage(\"error\" /* Error */, message, field);\n    }\n    get result() { return Object.freeze(this.validationResult); }\n}\nexport { PRecord } from './precord';\n// i18n placeholders:\n/**\n * Replace the given English text with a localized version.\n * This is currently just a placeholder.\n *\n * @param {string} str - The text to localize\n * @returns {string} The localized text.\n */\nexport function __(str) { return str; }\n//# sourceMappingURL=util.js.map","import { assert } from './util';\nconst MONTHS = Object.freeze({\n    JAN: 0,\n    FEB: 1,\n    MAR: 2,\n    APR: 3,\n    MAY: 4,\n    JUN: 5,\n    JUL: 6,\n    AUG: 7,\n    SEP: 8,\n    OCT: 9,\n    NOV: 10,\n    DEC: 11,\n});\nconst DAYS = Object.freeze({\n    SUN: 0,\n    MON: 1,\n    TUE: 2,\n    WED: 3,\n    THU: 4,\n    FRI: 5,\n    SAT: 6,\n});\nconst MONTH_SUMS_NORMAL_YEAR = Object.freeze([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);\nconst MONTH_SUMS_LEAP_YEAR = Object.freeze([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);\n// The following maps convert from day of the year (e.g. 0 for Jan. 1) to month ('A' = Jan, 'B' = Feb, ...)\n// These maps are precomputed to make the date class highly efficient.\nconst NORMAL_YEAR = (\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\" +\n    \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\" +\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\" +\n    \"JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\");\nconst LEAP_YEAR = (\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\" +\n    \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\" +\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\" +\n    \"JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\");\nconst DAYS_PER_MONTH = Object.freeze([\n    /* Jan */ 31, undefined, /* Mar */ 31, /* Apr */ 30, /* May */ 31, /* Jun */ 30,\n    /* Jul */ 31, /* Aug */ 31, /* Sep */ 30, /* Oct */ 31, /* Nov */ 30, /* Dec */ 31\n]);\n/**\n * Internal helper method.\n * Given a year, month, and day triplet, return\n * the number of days between January 1, 2000 and the given date.\n *\n * @param {number} year - Year (e.g. 2012)\n * @param {number} month - Month (0 for January, 11 for December)\n * @param {number} day - Day (1-31)\n * @returns {number}\n */\nfunction triplet_to_days_value(year, month, day) {\n    assert(year >= 2000 && year <= 3000, \"Year is invalid - must be between 2000 and 3000.\");\n    assert(month >= MONTHS.JAN && month <= MONTHS.DEC, \"Month is invalid.\");\n    assert(day > 0 && day <= PDate.daysInMonth(year, month));\n    const nyear = (year - 2000 | 0);\n    let days_value = (nyear * 365) + ((nyear + 3) / 4 | 0) - ((nyear + 99) / 100 | 0) + ((nyear + 399) / 400 | 0);\n    // Compute the number of days between the first day of the year and the first day of the month:\n    days_value += PDate.isLeapYear(year) ? MONTH_SUMS_LEAP_YEAR[month] : MONTH_SUMS_NORMAL_YEAR[month];\n    days_value += day - 1;\n    return days_value;\n}\nexport default class PDate {\n    /**\n     * Construct a Date from a triple of year, month (0-11), day (1-31)\n     * @param {number} year - Year (e.g. 2012)\n     * @param {number} month - Month (0 for January, 11 for December)\n     * @param {number} day - Day (1-31)\n     * @returns {PDate}\n     */\n    static create(year, month, day) {\n        return new PDate(triplet_to_days_value(year, month, day));\n    }\n    /**\n     * Construct a Date from an ISO 8601 date string \"YYYY-MM-DD\" or \"YYYYMMDD\"\n     * @param {string} str - An ISO 8601 date string\n     * @returns {PDate}\n     */\n    static fromString(str) {\n        const year = parseInt(str.substr(0, 4));\n        let month = NaN;\n        let day = NaN;\n        if (str.length === 10 && str.charAt(4) === '-' && str.charAt(7) === '-') {\n            // YYYY-MM-DD format, presumably:\n            month = parseInt(str.substr(5, 2));\n            day = parseInt(str.substr(8, 2));\n        }\n        else if (str.length === 8 && String(parseInt(str)) === str) {\n            month = parseInt(str.substr(4, 2));\n            day = parseInt(str.substr(6, 2));\n        }\n        if (isNaN(year) || isNaN(month) || isNaN(day)) {\n            throw \"Date string not in YYYY-MM-DD or YYYYMMDD format\";\n        }\n        return new PDate(triplet_to_days_value(year, month - 1, day));\n    }\n    /**\n     * Parse a template string literal, e.g. const D = PDate.parseTemplateLiteral; const date1 = D`2016-01-01`;\n     * @param {Object} strings Well-formed template call site object\n     * @param {...*} keys - substitution values\n     * @returns {PDate}\n     */\n    static parseTemplateLiteral(strings, ...keys) {\n        return PDate.fromString(String.raw(strings, ...keys));\n    }\n    /**\n     * Get the current date, according to the system's local time\n     * @returns {PDate}\n     */\n    static today() {\n        const js_date = new Date();\n        return new PDate(triplet_to_days_value(js_date.getFullYear(), js_date.getMonth(), js_date.getDate()));\n    }\n    /**\n     * Construct a PDate instance using its internal int representation (# of days since the millenium)\n     * @param {Number} daysSinceMillenium - number representing the date\n     */\n    constructor(daysSinceMillenium) {\n        assert(daysSinceMillenium >= 0);\n        assert(daysSinceMillenium <= 365615); // Corresponds to Dec. 31, 3000\n        this.value = daysSinceMillenium;\n        // Safer, but notably slower:\n        //Object.defineProperty(this, \"value\", {value: daysSinceMillenium, writable: false});\n    }\n    /**\n     * Custom JSON serialization\n     * @returns {number}\n     */\n    toJSON() { return this.value; }\n    /**\n     * Custom serialization when used with Immutable.js\n     * @returns {number}\n     */\n    toJS() { return this.value; }\n    /**\n     * Get the year (2000-3000)\n     * @returns {number}\n     */\n    get year() {\n        // This formula is valid for any year 2000 or later\n        const centuries = this.value / 36525 | 0;\n        return (2000 + (this.value + centuries - (centuries / 4 | 0)) / 365.25) | 0;\n    }\n    /**\n     * Get the month (0-11)\n     * @returns {number}\n     */\n    get month() {\n        const nyear = this.year - 2000;\n        // Compute the number of days between January 1, 2000 and the first day of the given year:\n        const d = (nyear * 365) + ((nyear + 3) / 4 | 0) - ((nyear + 99) / 100 | 0) + ((nyear + 399) / 400 | 0);\n        const A = 'A'.charCodeAt(0);\n        if (PDate.isLeapYear(nyear))\n            return LEAP_YEAR.charCodeAt(this.value - d) - A;\n        else\n            return NORMAL_YEAR.charCodeAt(this.value - d) - A;\n    }\n    /**\n     * Get the day of the month (1-31)\n     * @returns {number}\n     */\n    get day() {\n        return this.value - triplet_to_days_value(this.year, this.month, 1) + 1;\n    }\n    /** Get the day of the week (0 = Sunday, 6 = Saturday) */\n    get dayOfWeek() { return (this.value + 6) % 7; }\n    /** Get the day of the year (0-365) */\n    get dayOfYear() { return this.value - triplet_to_days_value(this.year, 0, 1); }\n    /**\n     * Get the date as an ISO 8601 string (\"2015-01-25\")\n     * @returns {string}\n     */\n    toString() {\n        const year = this.year, month = this.month + 1, day = this.day;\n        return year.toString() + (month < 10 ? \"-0\" : \"-\") + month + (day < 10 ? \"-0\" : \"-\") + day;\n    }\n    /**\n     * Get the primitive value (enables correct sorting and comparison)\n     * Except note that equality checking won't work unless you coerce values\n     * e.g. PDate.create(2010, 1, 1) == PDate.create(2010, 1, 1) : false\n     * e.g. PDate.create(2010, 1, 1) == +PDate.create(2010, 1, 1) : true\n     * @returns {number}\n     */\n    valueOf() { return this.value; }\n    /**\n     * Helper method: how many days are in the specified month of the specified year?\n     * @param {number} year - Year\n     * @param {number} month - Month (0-11)\n     * @returns {number}\n     */\n    static daysInMonth(year, month) {\n        assert(year >= 2000 && year <= 3000);\n        assert(month >= MONTHS.JAN && month <= MONTHS.DEC, \"Month is invalid.\");\n        if (month === MONTHS.FEB) {\n            return PDate.isLeapYear(year) ? 29 : 28;\n        }\n        return DAYS_PER_MONTH[month];\n    }\n    /**\n     * Is 'year' a leap year? Can be an absolute year (e.g. 2016) or relative to the millenium (e.g. 16).\n     * @param {number} year - The year in question\n     * @returns {boolean}\n     */\n    static isLeapYear(year) { year = year | 0; return (year % 4 == 0) && (year % 100 != 0 || year % 400 == 0); }\n    // Constants\n    static get DAYS() { return DAYS; }\n    static get MONTHS() { return MONTHS; }\n}\n//# sourceMappingURL=pdate.js.map","import * as Immutable from 'immutable';\nimport { Account } from './account';\nimport { Category, CategoryGroup } from './category';\nimport { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport PDate from './pdate';\nimport { Transaction } from './transaction';\nimport { __, assert, assertIsNumber, PRecord } from './util';\n// Private constants used to create private fields on a Record subclass:\n// Unfortunately we cannot use Symbols, since Immutable.Record keys must be strings.\n// The value of these strings doesn't matter, as long as they're unique.\n/** Key for private field containing OrderedMap of accounts */\nconst _accounts = \"^a\";\n/** Key for private field containing Map of categories */\nconst _categories = \"^c\";\n/** Key for private field containing OrderedMap of category groups */\nconst _categoryGroups = \"^g\";\n/** Key for private field containing OrderedMap of transactions */\nconst _transactions = \"^n\";\n// Prophecy/Budget class version\n// The major version should be changed when backwards compatibility is broken.\n// The minor version should be changed when new features are added in a backwards-compatible way.\nexport const majorVersion = 0;\nexport const minorVersion = 1;\nexport const AccountMap = (...args) => Immutable.OrderedMap(...args);\nexport const CategoryMap = (...args) => Immutable.OrderedMap(...args);\nexport const CategoryGroupMap = (...args) => Immutable.OrderedMap(...args);\nexport const TransactionMap = (...args) => Immutable.OrderedMap(...args);\n/**\n * Class that describes a budget.\n *\n * A budget is a set of spending plans and actual transactions\n * for a specific a period of time.\n */\nexport class Budget extends PRecord({\n    id: null,\n    name: __(\"New Budget\"),\n    /** Start date of the budget. Always of type PDate, and always less than or equal to end date. */\n    startDate: new PDate(0),\n    /** End date of the budget. Always of type PDate, and always greater than or equal to start date. */\n    endDate: new PDate(0),\n    /**\n     * ISO 4217 currency code for the budget. Individual accounts may use different currencies.\n     * This setting does not directly have any effect as far as Prophecy is concerned, but it\n     * is useful to apps working with the budget.\n     *\n     * It's best to read this value as a Currency object using the 'currency' getter.\n     */\n    currencyCode: 'USD',\n    // Private fields below. Once typescript supports using computed property names as fields,\n    // switch back to that.\n    /** Ordered map of Accounts, in a custom order specified by the user. See accounts() getter. */\n    '^a': AccountMap(),\n    /** Map of Categories, keyed by ID, ordered by category group order, and in a custom order within each group. See categories() getter. */\n    '^c': CategoryMap(),\n    /** Ordered map of CategoryGroups, in a custom order specified by the user. See categoryGroups() getter. */\n    '^g': CategoryGroupMap(),\n    /** _transactions: Stores transactions. See transactions() getter. */\n    '^n': TransactionMap(),\n}) {\n    constructor(origValues) {\n        const values = Object.assign({}, origValues || {}); // Don't modify the argument itself\n        // Budget must always have a valid date range:\n        if (values.startDate === undefined || values.endDate === undefined) {\n            const year = PDate.today().year;\n            values.startDate = values.startDate || PDate.create(year, 0, 1);\n            values.endDate = values.endDate || PDate.create(year, 11, 31);\n        }\n        // Allow passing 'accounts' into the constructor. It can be any iterable with Account-typed values\n        if (values.accounts !== undefined) {\n            // Don't trust the keys (if any) of values.accounts; create new keys:\n            values[_accounts] = AccountMap(Immutable.Seq.Indexed(values.accounts).map((a) => [a.id, a]));\n            delete values.accounts;\n        }\n        // Allow passing 'categoryGroups' into the constructor. It can be any iterable with CategoryGroup-typed values.\n        if (values.categoryGroups !== undefined) {\n            values[_categoryGroups] = CategoryGroupMap(Immutable.Seq.Indexed(values.categoryGroups).map((cg) => [cg.id, cg]));\n            delete values.categoryGroups;\n        }\n        // Allow passing 'categories' into the constructor. It can be any iterable with Category-typed values\n        if (values.categories !== undefined) {\n            const categoriesIterable = Immutable.Seq.Indexed(values.categories);\n            const categoryGroups = values[_categoryGroups];\n            // Don't trust the keys (if any) of values.categories; create new keys.\n            // Also ensure that all categories are sorted by group in the same order as CategoryGroups is sorted.\n            if (categoryGroups === undefined) {\n                throw new Error('cannot have categories without category groups.');\n            }\n            values[_categories] = _createOrderedCategoryMap(categoriesIterable, categoryGroups);\n            delete values.categories;\n        }\n        // Allow passing 'transactions' into the constructor. It can be any iterable with Transaction-typed values\n        if (values.transactions !== undefined) {\n            assert(values[_transactions] === undefined); // We expect 'transactions' or _transactions, but not both.\n            // Don't trust the keys (if any) or the ordering of values.transactions; create new keys and force a sort:\n            values[_transactions] = TransactionMap(Immutable.Seq.Indexed(values.transactions).sortBy(Budget.transactionSorter).map((t) => [t.id, t]));\n            delete values.transactions;\n        }\n        super(values);\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assert(this.currency instanceof Currency, \"currencyCode must be valid\");\n        assert(this.startDate instanceof PDate);\n        assert(this.endDate instanceof PDate);\n        assert(+this.endDate >= +this.startDate);\n        assert(Immutable.OrderedMap.isOrderedMap(this.accounts));\n        this.accounts.forEach(account => assert(account instanceof Account));\n        assert(Immutable.OrderedMap.isOrderedMap(this.categoryGroups));\n        this.categoryGroups.forEach(category => assert(category instanceof CategoryGroup));\n        assert(Immutable.OrderedMap.isOrderedMap(this.categories));\n        this.categories.forEach(category => {\n            if (!(category instanceof Category)) {\n                throw new Error(\"categories must all be of type Category\");\n            }\n            category.assertIsValidForBudget(this);\n        });\n        assert(Immutable.OrderedMap.isOrderedMap(this.transactions));\n        this.transactions.forEach(transaction => {\n            if (!(transaction instanceof Transaction)) {\n                throw new Error(\"Transactions must be of type Transaction\");\n            }\n            transaction.assertIsValidForBudget(this);\n        });\n    }\n    /** Get the currency of this budget. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /** Ordered list of Accounts, in custom order */\n    get accounts() { return this[_accounts]; }\n    /** Map of categories, keyed by ID. Not in order. */\n    get categories() { return this[_categories]; }\n    /** Ordered list of CategoryGroups, in custom order */\n    get categoryGroups() { return this[_categoryGroups]; }\n    /**\n     * Delete a category.\n     *\n     * Any transactions linked to this category will have their category set to null.\n     *\n     * @param {number} id - ID of the category to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteCategory(id) {\n        // Change all Transaction references to that category to null:\n        const transactions = this[_transactions].map((t) => t.set('detail', t.detail.map((d) => d.update('categoryId', categoryId => categoryId === id ? null : categoryId)).toList()));\n        return this.merge({\n            [_categories]: this[_categories].delete(id),\n            [_transactions]: transactions,\n        });\n    }\n    /**\n     * Insert or update a category\n     *\n     * If category.id is in the list of category groups, this will be an update.\n     * If category.id is not in the list of category groups, this will add a new group.\n     *\n     * This method cannot be used to change the order of categories (use positionCategory).\n     *\n     * @param {Category} category - The category to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateCategory(category) {\n        assert(category instanceof Category);\n        if (typeof category.id !== 'number') {\n            throw new Error(\"Invalid category ID.\");\n        }\n        const origCategory = this.categories.get(category.id);\n        if (origCategory === undefined || origCategory.groupId !== category.groupId) {\n            // The group ID has changed. We need to carefully ensure that this.categories\n            // stays sorted, first by group order, then in custom order, with the modified\n            // category at the end of its new category group\n            let categories = this.categories.delete(category.id).set(category.id, category); // Move/insert category to the end\n            categories = _createOrderedCategoryMap(categories.valueSeq(), this.categoryGroups);\n            return this.set(_categories, categories);\n        }\n        return this.set(_categories, this[_categories].set(category.id, category));\n    }\n    /**\n     * Change a category's position within its category group\n     *\n     * @param {number} categoryId ID of the category to move\n     * @param {number} newIndex New position within its category group (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionCategory(categoryId, newIndex) {\n        assertIsNumber(categoryId);\n        assertIsNumber(newIndex);\n        const category = this.categories.get(categoryId);\n        assert(category instanceof Category);\n        const groupCategories = this.categories.filter((cat) => cat.groupId === category.groupId);\n        assert(newIndex >= 0 && newIndex <= groupCategories.size);\n        // this.categories is ordered first by category group order, then by custom order within each group.\n        // Our goal is to move the category around within the group, but keep the overall map still sorted\n        // by group.\n        const currentIndexOverall = this.categories.keySeq().keyOf(categoryId);\n        const currentIndexWithinGroup = groupCategories.keySeq().keyOf(categoryId);\n        const newIndexOverall = currentIndexOverall + (newIndex - currentIndexWithinGroup);\n        const newCategories = CategoryMap(this.categories.toList().filter((cat) => cat.id !== categoryId).toList().insert(newIndexOverall, category).map((a) => [a.id, a]));\n        return this.set(_categories, newCategories);\n    }\n    /**\n     * Delete a category group. It must be empty!\n     * @param {number} id - ID of the category group to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteCategoryGroup(id) {\n        assert(this.categories.filter((cat) => cat.groupId === id).isEmpty(), \"Only empty category groups can be deleted.\");\n        return this.set(_categoryGroups, this[_categoryGroups].delete(id));\n    }\n    /**\n     * Insert or update a category group.\n     *\n     * If categoryGroup.id is in the list of category groups, this will be an update.\n     * If categoryGroup.id is not in the list of category groups, this will add a new group.\n     *\n     * This method cannot be used to change the order of category groups (use positionCategoryGroup).\n     *\n     * @param {CategoryGroup} categoryGroup - The category group to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateCategoryGroup(categoryGroup) {\n        assert(categoryGroup instanceof CategoryGroup);\n        if (typeof categoryGroup.id !== 'number') {\n            throw new Error(\"Invalid Category Group ID\");\n        }\n        return this.set(_categoryGroups, this[_categoryGroups].set(categoryGroup.id, categoryGroup));\n    }\n    /**\n     * Change a category group's position in the list of category groups\n     *\n     * @param {number} groupId ID of the category group to move\n     * @param {number} newIndex New position in the list of category groups (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionCategoryGroup(groupId, newIndex) {\n        assertIsNumber(groupId);\n        assertIsNumber(newIndex);\n        const categoryGroup = this.categoryGroups.get(groupId);\n        assert(categoryGroup instanceof CategoryGroup);\n        const newCategoryGroups = CategoryGroupMap(this.categoryGroups.toList().filter((g) => g.id !== groupId).toList().insert(newIndex, categoryGroup).map((a) => [a.id, a]));\n        return this.set(_categoryGroups, newCategoryGroups);\n    }\n    /**\n     * Delete an account\n     * @param {number} id - ID of the account to delete\n     * @returns {Budget} - A new Budget with the desired change.\n     */\n    deleteAccount(id) {\n        // Change all Transaction references to that account to null:\n        const transactions = this[_transactions].map((t) => {\n            if (t.accountId === id) {\n                return t.set(\"accountId\", null);\n            }\n            return t;\n        });\n        return this.merge({\n            [_accounts]: this[_accounts].delete(id),\n            [_transactions]: transactions,\n        });\n    }\n    /**\n     * updateAccount: Insert or update an account.\n     *\n     * If newAccount.id is in the list of accounts, this will be an update.\n     * If newAccount.id is not in the list of accounts, this will add a new account.\n     *\n     * This method cannot be used to change the order of accounts (use positionAccount).\n     *\n     * @param {Account} newAccount - The account to add/modify\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateAccount(newAccount) {\n        assert(newAccount instanceof Account);\n        if (typeof newAccount.id !== 'number') {\n            throw new Error(\"account must have ID.\");\n        }\n        const newAccounts = this[_accounts].set(newAccount.id, newAccount);\n        return this.set(_accounts, newAccounts);\n    }\n    /**\n     * positionAccount: Change an account's position in the list of accounts\n     *\n     * @param {number} accountId ID of the account to move\n     * @param {number} newIndex New position in the list of accounts (0 = first)\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    positionAccount(accountId, newIndex) {\n        assertIsNumber(accountId);\n        assertIsNumber(newIndex);\n        const account = this.accounts.get(accountId);\n        assert(account instanceof Account);\n        const newAccounts = AccountMap(this.accounts.toList().filter((a) => a.id !== accountId).toList().insert(newIndex, account).map((a) => [a.id, a]));\n        return this.set(_accounts, newAccounts);\n    }\n    /**\n     * Ordered list of Transactions, always in chronological order (oldest first; null dates go last)\n     * @returns {OrderedMap}\n     */\n    get transactions() { return this[_transactions]; }\n    /**\n     * Delete a transaction\n     * @param {number} id - ID of the transaction to delete\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    deleteTransaction(id) { return this.set(_transactions, this[_transactions].delete(id)); }\n    /**\n     * updateTransaction: Insert or update a transaction.\n     *\n     * If newTransaction.id is in the list of transactions, this will be an update.\n     * If newTransaction.id is not in the list of transactions, this will add it.\n     *\n     * @param {Transaction} newTransaction - The transaction to insert/modify.\n     * @returns {Budget} A new Budget with the desired change.\n     */\n    updateTransaction(newTransaction) {\n        assert(newTransaction instanceof Transaction, \"expected Transaction\");\n        const id = newTransaction.id;\n        if (typeof id !== 'number') {\n            throw new Error(\"Transaction must have an ID.\");\n        }\n        assert(newTransaction.accountId === null || this.accounts.has(newTransaction.accountId), \"accountId must be valid.\");\n        let sortRequired = true;\n        if (this[_transactions].has(id)) {\n            // We are replacing an existing value:\n            const oldTransaction = this[_transactions].get(id);\n            // We'll only need to re-sort transactions if the date has changed:\n            sortRequired = (+(newTransaction.date || -1) !== +(oldTransaction.date || -1));\n        }\n        else {\n            // We are inserting a new value.\n            // Sort it into the correct spot, unless 'date' is null, in which\n            // case it can just be appended to the end of the list.\n            sortRequired = newTransaction.date !== null;\n        }\n        let newTransactions = this[_transactions].set(id, newTransaction);\n        if (sortRequired) {\n            newTransactions = newTransactions.sortBy(Budget.transactionSorter);\n        }\n        return this.set(_transactions, newTransactions);\n    }\n    /**\n     * _computeBalances: Private method that computes the balance of each account as well\n     * as the running total of the relevant account as of each transaction.\n     */\n    _computeBalances() {\n        assert(this._accountBalances === undefined, \"_computeBalances() should only run once per Budget instance.\");\n        // Get the initial balance of each account:\n        const accountBalances = this.accounts.map((account) => account.initialBalance).toJS();\n        const transactionBalances = {};\n        for (const transaction of this.transactions.values()) {\n            if (transaction.pending || transaction.accountId === null) {\n                // Only define a \"running balance for this account as of this transaction\" if there is an accountId and the transaction is not pending\n                continue;\n            }\n            else {\n                const balance = accountBalances[transaction.accountId] += transaction.amount;\n                if (transaction.id !== null) {\n                    transactionBalances[transaction.id] = balance;\n                }\n            }\n        }\n        // We cache the results and make them immutable. We don't have to worry about cache\n        // invalidation; any change to Budget will create a new object with an empty cache.\n        this._accountBalances = Object.freeze(accountBalances);\n        this._transactionAccountBalances = Object.freeze(transactionBalances);\n    }\n    /** Get an object which contains balance of each account keyed by accountId, considering all non-pending transactions */\n    get accountBalances() {\n        if (this._accountBalances === undefined) {\n            this._computeBalances();\n        }\n        return this._accountBalances;\n    }\n    /**\n     * Get the balance of any account as of the specified transaction.\n     * Only non-pending transactions with a date are considered.\n     *\n     * @param {number} transactionId - The transaction to use as a reference point\n     * @param {number} accountId - the account whose balance to return\n     * @returns {number|undefined} The balance of the specified account as of the specified transaction\n     */\n    accountBalanceAsOfTransaction(transactionId, accountId) {\n        // This is what's slow.\n        const account = this.accounts.get(accountId);\n        assert(account !== undefined);\n        const transaction = this.transactions.get(transactionId);\n        assert(transaction !== undefined);\n        if (transaction.date === null || transaction.pending === true) {\n            return undefined; // We can't define an account balance for these type of transactions\n        }\n        if (this._accountBalances === undefined) {\n            this._computeBalances();\n        }\n        if (transaction.accountId === accountId) {\n            const x = this._transactionAccountBalances[transactionId];\n            return x;\n        }\n        else {\n            // Account balances are computed per transaction.\n            // Find the most recent preceding transaction associated with the specified account,\n            // and return the account balance as of that transaction.\n            const transactions = this.transactions.filter((txn) => txn.date !== null && txn.pending === false);\n            const index = transactions.keySeq().keyOf(transactionId); // The index of the specified transaction\n            const precedingTransactions = transactions.valueSeq().slice(0, index);\n            const lastAccountTransaction = precedingTransactions.findLast((txn) => txn.accountId === accountId);\n            if (lastAccountTransaction) {\n                return this._transactionAccountBalances[lastAccountTransaction.id];\n            }\n            else {\n                return account.initialBalance;\n            }\n        }\n    }\n    /**\n     * Given a date, get the balance of all categories, up to and including that date.\n     *\n     * @param {PDate} date - The date\n     * @returns {Immutable.Map} - The balance of all categories as of that date, as a map where\n     *        the key is the category ID and the value is the balance of that category.\n     */\n    categoryBalancesOnDate(date) {\n        assert(date instanceof PDate);\n        assert(date >= this.startDate);\n        assert(date <= this.endDate);\n        return Immutable.Map().withMutations(map => {\n            for (let txn of this.transactions.values()) {\n                if (txn.date === null || txn.date > date) {\n                    break;\n                }\n                txn.detail.forEach((d) => {\n                    if (d.categoryId !== null) {\n                        map.set(d.categoryId, map.get(d.categoryId, 0) + d.amount);\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * Given a date, get the balance of the specified category, up to and including that date.\n     *\n     * @param {number} categoryId - The ID of the category\n     * @param {PDate} date - The date\n     * @returns {number} - The balance of the specified category as of that date\n     */\n    categoryBalanceByDate(categoryId, date) {\n        assert(this.categories.has(categoryId));\n        return this.categoryBalancesOnDate(date).get(categoryId, 0);\n    }\n    /**\n     * Given a date, get the budget of each category, up to and including that date.\n     *\n     * @param {PDate} date - The date\n     * @returns {Immutable.Map} - The budget of all categories as of that date, as a map where\n     *        the key is the category ID and the value is the budget amount of that category.\n     */\n    categoryBudgetsOnDate(date) {\n        let transactionCategoryBalances = null;\n        assert(date instanceof PDate);\n        assert(date >= this.startDate);\n        assert(date <= this.endDate);\n        return Immutable.Map().withMutations(map => {\n            for (const category of this.categories.values()) {\n                if (category.id === null) {\n                    continue; // Exclude categories with no ID.\n                }\n                let budgetAmount = 0;\n                if (category.rules === null) {\n                    if (transactionCategoryBalances === null) {\n                        transactionCategoryBalances = this.categoryBalancesOnDate(date);\n                    }\n                    budgetAmount = transactionCategoryBalances.get(category.id, 0);\n                }\n                else {\n                    category.rules.forEach((rule) => {\n                        budgetAmount += rule.amount * rule.countOccurrencesBetween(this.startDate, date);\n                    });\n                }\n                map.set(category.id, budgetAmount);\n            }\n        });\n    }\n    toJS() {\n        const result = super.toJS();\n        // Remove private keys:\n        delete result[_accounts];\n        delete result[_categories];\n        delete result[_categoryGroups];\n        delete result[_transactions];\n        // Add accounts as a correctly-ordered array:\n        result.accounts = this.accounts.toList().toJS();\n        // Add categories as an array:\n        result.categories = this.categories.toList().toJS();\n        // Add category groups as a correctly-ordered array:\n        result.categoryGroups = this.categoryGroups.toList().toJS();\n        // Add transactions as a correctly-ordered array:\n        result.transactions = this.transactions.toList().toJS();\n        // Add version information\n        // Major version should only change if backwards compatibility is broken.\n        result.version = { major: majorVersion, minor: minorVersion };\n        return result;\n    }\n    /**\n     * Convert from a JSON-friendly native JavaScript object (or JSON) to a Budget instance.\n     * @param {Object} obj - JSON or JavaScript serialized representation of an instance of this Budget.\n     * @returns {Object} - New instance of this Budget.\n     */\n    static fromJS(obj) {\n        // The JS serialization won't be typed, but the constructor expects types like Catgory, Transaction, etc:\n        const values = Object.assign({}, obj);\n        for (const dateField of ['startDate', 'endDate']) {\n            if (values[dateField] !== null) {\n                assertIsNumber(values[dateField]);\n                values[dateField] = new PDate(values[dateField]);\n            }\n        }\n        const typedLists = [\n            { key: \"accounts\", type: Account },\n            { key: \"categories\", type: Category },\n            { key: \"categoryGroups\", type: CategoryGroup },\n            { key: \"transactions\", type: Transaction },\n        ];\n        for (const { key, type } of typedLists) {\n            values[key] = values[key].map((entry) => type.fromJS(entry));\n        }\n        return new this(values);\n    }\n    static transactionSorter(transaction) {\n        return transaction.date === null ? 999999 : +transaction.date; // Sort 'null' dates after the highest date\n    }\n}\n/**\n * Given any iterable of Categories, generate a properly sorted OrderedMap.\n *\n * Categories should be ordered by group (in the custom order that category\n * groups are in), and then secondarily by the custom order (whatever order\n * they're currently in in the passed iterable.)\n *\n * @param {Category[]} categories - Iterable of categories\n * @param {CategoryGroup[]} categoryGroups - The groups that the categories\n *        need to be sorted by. The groups should be in a custom order.\n *\n * @returns {Immutable.OrderedMap} OrderedMap of categories.\n */\nfunction _createOrderedCategoryMap(categories, categoryGroups) {\n    const categoryGroupIdsOrdered = categoryGroups.keySeq();\n    return Immutable.OrderedMap(categories.sortBy((category) => category.groupId ? categoryGroupIdsOrdered.keyOf(category.groupId) : 0 // groupId should always be a number though.\n    ).map((c) => [c.id, c]));\n}\n//# sourceMappingURL=budget.js.map","import { assert, assertIsNumber } from '../util';\nimport { Account, Budget, Category, CategoryGroup, PDate, Transaction } from '../prophecy';\nimport * as ACTION from './actions';\n/**\n * The reducer for prophecy. Used to make the Prophecy engine work within a redux app.\n * @param {Budget} state - the state to modify\n * @param {Object} action - the action to apply to the state, if applicable\n * @returns {Budget} - returns the state, with any resulting modifications\n */\nexport function reducer(state = new Budget(), action) {\n    // Basic checks:\n    if (!action.type.startsWith(ACTION.PROPHECY_ACTION_PREFIX)) {\n        // This is not a prophecy-specific action\n        return state;\n    }\n    if (action.budgetId !== undefined && action.budgetId !== state.id) {\n        // This action does not apply to this particular budget\n        return state;\n    }\n    switch (action.type) {\n        case ACTION.SET_CURRENCY: {\n            return state.set('currencyCode', action.currencyCode);\n        }\n        case ACTION.SET_DATE: {\n            const changes = {};\n            for (let dateKey of ['startDate', 'endDate']) {\n                if (dateKey in action) {\n                    changes[dateKey] = new PDate(action[dateKey]);\n                }\n            }\n            return state.merge(changes);\n        }\n        case ACTION.SET_NAME: {\n            return state.set('name', action.name);\n        }\n        // Account actions:\n        case ACTION.DELETE_ACCOUNT: {\n            return state.deleteAccount(action.id);\n        }\n        case ACTION.UPDATE_ACCOUNT: {\n            assertIsNumber(action.id);\n            const existingAccount = state.accounts.get(action.id);\n            const acct = existingAccount || new Account({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateAccount(acct.merge(action.data));\n            }\n            if (action.linkNullTransactions) {\n                // Implement the \"linkNullTransactions\" param, required to make DELETE_ACCOUNT fully invertable:\n                assert(existingAccount === undefined); // linkNullTransactions is only allowed for Account insertions\n                const nullTransactions = newState.transactions.filter((t) => t.accountId == null);\n                action.linkNullTransactions.forEach((txnId) => {\n                    const txn = nullTransactions.get(txnId);\n                    if (txn) {\n                        newState = newState.updateTransaction(txn.set('accountId', action.id));\n                    }\n                });\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionAccount(action.id, action.index);\n            }\n            return newState;\n        }\n        // Category actions:\n        case ACTION.DELETE_CATEGORY: {\n            return state.deleteCategory(action.id);\n        }\n        case ACTION.UPDATE_CATEGORY: {\n            assertIsNumber(action.id);\n            const existingCategory = state.categories.get(action.id);\n            const category = existingCategory || new Category({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateCategory(category.merge(Category.cleanArgs(action.data)));\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionCategory(action.id, action.index);\n            }\n            if (action.linkTransactionDetails) {\n                // Implement the \"linkTransactionDetails\" param, required to make DELETE_CATEGORY fully invertable:\n                assert(existingCategory === undefined); // linkTransactionDetails is only allowed for Category insertions\n                // linkTransactionDetails is a list of tuples of [transaction ID, index into transaction.detail list]\n                action.linkTransactionDetails.forEach(([txnId, detailsIndex]) => {\n                    const txn = newState.transactions.get(txnId);\n                    if (txn) {\n                        newState = newState.updateTransaction(txn.updateIn(['detail', detailsIndex, 'categoryId'], categoryId => categoryId === null ? action.id : categoryId));\n                    }\n                });\n            }\n            return newState;\n        }\n        // Category Group actions:\n        case ACTION.DELETE_CATEGORY_GROUP: {\n            return state.deleteCategoryGroup(action.id);\n        }\n        case ACTION.UPDATE_CATEGORY_GROUP: {\n            assertIsNumber(action.id);\n            const existingGroup = state.categoryGroups.get(action.id);\n            const group = existingGroup || new CategoryGroup({ id: action.id });\n            let newState = state;\n            if (action.data) {\n                assert(!('id' in action.data));\n                newState = newState.updateCategoryGroup(group.merge(action.data));\n            }\n            if ('index' in action) {\n                assertIsNumber(action.index);\n                newState = newState.positionCategoryGroup(action.id, action.index);\n            }\n            return newState;\n        }\n        // Transaction actions:\n        case ACTION.DELETE_TRANSACTION: {\n            return state.deleteTransaction(action.id);\n        }\n        case ACTION.UPDATE_TRANSACTION: {\n            assertIsNumber(action.id);\n            assert(!('id' in action.data));\n            const data = Transaction.cleanArgs(action.data);\n            const txn = state.transactions.get(action.id) || new Transaction({ id: action.id });\n            return state.updateTransaction(txn.merge(data));\n        }\n        case ACTION.UPDATE_MULTIPLE_TRANSACTIONS: {\n            let newState = state;\n            action.subActions.forEach((subAction) => {\n                assert(subAction.type === ACTION.UPDATE_TRANSACTION || subAction.type === ACTION.DELETE_TRANSACTION);\n                assert(subAction.budgetId === undefined || subAction.budgetId === state.id);\n                newState = reducer(newState, subAction);\n            });\n            return newState;\n        }\n        default:\n            return state;\n    }\n}\n/**\n * The action inverter for prophecy.\n * Given an action and a state, produce the inverse of 'action', such that\n * inverse(action(state)) = state\n *\n * This is used to build undo functionality that is relatively robust\n * when multiple users can simultaneously be emitting actions.\n *\n * @param {Budget} state - the state that is about to be modified by action\n * @param {Object} action - the action to invert\n * @returns {?Object} - An action (a JS object) or null, if the action cannot be inverted.\n */\nexport function inverter(state, action) {\n    // Inner function to generate the inverted action's parameters:\n    let result = (() => {\n        switch (action.type) {\n            case ACTION.NOOP: {\n                return {};\n            }\n            // Setting actions:\n            case ACTION.SET_CURRENCY: {\n                return { currencyCode: state.get('currencyCode') };\n            }\n            case ACTION.SET_DATE: {\n                const data = {};\n                if ('startDate' in action) {\n                    data.startDate = +state.startDate;\n                }\n                if ('endDate' in action) {\n                    data.endDate = +state.endDate;\n                }\n                return data;\n            }\n            case ACTION.SET_NAME: {\n                return { name: state.name };\n            }\n            // Account actions:\n            case ACTION.DELETE_ACCOUNT: {\n                const acct = state.accounts.get(action.id);\n                if (acct) {\n                    const data = acct.toJS();\n                    delete data.id;\n                    // Restore the associated transactions that will have their accountId set null:\n                    const linkNullTransactions = state.transactions.valueSeq().filter((t) => t.accountId == action.id).map((t) => t.id);\n                    const index = state.accounts.keySeq().keyOf(action.id);\n                    return { type: ACTION.UPDATE_ACCOUNT, id: action.id, data, linkNullTransactions, index };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_ACCOUNT: {\n                const acct = state.accounts.get(action.id);\n                if (acct) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_ACCOUNT action:\n                    const acctJS = acct.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (let key in action.data) {\n                            const oldValue = acctJS[key];\n                            if (oldValue !== action.data[key]) {\n                                inverse.data[key] = oldValue;\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this account on the account list changed?\n                        const oldIndex = state.accounts.keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the account:\n                    return { type: ACTION.DELETE_ACCOUNT, id: action.id };\n                }\n            }\n            // Category actions:\n            case ACTION.DELETE_CATEGORY: {\n                const category = state.categories.get(action.id);\n                if (category) {\n                    const data = category.toJS();\n                    delete data.id;\n                    // Restore the associated transaction details that will have their categoryId set null.\n                    // We do this by including a list with tuples of (transaction ID, detail index).\n                    const linkTransactionDetails = [];\n                    state.transactions.forEach((txn) => {\n                        txn.detail.forEach((detail, idx) => {\n                            if (detail.categoryId === category.id) {\n                                linkTransactionDetails.push([txn.id, idx]);\n                            }\n                        });\n                    });\n                    const index = state.categories.filter((cat) => cat.groupId == category.groupId).keySeq().keyOf(action.id);\n                    return { type: ACTION.UPDATE_CATEGORY, id: action.id, data, linkTransactionDetails, index };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_CATEGORY: {\n                const category = state.categories.get(action.id);\n                if (category) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_CATEGORY action:\n                    const categoryJS = category.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (let key in action.data) {\n                            const oldValue = categoryJS[key];\n                            if (oldValue !== action.data[key]) {\n                                inverse.data[key] = oldValue;\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this category within the group changed?\n                        const oldIndex = state.categories.filter((cat) => cat.groupId == category.groupId).keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the category:\n                    return { type: ACTION.DELETE_CATEGORY, id: action.id };\n                }\n            }\n            // Category Group actions:\n            case ACTION.DELETE_CATEGORY_GROUP: {\n                const group = state.categoryGroups.get(action.id);\n                if (group) {\n                    const data = group.toJS();\n                    delete data.id;\n                    return { type: ACTION.UPDATE_CATEGORY_GROUP, id: action.id, data };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_CATEGORY_GROUP: {\n                const group = state.categoryGroups.get(action.id);\n                if (group) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_CATEGORY_GROUP action:\n                    const groupJS = group.toJS();\n                    const inverse = { id: action.id };\n                    if ('data' in action) {\n                        inverse.data = {};\n                        for (let key in action.data) {\n                            const oldValue = groupJS[key];\n                            if (oldValue !== action.data[key]) {\n                                inverse.data[key] = oldValue;\n                            }\n                        }\n                    }\n                    if ('index' in action) {\n                        // Was the index/position of this category group on changed?\n                        const oldIndex = state.categoryGroups.keySeq().keyOf(action.id);\n                        if (action.index !== oldIndex) {\n                            inverse.index = oldIndex;\n                        }\n                    }\n                    return inverse;\n                }\n                else {\n                    // To undo this insertion, we need to delete the category group:\n                    return { type: ACTION.DELETE_CATEGORY_GROUP, id: action.id };\n                }\n            }\n            // Transaction actions:\n            case ACTION.DELETE_TRANSACTION: {\n                const txn = state.transactions.get(action.id);\n                if (txn) {\n                    const data = txn.toJS();\n                    delete data.id;\n                    return { type: ACTION.UPDATE_TRANSACTION, id: action.id, data };\n                }\n                return ACTION.NOOP;\n            }\n            case ACTION.UPDATE_TRANSACTION: {\n                const txn = state.transactions.get(action.id);\n                if (txn) {\n                    // Generate the 'data' parameter required to undo this modification\n                    // using another UPDATE_TRANSACTION action:\n                    const txnJS = txn.toJS();\n                    let data = {};\n                    for (let key in action.data) {\n                        const oldValue = txnJS[key];\n                        if (oldValue !== action.data[key]) {\n                            data[key] = oldValue;\n                        }\n                    }\n                    return { id: action.id, data };\n                }\n                else {\n                    // To undo this insertion, we need to delete the transaction:\n                    return { type: ACTION.DELETE_TRANSACTION, id: action.id };\n                }\n            }\n            case ACTION.UPDATE_MULTIPLE_TRANSACTIONS: {\n                let inverseSubActions = [];\n                // Reverse iterate over action.subActions and invert each one:\n                let newState = state;\n                action.subActions.forEach((subAction) => {\n                    const inverseSubAction = inverter(newState, subAction);\n                    delete inverseSubAction.budgetId; // Delete this since it's redundant\n                    inverseSubActions.push(inverseSubAction);\n                    newState = reducer(newState, subAction); // We need to update the state as we iterate the subActions in case any prior actions affect later ones.\n                });\n                inverseSubActions.reverse(); // The inverse actions should be applied in the opposite order\n                return { subActions: inverseSubActions };\n            }\n        }\n    })();\n    if (result) {\n        if (!result.type) {\n            result.type = action.type; // type defaults to the same action type\n        }\n        result.budgetId = state.id;\n        return result;\n    }\n    return null;\n}\n//# sourceMappingURL=prophecy_redux.js.map","/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));","import Immutable from 'immutable';\nimport {ValidationContext} from './util';\n\n\n\n// This file is kept in JavaScript until Immutable 4+ is out, as it seems this\n// is the simplest way to get TypeScript to create fully typed PRecord classes.\n\n\n\n/**\n * PRecord: Immutable.Record with a bit of extra functionality\n *\n * Has a _checkInvariants method which can be used to check invariants\n * whenever a new Record is created.\n *\n * Has detailed validation and error/warning reporting functionality.\n *\n * @param {Object} defaultValues - Definition of the fields that this PRecord will have\n * @returns {*} - A class that can be extended to create a new PRecord subclass\n */\nexport const PRecord = (defaultValues) => class extends Immutable.Record(defaultValues) {\n    constructor(values) {\n        super(values);\n        this._skipChecks = false;\n        this._checkInvariants();\n    }\n    /**\n     * Add some safety checks to the inherited 'set()' method, since it creates\n     * Record objects without using the constructor\n     * @param {string} k - Key to set\n     * @param {*} v - Value to set\n     * @returns {Object} - New instance of this Record subclass with the given changes.\n     */\n    set(k, v) {\n        const result = super.set(k, v);\n        if (!this._skipChecks) {\n            result._checkInvariants();\n        }\n        return result;\n    }\n    /**\n     * Add some safety checks to the inherited 'withMutations()' method, since it creates\n     * Record objects without using the constructor\n     * \n     * Here we only do one check after any and all changes are applied. This lets\n     * many changes be made at once, and _checkInvariants only runs once.\n     * \n     * @param {function} fn - Mutator function\n     * @returns {Object} - New instance of this Record subclass with the given changes.\n     */\n    withMutations(fn) {\n        return super.withMutations(newRecord => {\n            newRecord._skipChecks = true;\n            fn(newRecord);\n            newRecord._skipChecks = false;\n            newRecord._checkInvariants();\n        });\n    }\n    /**\n     * Assertions to help enforce correct usage.\n     * \n     * These invariants should include things like type checks, but\n     * should be somewhat tolerant of incomplete or inconsistent\n     * information - that way, PRecord subclasses can still be used\n     * to hold the data for a form as the user fills it out in the UI,\n     * for example.\n     * \n     * More final and contextual validation should take place in\n     * _validate().\n     **/\n    _checkInvariants() {}\n\n    /**\n     * Validate this record.\n     * @param {ValidationContext} context - the ValidationContext that specifies the\n     * budget that this record will become part of, and provides a place to store the\n     * result.\n     */\n    _validate(context) {}  // eslint-disable-line no-unused-vars\n\n    /**\n     * Validate this PRecord subclass.\n     * Returns an instance of ValidationResult.\n     * \n     * @param {Budget} budget - the Prophecy Budget that this record will be part of.\n     * @returns {ValidationResult}\n     */\n    validateForBudget(budget) {\n        const context = new ValidationContext(budget);\n        this._validate(context);\n        return context.result;\n    }\n\n    /**\n     * Validate this record and throw an exception if any errors are found.\n     * @param {Budget} budget - the Prophecy Budget that this record will be part of.\n     */\n    assertIsValidForBudget(budget) {\n        const validationResult = this.validateForBudget(budget);\n        if (validationResult.errors.length > 0) {\n            let message = `${this.constructor.name} validation failed:\\n`;\n            validationResult.errors.forEach(err => message += ` * ${err.message} (${err.field})\\n`);\n            throw Error(message);\n        }\n    }\n\n    /**\n     * Convert from a JSON-friendly native JavaScript object to this PRecord type.\n     * @param {Object} obj - JavaScript serialized representation of an instance of this Record subclass.\n     * @returns {Object} - New instance of this PRecord subclass.\n     */\n    static fromJS(obj) {\n        return new this(obj);\n    }\n\n    /**\n     * Make toJSON an alias of toJS, so PRecord works with JSON.stringify()\n     *\n     * @returns {Object} - JSON-serialized version of this PRecord subclass.\n     */\n    toJSON() { return this.toJS(); }\n}\n","import { __, assertIsNumber } from './util';\nconst _CODE = Symbol(\"code\"); // Internal key used to make 'code' read-only\n/** Class that describes a real-world currency. */\nexport class Currency {\n    /**\n     * Create a currency description.\n     * @param {string} code - the ISO 4217 currency code (three characters)\n     * @param {string} name - the full name of the currency (\"Canadian Dollar\")\n     * @param {string[]} symbols - the symbols for this currency in order from most to least\n     *                           ambiguous (e.g. [\"$\", \"CA$\"])\n     * @param {number} decimals - The maximum number of decimal places that this currency can\n     *                            support (e.g. '2' means $0.01 is the smallest amount.)\n     */\n    constructor(code, name, symbols, decimals = 2) {\n        this.code = code;\n        this.name = name;\n        this.symbols = symbols;\n        this.decimals = decimals;\n    }\n    /**\n     * Round a given amount of this currency to the minimum supported value.\n     * For dollars, this will round to the nearest $0.01\n     * This is not meant for cash transactions, where the rounding rules are different\n     * (https://en.wikipedia.org/wiki/Cash_rounding for more details on that).\n     * This is generally the same as integer rounding because currency amounts are represented\n     * as floating-point numbers multiplied by the minimal number of decimal places the currency\n     * supports - so $3.2105 is stored as '321.05' and rounded to '312' or $3.21 exactly.\n     * @param {number} amount - The amount/value to round.\n     * @returns {number} The rounded amount/value.\n     */\n    roundAmount(amount) { return Math.round(amount); }\n    /**\n     * Custom JSON serialization\n     * @returns {string} - This currency's currency code.\n     */\n    toJSON() { return this.code; }\n}\n/** Global constant map listing supported currencies. */\nexport const SUPPORTED_CURRENCIES = Object.freeze({\n    CAD: new Currency(\"CAD\", __(\"Canadian dollar\"), [\"$\", \"C$\"]),\n    EUR: new Currency(\"EUR\", __(\"Euro\"), [\"€\"]),\n    USD: new Currency(\"USD\", __(\"United States dollar\"), [\"$\", \"US$\"]),\n    JPY: new Currency(\"JPY\", __(\"Japanese yen\"), [\"¥\"], 0),\n    XBT: new Currency(\"XBT\", __(\"Bitcoin\"), [\"\\u20BF\"], 8),\n});\nclass CustomNumberFormat extends Intl.NumberFormat {\n}\nexport class CurrencyFormatter {\n    constructor(defaultCurrency, locales) {\n        this.defaultCurrency = defaultCurrency;\n        this.locales = locales || 'en'; // Define a default locale for consistency\n        // Cached NumberFormat instances, keyed by currency code:\n        this.rawFormatters = {};\n        this.formatters = {};\n    }\n    /**\n     * Given an amount and a Currency, format the amount appropriately as a plain text string.\n     * Note: it would be nice to just use toLocaleString() as follows:\n     *    amount.toLocaleString(\"en-US\", {style: \"currency\", currency: \"CAD\"})\n     * However, that does not support Bitcoin.\n     * @param {number} amount - the amount to format\n     * @param {Currency=} currency - one of the currencies from SUPPORTED_CURRENCIES (optional)\n     * @return {string} The amount, formatted as a string.\n     */\n    formatAmount(amount, currency) {\n        assertIsNumber(amount);\n        if (currency === undefined) {\n            currency = this.defaultCurrency;\n        }\n        let formatter = this.formatters[currency.code];\n        if (formatter === undefined) {\n            formatter = this.formatters[currency.code] = new CustomNumberFormat(this.locales, {\n                style: \"currency\",\n                // The currency argument is supposed to be the ISO 4217 currency code, but\n                // according to the spec (http://www.ecma-international.org/ecma-402/1.0/#sec-6.3)\n                // if we pass an unknown currency code, the 'currency' agument is used as the\n                // symbol. So pass a generic/fake code, and we'll later replace it with the\n                // correct symbol. That way, we get the symbol in the correct place for the\n                // user's locale, but we can also support currencies like Bitcoin that the\n                // Javascript runtime may not natively support.\n                currency: \"XCC\",\n                minimumFractionDigits: Math.min(2, currency.decimals),\n                maximumFractionDigits: currency.decimals,\n            });\n            let symbol = currency.symbols[0];\n            const isDefaultCurrency = (currency.code === this.defaultCurrency.code);\n            const symbolConflicts = (!isDefaultCurrency && symbol == this.defaultCurrency.symbols[0]);\n            if (symbolConflicts && currency.symbols.length > 1) {\n                symbol = currency.symbols[1];\n            }\n            formatter.symbol = symbol;\n        }\n        return formatter.format(amount * Math.pow(10, -currency.decimals)).replace(\"XCC\", formatter.symbol);\n    }\n    /**\n     * Given an amount and a Currency, format the amount as a plain text string with no symbol.\n     * @param {number} amount - the amount to format\n     * @param {Currency=} currency - one of the currencies from SUPPORTED_CURRENCIES (optional)\n     * @return {string} The amount, formatted as a string, but without any currency symbol.\n     */\n    formatAmountRaw(amount, currency) {\n        assertIsNumber(amount);\n        if (currency === undefined) {\n            currency = this.defaultCurrency;\n        }\n        let formatter = this.rawFormatters[currency.code];\n        if (formatter === undefined) {\n            formatter = this.rawFormatters[currency.code] = new Intl.NumberFormat(this.locales, {\n                minimumFractionDigits: Math.min(2, currency.decimals),\n                maximumFractionDigits: currency.decimals,\n            });\n        }\n        return formatter.format(amount * Math.pow(10, -currency.decimals));\n    }\n}\n//# sourceMappingURL=currency.js.map","import * as Immutable from 'immutable';\nimport { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport { assert, assertIsNumber, PRecord } from './util';\n/**\n * Account: Represents a bank account, credit card, or a concept like \"Cash\"\n */\nexport class Account extends PRecord({\n    id: null,\n    name: \"\",\n    initialBalance: 0,\n    /** the ISO 4217 currency code */\n    currencyCode: \"USD\",\n    /* Arbitrary data defined by the user */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Account.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assert(this.currency instanceof Currency); // Check that currencyCode is valid.\n        assertIsNumber(this.initialBalance);\n        assert(Immutable.Map.isMap(this.metadata));\n    }\n    /** Get the currency of this account. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * an Account object.\n     *\n     * The result of this function can be passed to the Account constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this account\n     * @returns {Object} - Cleaned values for the fields of this account\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if ('metadata' in values && !Immutable.Map.isMap(values.metadata)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n//# sourceMappingURL=account.js.map","import * as Immutable from 'immutable';\nimport { Currency, SUPPORTED_CURRENCIES } from './currency';\nimport { default as PDate } from './pdate';\nimport { assert, assertIsNumber, assertPositiveIntegerOrNull, PRecord } from './util';\nexport var CategoryRulePeriod;\n(function (CategoryRulePeriod) {\n    CategoryRulePeriod[CategoryRulePeriod[\"Day\"] = 2] = \"Day\";\n    CategoryRulePeriod[CategoryRulePeriod[\"Week\"] = 3] = \"Week\";\n    CategoryRulePeriod[CategoryRulePeriod[\"Month\"] = 4] = \"Month\";\n    CategoryRulePeriod[CategoryRulePeriod[\"Year\"] = 5] = \"Year\";\n})(CategoryRulePeriod || (CategoryRulePeriod = {}));\nconst allowedRuleValues = [CategoryRulePeriod.Day, CategoryRulePeriod.Week, CategoryRulePeriod.Month, CategoryRulePeriod.Year];\nexport class CategoryRule extends PRecord({\n    amount: 0.0,\n    /** Start date for this rule, if any. */\n    startDate: null,\n    /** End date for this rule, if any. Must be after startDate but need not be within the budget period. */\n    endDate: null,\n    /** repeatN: If this rule is \"Repeat every 6 weeks\", this will be 6. If period is null, this value is meaningless. */\n    repeatN: 1,\n    /** period: one of the CategoryRulePeriod values or null (for spending that happens on one day or randomly throughout the budget) */\n    period: null,\n}) {\n    constructor(values) {\n        super(CategoryRule.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertIsNumber(this.amount);\n        assertIsNumber(this.repeatN);\n        assert((this.repeatN >>> 0) === this.repeatN, \"repeatN must be a positive integer.\");\n        assert(this.startDate === null || this.startDate instanceof PDate);\n        assert(this.endDate === null || this.endDate instanceof PDate);\n        assert(this.period === null || allowedRuleValues.indexOf(this.period) !== -1, \"period must be null or one of the allowed period constants.\");\n    }\n    /**\n     * countOccurrencesBetween: Based on this rule, determine how many times this amount is repeated\n     * between dateBegin and DateEnd.\n     *\n     * For example, if startDate is 2014-01-01, endDate is null, repeatN is 1, and period is Month\n     * (repeat every month from Jan 1, 2014 onward), then counOccurrencesBetween(2016-01-01, 2016-12-31)\n     * will return 12.\n     * @param {PDate} dateBegin - Start date of the period in question (inclusive)\n     * @param {PDate} dateEnd - End date of the period in question (inclusive)\n     * @returns {number}\n     */\n    countOccurrencesBetween(dateBegin, dateEnd) {\n        assert(dateBegin instanceof PDate);\n        assert(dateEnd instanceof PDate);\n        assert(dateEnd >= dateBegin);\n        // Short circuit checks:\n        if (this.startDate && dateEnd < this.startDate) {\n            return 0; // This rule doesn't start until after the date range in question has ended.\n        }\n        if (this.endDate && dateBegin > this.endDate) {\n            return 0; // This rule ended before the date range in question began\n        }\n        if (this.period === null) {\n            // This is not a repeating rule. We only have to consider startDate and endDate, which we did just above.\n            return 1;\n        }\n        // Step 1: Compute the # of occurrences between this.startDate (if set) and the earlier of [this.endDate, dateEnd]\n        const firstDay = this.startDate || dateBegin;\n        const lastDay = (this.endDate && this.endDate < dateEnd) ? this.endDate : dateEnd;\n        const daysDiff = Math.max(0, (+lastDay) - (+firstDay)); // daysDiff should never be negative\n        let result = null;\n        if (this.period === CategoryRulePeriod.Day) {\n            result = Math.floor(daysDiff / this.repeatN) + 1; // Never return a negative value\n        }\n        else if (this.period === CategoryRulePeriod.Week) {\n            result = Math.floor(daysDiff / (this.repeatN * 7)) + 1; // Note: we know repeatN > 0\n        }\n        else if (this.period === CategoryRulePeriod.Month) {\n            const months = (lastDay.year - firstDay.year) * 12\n                + (lastDay.month - firstDay.month)\n                + (lastDay.day >= firstDay.day ? 1 : 0);\n            result = Math.floor((months - 1) / this.repeatN) + 1; // Note that when repeatN = 1, this simplifies to 'result = months'\n        }\n        else if (this.period === CategoryRulePeriod.Year) {\n            result = (lastDay.year - firstDay.year) + (lastDay.month > firstDay.month || (lastDay.month == firstDay.month && lastDay.day >= firstDay.day) ? 1 : 0);\n        }\n        else {\n            throw new Error(\"invalid period\");\n        }\n        // Step 2: if dateBegin falls after this.startDate, subtract the number of occurrences\n        // between this.startDate and the day before dateBegin:\n        if (firstDay < dateBegin) {\n            result -= this.countOccurrencesBetween(firstDay, new PDate(+dateBegin - 1));\n        }\n        return result;\n    }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a CategoryRule object.\n     *\n     * The result of this function can be passed to the CategoryRule constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this CategoryRule\n     * @returns {Object} - Cleaned values for the fields of this CategoryRule\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if (typeof values.startDate === 'number') {\n            values.startDate = new PDate(values.startDate);\n        }\n        if (typeof values.endDate === 'number') {\n            values.endDate = new PDate(values.endDate);\n        }\n        return values;\n    }\n}\n/**\n * Category: Represents a category of spending, such as \"Rent\", \"Groceries\", \"Insurance\", etc.\n */\nexport class Category extends PRecord({\n    id: null,\n    name: \"\",\n    /**\n     * Rules: a set of Rule objects defining expected spending in this category such as \"$10 per day\"\n     *\n     * If rules === null, this is an \"Automatic\" category, which means that the total amount expected\n     * to be spent over the budget period should be computed from existing + pending transactions\n     * in this category\n     *\n     * If rules is a List (even an empty list), then it the total amount to be spent during the budget\n     * is to be calculated based on the rules. (Or is $0 if the rules list is empty)\n     */\n    rules: null,\n    /** Notes - custom text editable by the user */\n    notes: \"\",\n    /** the ISO 4217 currency code */\n    currencyCode: \"USD\",\n    /** Which CategoryGroup this category belongs to. */\n    groupId: null,\n    /** Metadata - meaning depends on the user/application */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Category.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertPositiveIntegerOrNull(this.id);\n        assertPositiveIntegerOrNull(this.groupId);\n        if (this.rules !== null) {\n            assert(Immutable.List.isList(this.rules));\n            this.rules.forEach(rule => { assert(rule instanceof CategoryRule); });\n        }\n        assert(this.currency instanceof Currency); // Check that currencyCode is valid.\n        assert(Immutable.Map.isMap(this.metadata));\n    }\n    _validate(context) {\n        // Group must be valid\n        const groups = context.budget.categoryGroups;\n        if (this.groupId === null || !groups.has(this.groupId)) {\n            context.addError(null, \"Every Category must be assigned to a valid CategoryGroup.\");\n        }\n        // Ensure that no rules overlap:\n        if (this.rules !== null) {\n            const rules = this.rules;\n            rules.forEach((rule, i) => {\n                rules.forEach((otherRule, j) => {\n                    if (i !== j) {\n                        const otherStartDate = otherRule.startDate || context.budget.startDate;\n                        const otherEndDate = otherRule.endDate || context.budget.endDate;\n                        if (rule.countOccurrencesBetween(otherStartDate, otherEndDate) !== 0) {\n                            context.addError('rules', \"A budget category's rules must not overlap.\");\n                        }\n                    }\n                });\n            });\n        }\n    }\n    /** Is this an \"automatic\" category (see 'rules' attribute)? */\n    get isAutomatic() { return this.rules === null; }\n    /** Get the currency of this category. */\n    get currency() { return SUPPORTED_CURRENCIES[this.currencyCode]; }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a Category object.\n     *\n     * The result of this function can be passed to the Category constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this category\n     * @returns {Object} - Cleaned values for the fields of this category\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if (values.rules !== undefined && values.rules !== null) {\n            // 'rules' can be any iterable with CategoryRule-typed values or\n            // objects used to initialize CategoryRule\n            values.rules = Immutable.List(values.rules.map((r) => r instanceof CategoryRule ? r : new CategoryRule(r)));\n        }\n        if ('metadata' in values && !Immutable.Map.isMap(values.metadata)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n/**\n * CategoryGroup: Represents an ordered group of categories.\n */\nexport class CategoryGroup extends PRecord({\n    /** Unique integer ID of this category group */\n    id: null,\n    /** The name of this category group */\n    name: \"\",\n}) {\n}\n//# sourceMappingURL=category.js.map","import * as Immutable from 'immutable';\nimport { default as PDate } from './pdate';\nimport { __, assert, assertIsNumber, assertPositiveIntegerOrNull, PRecord } from './util';\nexport class TransactionDetail extends PRecord({\n    amount: 0.0,\n    description: \"\",\n    categoryId: null,\n}) {\n}\n/**\n * Transaction: Represents a change in the balance of an account.\n * Has an amount, who (who the money went to / came from), description,\n * category, and more.\n * e.g. '$20 from Chequing account went to SomeCo Inc. to buy a Widget'\n * Can be split - e.g. 'Sent $17 to Tom - $10 for gas and $7 for coffee'\n */\nexport class Transaction extends PRecord({\n    id: null,\n    date: null,\n    accountId: null,\n    who: \"\",\n    /**\n     * detail: The amount, description, and category of this transaction.\n     * Usually a single-item list except for split transactions.\n     */\n    detail: Immutable.List.of(new TransactionDetail()),\n    userId: null,\n    /**\n     * pending transactions affect the budget if their date is today or past.\n     * If their day is in the future, they don't.\n     * pending transactions never affect the account balances.\n     */\n    pending: true,\n    /**\n     * isTransfer:\n     * Transfers between accounts (especially of different currencies) require special treatment.\n     *\n     * A typical transfer from e.g. \"Chequing to Savings\" would be represented as two transactions:\n     * One transaction with a negative amount and its accountId set to the chequing account, and\n     * one transaction with a positive amount and its accountId set to the savings account.\n     *\n     * This approach allows Prophecy to model complex transfers, e.g. where the money arrives\n     * in the destination account on a different day than it was sent from the first account\n     * (very common with e.g. credit card payments), or where the two accounts have different\n     * currencies.\n     *\n     * Transfer transactions must not have a budget category assigned, because they are not an expense\n     * nor income.\n     *\n     * In a single-currency budget, the sum of all transfer transactions should be zero.\n     * In a multi-currency budget, the sum of all transfer transactions may not be zero,\n     * even when converted to the same currency, because of losses due to currency conversion.\n     */\n    isTransfer: false,\n    /* Arbitrary data defined by the user */\n    metadata: Immutable.Map(),\n}) {\n    constructor(values) {\n        super(Transaction.cleanArgs(values));\n    }\n    /** Assertions to help enforce correct usage. */\n    _checkInvariants() {\n        assertPositiveIntegerOrNull(this.id);\n        assert(this.date === null || this.date instanceof PDate);\n        assertPositiveIntegerOrNull(this.accountId);\n        assert(Immutable.List.isList(this.detail));\n        assert(this.detail.size > 0);\n        this.detail.forEach(entry => {\n            if (!(entry instanceof TransactionDetail)) {\n                throw new Error('transaction .detail must be TransactionDetail instances');\n            }\n            assertIsNumber(entry.amount);\n            assert(typeof entry.description === 'string');\n            assertPositiveIntegerOrNull(entry.categoryId);\n            if (this.isTransfer) {\n                assert(entry.categoryId === null, \"Do not set a category for transfer transactions.\");\n            }\n        });\n        assert(Immutable.Map.isMap(this.metadata));\n    }\n    _validate(context) {\n        let account = null;\n        if (this.accountId !== null) {\n            // An accountID is set - is it valid?\n            account = context.budget.accounts.get(this.accountId);\n            if (!account) {\n                context.addError('accountId', \"Invalid account.\");\n            }\n        }\n        else {\n            // The accountId is null - is that OK?\n            if (this.amount === 0 || this.pending) {\n                // Yes, that's fine. If the amount is $0 or the transaction is pending, the account does not matter.\n            }\n            else {\n                context.addWarning('accountId', __(\"Set the account of this transaction.\"));\n            }\n        }\n        this.detail.forEach(detail => {\n            if (detail === undefined) {\n                throw new Error('Unexpectedly undefined detail entry.');\n            }\n            if (detail.categoryId !== null) {\n                const category = context.budget.categories.get(detail.categoryId) || null;\n                if (category) {\n                    if (account) {\n                        // Check that the account's currency matches the category's currency\n                        if (account.currencyCode !== category.currencyCode) {\n                            context.addError('detail', \"A Transaction's category's currency must match its account currency.\");\n                        }\n                    }\n                }\n                else {\n                    context.addError('detail', \"Invalid category.\");\n                }\n            }\n            else {\n                // No category is set - is that OK?\n                if (this.amount === 0 || this.pending || this.isTransfer) {\n                    // Yes, that's fine.\n                }\n                else {\n                    context.addWarning('detail', __(\"This transaction is missing a category.\"));\n                }\n            }\n        });\n    }\n    /** Is this a split transaction? */\n    get isSplit() { return this.detail.size > 1; }\n    /** Get the sum of the amounts of the 'detail' entries */\n    get amount() {\n        if (this._cachedAmount === undefined) {\n            this._cachedAmount = this.detail.reduce((acc, detailEntry) => acc + detailEntry.amount, 0);\n        }\n        return this._cachedAmount;\n    }\n    /**\n     * Given a JS object which may be JSON-serializable, convert it to the proper\n     * fully-typed, immutable representation required to initialize or modify\n     * a Transaction object.\n     *\n     * The result of this function can be passed to the Transaction constructor\n     * or to the .merge() method.\n     *\n     * @param {Object} values - Values for the fields of this transaction\n     * @returns {Object} - Cleaned values for the fields of this transaction\n     */\n    static cleanArgs(values) {\n        values = Object.assign({}, values); // Don't modify the parameter; create a copy\n        if (typeof values.date === 'number') {\n            values.date = new PDate(values.date);\n        }\n        else {\n            assert(values.date === null || values.date === undefined || values.date instanceof PDate, 'invalid date value');\n        }\n        if (values.detail !== undefined) {\n            // 'detail' can be any iterable with TransactionDetail-typed values or\n            // objects used to initialize TransactionDetail\n            values.detail = Immutable.List(values.detail.map(d => d instanceof TransactionDetail ? d : new TransactionDetail(d)));\n        }\n        if ('metadata' in values && !Immutable.Map.isMap(values.metadata)) {\n            values.metadata = Immutable.fromJS(values.metadata);\n        }\n        return values;\n    }\n}\n//# sourceMappingURL=transaction.js.map","const prefix = 'PRPHCY_';\nexport const PROPHECY_ACTION_PREFIX = prefix;\n////////////////////////////////////////////////////////////////////////////////\n// Miscellaneous actions\n/**\n * NOOP:\n * Action that does nothing.\n *\n * This is generated as the inverse of an action that had no effect.\n */\nexport const NOOP = prefix + 'NOOP';\n////////////////////////////////////////////////////////////////////////////////\n// Budget settings\n/**\n * SET_CURRENCY:\n * Action to change the currency of this budget.\n *\n * Arguments:\n *  - currencyCode (string): New ISO 4217 currency code (e.g. 'USD')\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_CURRENCY = prefix + 'SET_CURRENCY';\n/**\n * SET_DATE:\n * Action to change the start and/or end date of this budget.\n *\n * Arguments:\n *  - startDate (int): PDate value for the start date, cast to integer (optional)\n *  - endDate (int): PDate value for the end date, cast to integer (optional)\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_DATE = prefix + 'SET_DATE';\n/**\n * SET_NAME:\n * Action to change the name of this budget.\n *\n * Arguments:\n *  - name (string): New name of the budget\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const SET_NAME = prefix + 'SET_NAME';\n////////////////////////////////////////////////////////////////////////////////\n// Accounts\n/**\n * DELETE_ACCOUNT:\n * Action to delete an account. Will set the 'accountId' of any linked transactions to null.\n *\n * Arguments:\n *  - id (int): The ID of the account to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_ACCOUNT = prefix + 'DELETE_ACCT';\n/**\n * UPDATE_ACCOUNT:\n * Action to create/modify an account\n *\n * Arguments:\n *  - id (int): The ID of the account to create/modify\n *  - data (object): fields to set on the new/modifed account (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the account in the list (optional)\n *  - linkNullTransactions (Array): Array of transaction IDs whose accountId will be\n *    set to this account's ID if (1) that transaction's accountId is null, and (2)\n *    this is an account insertion (not update). This parameter mostly exists so\n *    that DELETE_ACCOUNT can be inverted to a single action. (optional)\n */\nexport const UPDATE_ACCOUNT = prefix + 'UPDATE_ACCT';\n////////////////////////////////////////////////////////////////////////////////\n// Categories\n/**\n * DELETE_CATEGORY:\n * Action to delete a category.\n *\n * Arguments:\n *  - id (int): The ID of the category to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_CATEGORY = prefix + 'DELETE_CAT';\n/**\n * UPDATE_CATEGORY:\n * Action to create/modify a category\n *\n * Arguments:\n *  - id (int): The ID of the category to create/modify\n *  - data (object): fields to set on the new/modifed category (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the category within the group (optional)\n *  - linkTransactionDetails (Array): Array of tuples of [transaction ID, details index]\n *    that identifies TransactionDetails entries whose categoryId will be\n *    set to this category's ID if (1) that transaction's categoryId is null, and (2)\n *    this is an category insertion (not update). This parameter mostly exists so\n *    that DELETE_CATEGORY can be inverted to a single action. (optional)\n */\nexport const UPDATE_CATEGORY = prefix + 'UPDATE_CAT';\n////////////////////////////////////////////////////////////////////////////////\n// Category Groups\n/**\n * DELETE_CATEGORY_GROUP:\n * Action to delete a category group. It must not contain any categories.\n *\n * Arguments:\n *  - id (int): The ID of the category group to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_CATEGORY_GROUP = prefix + 'DELETE_CG';\n/**\n * UPDATE_CATEGORY_GROUP:\n * Action to create/modify a category group\n *\n * Arguments:\n *  - id (int): The ID of the category group to create/modify\n *  - data (object): fields to set on the new/modifed category group (optional)\n *  - budgetId (string): ID of the budget (optional)\n *  - index (int): Index/position of the category group in the list (optional)\n */\nexport const UPDATE_CATEGORY_GROUP = prefix + 'UPDATE_CG';\n////////////////////////////////////////////////////////////////////////////////\n// Transactions\n/**\n * DELETE_TRANSACTION:\n * Action to delete a transaction\n *\n * Arguments:\n *  - id (int): The ID of the transaction to delete\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const DELETE_TRANSACTION = prefix + 'DELETE_TXN';\n/**\n * UPDATE_TRANSACTION:\n * Action to create/modify a transaction\n *\n * Arguments:\n *  - id (int): The ID of the transaction to create/modify\n *  - data (object): fields to set on the new/modifed transactions\n *  - budgetId (string): ID of the budget (optional)\n */\nexport const UPDATE_TRANSACTION = prefix + 'UPDATE_TXN';\n/**\n * UPDATE_MULTIPLE_TRANSACTIONS\n * Action to atomically update multiple transactions.\n *\n * This is the only \"compound action\" that itself contains\n * multiple other actions. \"Compound actions\" are kept to a minimum\n * in order to make it easier for other reducers to watch for\n * changes using actions. (e.g. if there were a generic MULTIPLE_ACTIONS\n * action, a reducer that wanted to watch for changes to the budget name\n * would have to watch for both SET_NAME and MULTIPLE_ACTIONS containing\n * SET_NAME).\n *\n * Arguments:\n *  - subActions (array): array of UPDATE_TRANSACTION and DELETE_TRANSACTION\n *       actions to carry out as part of this action.\n *  - budgetId (string): ID of the budget (optional)\n **/\nexport const UPDATE_MULTIPLE_TRANSACTIONS = prefix + 'UPDATE_MANY_TXN';\n//# sourceMappingURL=actions.js.map","/**\n * Prophecy Engine JavaScript API\n *\n * All of these classes should be namespaced within a 'Prophecy' global.\n */\nimport * as Imm from 'immutable';\nexport const Immutable = Imm;\nexport { PRecord } from './precord';\nexport { Account } from './account';\nexport { Budget } from './budget';\nexport { Category, CategoryGroup, CategoryRule, CategoryRulePeriod } from './category';\nexport { Currency, CurrencyFormatter, SUPPORTED_CURRENCIES } from './currency';\nexport { default as PDate } from './pdate';\nexport { Transaction, TransactionDetail } from './transaction';\nexport { reducer, inverter } from './redux/prophecy_redux';\nimport * as _actions from './redux/actions';\nexport const actions = _actions;\nimport { majorVersion, minorVersion } from './budget';\nexport const version = { major: majorVersion, minor: minorVersion };\n//# sourceMappingURL=prophecy.js.map"],"names":["assert","cond","msg","Error","assertIsNumber","v","Number","isNaN","assertPositiveIntegerOrNull","parseInt","toString","__","str","triplet_to_days_value","year","month","day","MONTHS","JAN","DEC","PDate","daysInMonth","nyear","days_value","isLeapYear","MONTH_SUMS_LEAP_YEAR","MONTH_SUMS_NORMAL_YEAR","_createOrderedCategoryMap","categories","categoryGroups","categoryGroupIdsOrdered","keySeq","Immutable.OrderedMap","sortBy","category","groupId","keyOf","map","c","id","reducer","state","Budget","action","type","startsWith","ACTION.PROPHECY_ACTION_PREFIX","undefined","budgetId","ACTION.SET_CURRENCY","set","currencyCode","ACTION.SET_DATE","changes","dateKey","merge","ACTION.SET_NAME","name","ACTION.DELETE_ACCOUNT","deleteAccount","ACTION.UPDATE_ACCOUNT","existingAccount","accounts","get","acct","Account","newState","data","updateAccount","linkNullTransactions","nullTransactions","transactions","filter","t","accountId","forEach","txnId","txn","updateTransaction","index","positionAccount","ACTION.DELETE_CATEGORY","deleteCategory","ACTION.UPDATE_CATEGORY","existingCategory","Category","updateCategory","cleanArgs","positionCategory","linkTransactionDetails","detailsIndex","updateIn","categoryId","ACTION.DELETE_CATEGORY_GROUP","deleteCategoryGroup","ACTION.UPDATE_CATEGORY_GROUP","existingGroup","group","CategoryGroup","updateCategoryGroup","positionCategoryGroup","ACTION.DELETE_TRANSACTION","deleteTransaction","ACTION.UPDATE_TRANSACTION","Transaction","ACTION.UPDATE_MULTIPLE_TRANSACTIONS","subActions","subAction","inverter","result","ACTION.NOOP","startDate","endDate","toJS","valueSeq","acctJS","inverse","key","oldValue","oldIndex","detail","idx","push","cat","categoryJS","groupJS","txnJS","inverseSubActions","inverseSubAction","reverse","global","factory","module","this","createClass","ctor","superClass","prototype","Object","create","constructor","Iterable","value","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","Array","ii","ensureSize","iter","size","__iterate","returnTrue","wrapIndex","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","next","iteratorValue","k","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","array","_array","ObjectSeq","object","keys","_object","_keys","IterableSeq","_iterable","IteratorSeq","iterator","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","isArray","TypeError","maybeIndexedSeqFromValue","seqIterate","fn","useKeys","cache","_cache","maxIndex","entry","__iterateUncached","seqIterator","__iteratorUncached","fromJS","json","converter","fromJSWith","fromJSDefault","parentJSON","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","cacheResult","_","allEqual","bSize","has","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","invariant","condition","error","Range","start","step","abs","_start","_end","_step","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","isExtensible","defineProperty","enumerable","configurable","writable","apply","arguments","nodeType","node","uniqueID","documentElement","assertNotInfinite","Map","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","prev","__prev","makeMap","root","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","shift","update","isLeafNode","mergeIntoNode","newNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","collection","x","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","val","canEdit","newArray","spliceIn","newLen","after","spliceOut","pop","List","empty","emptyList","isList","makeList","VNode","toArray","list","setSize","i","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","from","left","to","right","DONE","values","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","slice","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","OrderedMap","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","context","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","groups","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","stack","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","getPrototypeOf","recordName","names","setProp","bind","Set","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","head","StackPrototype","_head","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","keyMapper","entryMapper","not","neg","quoteString","JSON","stringify","String","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","murmurHashOfSize","hashMerge","imul","SLICE$0","Keyed","Indexed","Symbol","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","hasOwnProperty","searchValue","indexOf","lastIndexOf","other","possibleIndex","floor","offsetValue","d","e","WeakMap","keyValues","deleteIn","updatedValue","mergeWith","mergeIn","m","mergeDeepIn","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","splice","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","indexedIterable","defaultVal","_empty","fromKeys","union","intersect","originalSet","subtract","peek","pushAll","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","isEmpty","countBy","entriesSequence","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","last","lastKeyOf","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","ValidationResult","[object Object]","__validationMessages","warnings","errors","fieldName","field","overallIssues","getFieldIssues","allIssues","freeze","Warning","ValidationContext","budget","validationResult","message","_pushMessage","PRecord","Immutable","super","_skipChecks","_checkInvariants","newRecord","_validate","validateForBudget","err","Currency","code","symbols","decimals","round","SUPPORTED_CURRENCIES","CAD","EUR","USD","JPY","XBT","CustomNumberFormat","Intl","NumberFormat","CurrencyFormatter","defaultCurrency","locales","rawFormatters","formatters","currency","formatter","style","minimumFractionDigits","maximumFractionDigits","symbol","isDefaultCurrency","symbolConflicts","format","pow","replace","initialBalance","metadata","Immutable.Map","assign","Immutable.fromJS","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DAYS","SUN","MON","TUE","WED","THU","FRI","SAT","NORMAL_YEAR","LEAP_YEAR","DAYS_PER_MONTH","substr","charAt","strings","fromString","raw","js_date","Date","getFullYear","getMonth","getDate","daysSinceMillenium","centuries","A","dayOfWeek","dayOfYear","CategoryRulePeriod","allowedRuleValues","Day","Week","Month","Year","CategoryRule","repeatN","period","dateBegin","dateEnd","firstDay","lastDay","daysDiff","months","countOccurrencesBetween","rules","notes","Immutable.List","rule","addError","otherRule","j","otherStartDate","otherEndDate","isAutomatic","r","TransactionDetail","description","date","who","userId","pending","isTransfer","account","addWarning","isSplit","_cachedAmount","acc","detailEntry","_accounts","_categories","_categoryGroups","_transactions","majorVersion","minorVersion","AccountMap","args","CategoryMap","CategoryGroupMap","TransactionMap","^a","^c","^g","^n","origValues","today","Immutable.Seq","cg","categoriesIterable","transactionSorter","assertIsValidForBudget","transaction","delete","origCategory","newIndex","groupCategories","newIndexOverall","newCategories","categoryGroup","newCategoryGroups","g","newAccount","newAccounts","newTransaction","sortRequired","oldTransaction","newTransactions","_accountBalances","accountBalances","transactionBalances","balance","_transactionAccountBalances","_computeBalances","transactionId","precedingTransactions","lastAccountTransaction","categoryBalancesOnDate","transactionCategoryBalances","budgetAmount","version","major","minor","dateField","typedLists","prefix","PROPHECY_ACTION_PREFIX","NOOP","SET_CURRENCY","SET_DATE","SET_NAME","DELETE_ACCOUNT","UPDATE_ACCOUNT","DELETE_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY_GROUP","UPDATE_CATEGORY_GROUP","DELETE_TRANSACTION","UPDATE_TRANSACTION","UPDATE_MULTIPLE_TRANSACTIONS","Imm","actions"],"mappings":"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"}